{"mappings":"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","sources":["Code/External/NGLP-Analytics/js/src/g001.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/index.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_assert_this_initialized.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_class_call_check.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_create_class.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_define_property.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_get.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_super_prop_base.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_get_prototype_of.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_inherits.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_set_prototype_of.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_possible_constructor_return.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_type_of.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_sliced_to_array.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_array_with_holes.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_iterable_to_array.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_non_iterable_rest.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_to_consumable_array.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_array_without_holes.js","Code/External/NGLP-Analytics/js/node_modules/@swc/helpers/src/_non_iterable_spread.js","Code/External/NGLP-Analytics/js/vendor/edges2/dependencies/jquery.js","Code/External/NGLP-Analytics/js/vendor/edges2/dependencies/es.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/datasources/es7x.js","Code/External/NGLP-Analytics/js/vendor/edges2/dependencies/moment.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/core.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/utils.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/adapters/es_adapter.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/adapters/adapter.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/components/Chart.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/nvd3/MultibarRenderer.js","Code/External/NGLP-Analytics/js/vendor/edges2/dependencies/nvd3.js","Code/External/NGLP-Analytics/js/vendor/edges2/dependencies/d3.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/nvd3/nvd3utils.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/components/GeohashedZoomableMap.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/components/maputils.js","Code/External/NGLP-Analytics/js/node_modules/latlon-geohash/latlon-geohash.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/googlemap/GoogleMapView.js","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/dist/index.esm.js","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/cluster.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/algorithms/utils.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/algorithms/core.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/algorithms/grid.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/algorithms/noop.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/algorithms/kmeans.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/algorithms/dbscan.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/algorithms/supercluster.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/renderer.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/overlay-view-safe.ts","Code/External/NGLP-Analytics/js/node_modules/@googlemaps/markerclusterer/src/markerclusterer.ts","Code/External/NGLP-Analytics/js/node_modules/@turf/helpers/dist/es/index.js","Code/External/NGLP-Analytics/js/node_modules/@turf/clusters-kmeans/dist/es/index.js","Code/External/NGLP-Analytics/js/node_modules/@turf/clone/dist/es/index.js","Code/External/NGLP-Analytics/js/node_modules/@turf/meta/dist/es/index.js","Code/External/NGLP-Analytics/js/node_modules/skmeans/dist/node/main.js","Code/External/NGLP-Analytics/js/node_modules/skmeans/main.js","Code/External/NGLP-Analytics/js/node_modules/skmeans/dist/node/distance.js","Code/External/NGLP-Analytics/js/node_modules/skmeans/distance.js","Code/External/NGLP-Analytics/js/node_modules/skmeans/dist/node/kinit.js","Code/External/NGLP-Analytics/js/node_modules/skmeans/kinit.js","Code/External/NGLP-Analytics/js/node_modules/@turf/clusters-dbscan/dist/es/index.js","Code/External/NGLP-Analytics/js/node_modules/@turf/distance/dist/es/index.js","Code/External/NGLP-Analytics/js/node_modules/@turf/invariant/dist/es/index.js","Code/External/NGLP-Analytics/js/node_modules/density-clustering/lib/index.js","Code/External/NGLP-Analytics/js/node_modules/density-clustering/lib/DBSCAN.js","Code/External/NGLP-Analytics/js/node_modules/density-clustering/lib/KMEANS.js","Code/External/NGLP-Analytics/js/node_modules/density-clustering/lib/OPTICS.js","Code/External/NGLP-Analytics/js/node_modules/density-clustering/lib/PriorityQueue.js","Code/External/NGLP-Analytics/js/node_modules/supercluster/index.js","Code/External/NGLP-Analytics/js/node_modules/kdbush/src/index.js","Code/External/NGLP-Analytics/js/node_modules/kdbush/src/sort.js","Code/External/NGLP-Analytics/js/node_modules/kdbush/src/range.js","Code/External/NGLP-Analytics/js/node_modules/kdbush/src/within.js","Code/External/NGLP-Analytics/js/node_modules/fast-deep-equal/es6/index.js","Code/External/NGLP-Analytics/js/vendor/edges2/dependencies/google.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/components/ORTermSelector.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/bs3/CheckboxORTermSelector.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/bs3/FixedSelectionCheckboxORTermSelector.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/nvd3/HorizontalMultibarRenderer.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/bs3/ChartDataTable.js","Code/External/NGLP-Analytics/js/src/nglpcommon.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/html/RelativeSizeBars.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/components/MultiDateRangeEntry.js","Code/External/NGLP-Analytics/js/vendor/edges2/src/renderers/bs3/MultiDateRangeCombineSelector.js"],"sourcesContent":["import {$} from \"../vendor/edges2/dependencies/jquery\"\nimport {es} from \"../vendor/edges2/dependencies/es\"\nimport {moment} from \"../vendor/edges2/dependencies/moment\";    // FIXME: note that we want to replace moment with something newer, just using it for now as it's here and a requirement anyway\n\nimport {Edge, Template} from \"../vendor/edges2/src/core\"\nimport {Chart, termSplitDateHistogram, nestedTerms} from \"../vendor/edges2/src/components/Chart\";\nimport {MultibarRenderer} from \"../vendor/edges2/src/renderers/nvd3/MultibarRenderer\";\nimport {htmlID, numFormat, idSelector, on, getParam} from \"../vendor/edges2/src/utils\";\nimport {GeohashedZoomableMap} from \"../vendor/edges2/src/components/GeohashedZoomableMap\";\nimport {GoogleMapView} from \"../vendor/edges2/src/renderers/googlemap/GoogleMapView\";\nimport {ORTermSelector} from \"../vendor/edges2/src/components/ORTermSelector\";\nimport {CheckboxORTermSelector} from \"../vendor/edges2/src/renderers/bs3/CheckboxORTermSelector\";\nimport {FixedSelectionCheckboxORTermSelector} from \"../vendor/edges2/src/renderers/bs3/FixedSelectionCheckboxORTermSelector\";\nimport {HorizontalMultibarRenderer} from \"../vendor/edges2/src/renderers/nvd3/HorizontalMultibarRenderer\";\nimport {ChartDataTable} from \"../vendor/edges2/src/renderers/bs3/ChartDataTable\";\n\nimport {extractPalette} from \"./nglpcommon\";\nimport {RelativeSizeBars} from \"../vendor/edges2/src/renderers/html/RelativeSizeBars\";\nimport {MultiDateRangeEntry} from \"../vendor/edges2/src/components/MultiDateRangeEntry\";\nimport {MultiDateRangeCombineSelector} from \"../vendor/edges2/src/renderers/bs3/MultiDateRangeCombineSelector\";\n\nglobal.nglp = {}\nnglp.g001 = {\n    active: {}\n}\n\nnglp.g001.init = function (params) {\n    if (!params) { params = {} }\n\n    var selector = params.selector || \"#g001\";\n    var search_url = params.searchUrl\n\n    var countFormat = numFormat({\n        thousandsSeparator: \",\"\n    });\n\n    let palette = extractPalette(\"g001.css\");\n\n    let interactionValueMap = {\n        \"investigation\" : \"VIEWS\",\n        \"export\" : \"EXPORTS\",\n        \"request\" : \"DOWNLOADS\"\n    }\n\n    let presentationOrder = [\n        \"investigation\",\n        \"export\",\n        \"request\"\n    ];\n\n    let initialDateRange = getInitialDateRange();\n\n    nglp.g001.active[selector] = new Edge({\n        selector: selector,\n        template: new nglp.g001.G001Template(),\n        searchUrl: search_url,\n        manageUrl : false,\n        openingQuery: new es.Query({\n            must : [\n                new es.TermsFilter({field: \"event.exact\", values: [\"request\", \"investigation\", \"export\"]}),\n                new es.TermsFilter({field: \"object_type.exact\", values: [\"article\", \"file\"]}),\n                new es.RangeFilter({field : \"occurred_at\", gte: initialDateRange.gte, lte: initialDateRange.lte}),\n                new es.GeoBoundingBoxFilter({\n                    field: \"location\",\n                    top_left: {\n                        \"lat\": 90,\n                        \"lon\": -180\n                    },\n                    bottom_right: {\n                        \"lat\": -90,\n                        \"lon\": 180\n                    }\n                })\n            ],\n            size: 0,\n            aggs: [\n                new es.DateHistogramAggregation({\n                    name: \"occurred_at\",\n                    field: \"occurred_at\",\n                    interval: \"1M\",\n                    aggs: [\n                        new es.TermsAggregation({\n                            name: \"events\",\n                            field: \"event.exact\"\n                        })\n                    ]\n                }),\n                new es.GeohashGridAggregation({\n                    name: \"geo\",\n                    field: \"location\",\n                    precision: 5    // NOTE: this needs to tie up with the zoomToPrecisionMap in the component\n                }),\n                new es.TermsAggregation({\n                    name: \"events\",\n                    field: \"event.exact\",\n                    aggs: [\n                        new es.TermsAggregation({\n                            name: \"formats\",\n                            field: \"format.exact\",\n                            size: 3\n                        })\n                    ]\n                })\n            ]\n        }),\n        components : [\n            new MultiDateRangeEntry({\n                id : \"g001-date-range\",\n                display: \"REPORT PERIOD:<br>\",\n                fields : [\n                    {field : \"occurred_at\", display: \"Event Date\"}\n                ],\n                autoLookupRange: true,\n                renderer : new MultiDateRangeCombineSelector({})\n            }),\n            new Chart({\n                id: \"g001-interactions-chart\",\n                dataFunction: termSplitDateHistogram({\n                    histogramAgg: \"occurred_at\",\n                    termsAgg: \"events\"\n                }),\n                rectangulate: true,\n                seriesSort: function(values) {\n                    return values.sort(function(a, b) {\n                        if (a.label < b.label) {\n                            return -1\n                        }\n                        if (a.label > b.label) {\n                            return 1\n                        }\n                        return 0;\n                    })\n                },\n                renderer : new MultibarRenderer({\n                    xTickFormat: function(d) { return d3.time.format('%b %y')(new Date(d))},\n                    color: function(d, i) {\n                        return palette[d.key]\n                    },\n                    yTickFormat : \",.0f\",\n                    showLegend: false,\n                    xAxisLabel: \"Occurred At\",\n                    yAxisLabel: \"Article Interactions\",\n                    marginLeft: 80,\n                    stacked: true,\n                    groupSpacing: 0.7\n                })\n            }),\n            new Chart({\n                id: \"g001-interactions-table\",\n                dataFunction: termSplitDateHistogram({\n                    histogramAgg: \"occurred_at\",\n                    termsAgg: \"events\"\n                }),\n                rectangulate: true,\n                seriesSort: function(values) {\n                    return values.sort(function(a, b) {\n                        if (a.label < b.label) {\n                            return -1\n                        }\n                        if (a.label > b.label) {\n                            return 1\n                        }\n                        return 0;\n                    })\n                },\n                renderer : new ChartDataTable({\n                    labelFormat: function(d) { return d3.time.format('%b %y')(new Date(d))},\n                    valueFormat: countFormat,\n                    headerFormat: function(d) {\n                        return interactionValueMap[d] || d;\n                    },\n                    seriesOrderFunction: function(dataSeries) {\n                        let ordered = []\n                        for (let j = 0; j < presentationOrder.length; j++) {\n                            for (let i = 0; i < dataSeries.length; i++) {\n                                let series = dataSeries[i];\n                                if (series.key === presentationOrder[j]) {\n                                    ordered.push(series);\n                                }\n                            }\n                        }\n                        return ordered;\n                    }\n                })\n            }),\n            new GeohashedZoomableMap({\n                id: \"g001-interactions-map\",\n                geoHashAggregation: \"geo\",\n                zoomToPrecisionMap : {\n                    0: 5,\n                    3: 7,\n                    5: 9\n                },\n                renderer: new GoogleMapView({\n                    cluster: true,\n                    labelFunction : (loc) => {\n                        // be very careful changing this, the MapPointRenderer relies on this as the way\n                        // to find out what the count of the nested cluster is\n                        return loc.count.toString()\n                    },\n                    renderCluster : new MapPointRenderer(),\n                    reQueryOnBoundsChange: true,\n                    clusterIcons: {\n                        0: \"/static/img/m1.png\"\n                        // 2: \"/static/img/m2.png\",\n                        // 20: \"/static/img/m3.png\",\n                        // 50: \"/static/img/m4.png\",\n                        // 100: \"/static/img/m5.png\"\n                    }\n                })\n            }),\n            new ORTermSelector({\n                id: \"g001-interactions\",\n                field: \"event.exact\",\n                syncCounts: false,\n                lifecycle: \"update\",\n                updateType: \"fresh\",\n                orderBy: \"term\",\n                orderDir: \"asc\",\n                valueMap: interactionValueMap,\n                renderer: new FixedSelectionCheckboxORTermSelector({\n                    title: \"Interactions\",\n                    open: true,\n                    togglable: false,\n                    showCount: true,\n                    countFormat: countFormat,\n                    fixedTerms : presentationOrder\n                })\n            }),\n            new ORTermSelector({\n                id: \"g001-format\",\n                field: \"format.exact\",\n                size: 10,\n                syncCounts: false,\n                lifecycle: \"static\",\n                orderBy: \"count\",\n                orderDir: \"desc\",\n                valueFunction : (v) => {\n                    return v.toUpperCase();\n                },\n                renderer: new CheckboxORTermSelector({\n                    title: \"Format\",\n                    open: true,\n                    togglable: false,\n                    showCount: true,\n                    countFormat: countFormat\n                })\n            }),\n            new Chart({\n                id: \"g001-top-downloads\",\n                dataFunction: nestedTerms({\n                    aggs: [\n                        {events: {keys : [\"request\"], aggs: [\"formats\"]}}\n                    ],\n                    seriesName: \"request\"\n                }),\n                // renderer: new HorizontalMultibarRenderer({\n                //     title: \"Downloads\",\n                //     legend: false,\n                //     valueFormat: countFormat,\n                //     color: function(d, i) {\n                //         return palette[d.key]\n                //     },\n                //     showXAxis: true,\n                //     showYAxis: false,\n                //     marginLeft: 0,\n                //     marginRight: 0,\n                //     marginTop: 0,\n                //     marginBottom: 0,\n                //     groupSpacing: 0.7,\n                //     onUpdate: () => {\n                //         let ticks = $(\"#g001-top-downloads .tick text\");\n                //         for (let i = 0; i < ticks.length; i++) {\n                //             let tick = $(ticks[i]);\n                //             tick.attr(\"x\", 0);\n                //             tick.attr(\"y\", 20);\n                //             tick.css(\"text-anchor\", \"start\");\n                //         }\n                //     }\n                // })\n                renderer: new RelativeSizeBars({\n                    title: \"Downloads\",\n                    countFormat: countFormat\n                })\n            }),\n            new Chart({\n                id: \"g001-top-exports\",\n                dataFunction: nestedTerms({\n                    aggs: [\n                        {events: {keys : [\"export\"], aggs: [\"formats\"]}}\n                    ],\n                    seriesName: \"export\"\n                }),\n                renderer: new RelativeSizeBars({\n                    title: \"Exports\",\n                    countFormat: countFormat\n                })\n                // renderer: new HorizontalMultibarRenderer({\n                //     title: \"Exports\",\n                //     legend: false,\n                //     valueFormat: countFormat,\n                //     color: function(d, i) {\n                //         return palette[d.key]\n                //     },\n                //     showXAxis: true,\n                //     showYAxis: false,\n                //     marginLeft: 0,\n                //     marginRight: 0,\n                //     marginTop: 0,\n                //     marginBottom: 0,\n                //     groupSpacing: 0.7,\n                //     onUpdate: () => {\n                //         let ticks = $(\"#g001-top-exports .tick text\");\n                //         for (let i = 0; i < ticks.length; i++) {\n                //             let tick = $(ticks[i]);\n                //             tick.attr(\"x\", 0);\n                //             tick.attr(\"y\", 20);\n                //             tick.css(\"text-anchor\", \"start\");\n                //         }\n                //     }\n                // })\n            })\n        ]\n    })\n}\n\nnglp.g001.G001Template = class extends Template {\n    constructor() {\n        super();\n        this.edge = false;\n        this.showing = \"chart\";\n        this.hidden = {};\n        this.namespace = \"g001-template\";\n    }\n\n    draw(edge) {\n        this.edge = edge;\n        let checkboxId = htmlID(this.namespace, \"show-as-table\");\n\n        let frame = `<div class=\"row header\">\n            <div class=\"col-xs-12\">\n                <h1>G001: Article  Downloads for  Unit Administrators</h1>\n                <h2>Article downloads by format, including landing page and metadata exports in aggregate</h2> \n            </div>\n        </div>\n        <div class=\"row controls\">\n            <div class=\"col-md-6\">\n                <ul class=\"nav\">\n                    <li><a href=\"#\">Go back to Dashboard</a></li>\n                    <li><a href=\"#\">Print this view to PDF</a></li>\n                </ul>\n            </div>\n            <div class=\"col-md-6\">\n                <div id=\"g001-date-range\"></div>\n            </div>\n        </div>\n        <div class=\"row report-area\">\n            <div class=\"col-md-3\">\n                <div id=\"g001-interactions\"></div>\n                <div id=\"g001-format\"></div>\n            </div>\n            <div class=\"col-md-9\">\n                <p><input type=\"checkbox\" name=\"${checkboxId}\" id=\"${checkboxId}\"> Show as table</p>\n                <div id=\"g001-interactions-chart\"></div>\n                <div id=\"g001-interactions-table\" style=\"display:none\">TABLE HERE</div>\n                <div id=\"g001-interactions-map\"></div>\n                <div class=\"row formats-header\">\n                    <div class=\"col-xs-12\">\n                        <h3>Top 3 Formats</h3>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div id=\"g001-top-downloads\"></div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div id=\"g001-top-exports\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>`;\n\n        edge.context.html(frame);\n\n        let checkboxSelector = idSelector(this.namespace, \"show-as-table\");\n        on(checkboxSelector, \"change\", this, \"toggleTable\");\n    }\n\n    toggleTable() {\n        let chart = this.edge.jq(\"#g001-interactions-chart\");\n        let table = this.edge.jq(\"#g001-interactions-table\");\n        if (this.showing === \"chart\") {\n            chart.hide();\n            table.show();\n            this.showing = \"table\"\n        } else {\n            table.hide();\n            chart.show();\n            this.showing = \"chart\"\n            this.edge.getComponent({id: \"g001-interactions-chart\"}).draw();\n        }\n    }\n}\n\nclass MapPointRenderer {\n    constructor(params) {}\n\n    render(cluster, stats) {\n        let sum = 0;\n        for (let i = 0; i < cluster.markers.length; i++) {\n            let marker = cluster.markers[i];\n            sum += parseInt(marker.label.text);\n        }\n        return new google.maps.Marker({\n            position: cluster.position,\n            icon: \"/static/img/m1.png\",\n            label: {\n                text: String(sum)\n            },\n            // adjust zIndex to be above other markers\n            zIndex: Number(google.maps.Marker.MAX_ZINDEX) + sum,\n        });\n    }\n}\n\nfunction getInitialDateRange() {\n    let now = moment();\n    let lte = now.format(\"YYYY-MM-DD\");\n    let gte = now.subtract(1, \"years\").format(\"YYYY-MM-DD\");\n    return {gte: gte, lte: lte}\n}\n\nexport default nglp;","export { default as applyDecoratedDescriptor } from './_apply_decorated_descriptor';\nexport { default as arrayWithHoles } from './_array_with_holes';\nexport { default as arrayWithoutHoles } from './_array_without_holes';\nexport { default as assertThisInitialized } from './_assert_this_initialized';\nexport { default as asyncGenerator } from './_async_generator';\nexport { default as asyncGeneratorDelegate } from './_async_generator_delegate';\nexport { default as asyncIterator } from './_async_iterator';\nexport { default as asyncToGenerator } from './_async_to_generator';\nexport { default as awaitAsyncGenerator } from './_await_async_generator';\nexport { default as awaitValue } from './_await_value';\nexport { default as classCallCheck } from './_class_call_check';\nexport { default as classNameTDZError } from './_class_name_tdz_error';\nexport { default as classPrivateFieldGet } from './_class_private_field_get';\nexport { default as classPrivateFieldLooseBase } from './_class_private_field_loose_base';\nexport { default as classPrivateFieldSet } from './_class_private_field_set';\nexport { default as classPrivateMethodGet } from './_class_private_method_get';\nexport { default as classPrivateMethodSet } from './_class_private_method_set';\nexport { default as classStaticPrivateFieldSpecGet } from './_class_static_private_field_spec_get';\nexport { default as classStaticPrivateFieldSpecSet } from './_class_static_private_field_spec_set';\nexport { default as construct } from './_construct';\nexport { default as createClass } from './_create_class';\nexport { default as decorate } from './_decorate';\nexport { default as defaults } from './_defaults';\nexport { default as defineEnumerableProperties } from './_define_enumerable_properties';\nexport { default as defineProperty } from './_define_property';\nexport { default as extends } from './_extends';\nexport { default as get } from './_get';\nexport { default as getPrototypeOf } from './_get_prototype_of';\nexport { default as inherits } from './_inherits';\nexport { default as inheritsLoose } from './_inherits_loose';\nexport { default as initializerDefineProperty } from './_initializer_define_property';\nexport { default as initializerWarningHelper } from './_initializer_warning_helper';\nexport { default as _instanceof } from './_instanceof';\nexport { default as interopRequireDefault } from './_interop_require_default';\nexport { default as interopRequireWildcard } from './_interop_require_wildcard';\nexport { default as isNativeFunction } from './_is_native_function';\nexport { default as iterableToArray } from './_iterable_to_array';\nexport { default as iterableToArrayLimit } from './_iterable_to_array_limit';\nexport { default as iterableToArrayLimitLoose } from './_iterable_to_array_limit_loose';\nexport { default as jsx } from './_jsx';\nexport { default as newArrowCheck } from './_new_arrow_check';\nexport { default as nonIterableRest } from './_non_iterable_rest';\nexport { default as nonIterableSpread } from './_non_iterable_spread';\nexport { default as objectSpread } from './_object_spread';\nexport { default as objectWithoutProperties } from './_object_without_properties';\nexport { default as objectWithoutPropertiesLoose } from './_object_without_properties_loose';\nexport { default as possibleConstructorReturn } from './_possible_constructor_return';\nexport { default as readOnlyError } from './_read_only_error';\nexport { default as set } from './_set';\nexport { default as setPrototypeOf } from './_set_prototype_of';\nexport { default as skipFirstGeneratorNext } from './_skip_first_generator_next';\nexport { default as slicedToArray } from './_sliced_to_array';\nexport { default as slicedToArrayLoose } from './_sliced_to_array_loose';\nexport { default as superPropBase } from './_super_prop_base';\nexport { default as taggedTemplateLiteral } from './_tagged_template_literal';\nexport { default as taggedTemplateLiteralLoose } from './_tagged_template_literal_loose';\nexport { default as _throw } from './_throw';\nexport { default as toArray } from './_to_array';\nexport { default as toConsumableArray } from './_to_consumable_array';\nexport { default as toPrimitive } from './_to_primitive';\nexport { default as toPropertyKey } from './_to_property_key';\nexport { default as typeOf } from './_type_of';\nexport { default as wrapAsyncGenerator } from './_wrap_async_generator';\nexport { default as wrapNativeSuper } from './_wrap_native_super';\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import superPropBase from './_super_prop_base';\n\nfunction get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    get = Reflect.get;\n  } else {\n    get = function get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver || target);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return get(target, property, receiver);\n}\n\nexport default function _get(target, property, reciever) {\n  return get(target, property, reciever);\n}\n","import getPrototypeOf from './_get_prototype_of';\n\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n","function getPrototypeOf(o) {\n  getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return getPrototypeOf(o);\n}\n\nexport default function _getPrototypeOf(o) {\n  return getPrototypeOf(o);\n}","import setPrototypeOf from './_set_prototype_of';\n\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n","function setPrototypeOf(o, p) {\n  setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return setPrototypeOf(o, p);\n}\n\nexport default function _setPrototypeOf(o, p) {\n  return setPrototypeOf(o, p);\n}\n","import assertThisInitialized from './_assert_this_initialized';\nimport _typeof from './_type_of';\n\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n","export default function _typeof(obj) {\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n","import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n","import arrayWithoutHoles from './_array_without_holes';\nimport iterableToArray from './_iterable_to_array';\nimport nonIterableSpread from './_non_iterable_spread';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n","var $ = window.$;\nexport {$};","export {es} from '../src/datasources/es7x'\n// note that the import path is wrong, because this file is intended to be copied up one level\n// and at that point the import path will be correct","import {$} from '../../dependencies/jquery';\n\nclass Aggregation {\n    static type = \"aggregation\"\n\n    constructor(params) {\n        this.name = params.name;\n        this.aggs = params.aggs || [];\n    }\n\n    addAggregation(agg) {\n        for (var i = 0; i < this.aggs.length; i++) {\n            if (this.aggs[i].name === agg.name) {\n                return;\n            }\n        }\n        this.aggs.push(agg);\n    }\n\n    removeAggregation() {};\n    clearAggregations() {};\n\n    // for use by sub-classes, for their convenience in rendering\n    // the overall structure of the aggregation to an object\n    _make_aggregation(type, body) {\n        var obj = {};\n        obj[this.name] = {};\n        obj[this.name][type] = body;\n\n        if (this.aggs.length > 0) {\n            obj[this.name][\"aggs\"] = {};\n            for (var i = 0; i < this.aggs.length; i++) {\n                $.extend(obj[this.name][\"aggs\"], this.aggs[i].objectify())\n            }\n        }\n\n        return obj;\n    }\n\n    _parse_wrapper(obj, type) {\n        this.name = Object.keys(obj)[0];\n        var body = obj[this.name][type];\n\n        var aggs = obj[this.name].aggs ? obj[this.name].aggs : obj[this.name].aggregations;\n        if (aggs) {\n            var anames = Object.keys(aggs);\n            for (var i = 0; i < anames.length; i++) {\n                var name = anames[i];\n                var agg = aggs[anames[i]];\n                var subtype = Object.keys(agg)[0];\n                var raw = {};\n                raw[name] = agg;\n                var oa = es.aggregationFactory(subtype, {raw: raw});\n                if (oa) {\n                    this.addAggregation(oa);\n                }\n            }\n        }\n\n        return body;\n    }\n}\n\nclass Filter {\n    static type = \"filter\"\n\n    constructor(params) {\n        this.field = params.field;\n        this.type_name = params.type_name;\n    }\n\n    matches(other) {\n        return this._baseMatch(other);\n    }\n\n    _baseMatch(other) {\n        // type must match\n        if (other.type_name !== this.type_name) {\n            return false;\n        }\n        // field (if set) must match\n        if (other.field && other.field !== this.field) {\n            return false;\n        }\n        // otherwise this matches\n        return true;\n    }\n\n    objectify() {};\n    parse() {};\n}\n\nfunction _classExtends(clazz, ref) {\n    if (clazz.__proto__ === null) {\n        return false;\n    }\n    if (clazz.__proto__ === ref) {\n        return true;\n    }\n    else {\n        return _classExtends(clazz.__proto__, ref);\n    }\n}\n\n/** @namespace */\nvar es = {\n\n    /////////////////////////////////////////////////////\n    // fixed properties, like special characters, etc\n\n    // The reserved characters in elasticsearch query strings\n    // Note that the \"\\\" has to go first, as when these are substituted, that character\n    // will get introduced as an escape character\n    specialChars : [\"\\\\\", \"+\", \"-\", \"=\", \"&&\", \"||\", \">\", \"<\", \"!\", \"(\", \")\", \"{\", \"}\", \"[\", \"]\", \"^\", '\"', \"~\", \"*\", \"?\", \":\", \"/\"],\n\n    // FIXME: specialChars is not currently used for encoding, but it would be worthwhile giving the option\n    // to allow/disallow specific values, but that requires a much better (automated) understanding of the\n    // query DSL\n\n    // the reserved special character set with * and \" removed, so that users can do quote searches and wildcards\n    // if they want\n    specialCharsSubSet : [\"\\\\\", \"+\", \"-\", \"=\", \"&&\", \"||\", \">\", \"<\", \"!\", \"(\", \")\", \"{\", \"}\", \"[\", \"]\", \"^\", \"~\", \"?\", \":\", \"/\"],\n\n    // values that have to be in even numbers in the query or they will be escaped\n    characterPairs : ['\"'],\n\n    // distance units allowed by ES\n    distanceUnits : [\"km\", \"mi\", \"miles\", \"in\", \"inch\", \"yd\", \"yards\", \"kilometers\", \"mm\", \"millimeters\", \"cm\", \"centimeters\", \"m\", \"meters\"],\n\n    // request method to be used throughout.  Set this before using the module if you want it different\n    requestMethod : \"get\",\n\n    // add request headers (such as Auth) if you need to\n    requestHeaders : false,\n\n    Filter: Filter,\n    Aggregation: Aggregation,\n\n    ////////////////////////////////////////////////////\n\n    ////////////////////////////////////////////////////\n    // object factories\n\n    aggregationFactory : function(type, params) {\n        for (const [key, value] of Object.entries(es)) {\n            if (_classExtends(es[key], Aggregation)) {\n                if (es[key].type === type) {\n                    return new es[key](params);\n                }\n            }\n        }\n    },\n\n    filterFactory : function(type, params) {\n        // query string is a special case\n        if (type === \"query_string\") {\n            return new es.QueryString(params);\n        }\n\n        // otherwise auto-detect\n        for (const [key, value] of Object.entries(es)) {\n            if (_classExtends(es[key], Filter)) {\n                if (es[key].type === type) {\n                    return new es[key](params);\n                }\n            }\n        }\n    },\n\n    ////////////////////////////////////////////////////\n    /** @namespace */\n    /** Query objects for standard query structure */\n    /**\n     *\n     * @param filtered {Boolean} Is this an ES filtered query?\n     * @param size=10 {Number} What amount of results are required. ES defaults to 10.\n     * @param from {Number} Beginning point for results.\n     * @param fields {String[]} Required fields.\n     * @param aggs {String[]} ES aggregations.\n     * @param must {String[]} ES must query.\n     * @param source {String} ES source.\n     * @param should {String[]} ES should.\n     * @param mustNot {String[]} ES must not.\n     * @param partialFields ???\n     * @param scriptFields ???\n     * @param minimumShouldMatch ???\n     * @param facets {String[]} for older versions of ES\n     */\n    Query: class {\n        constructor(params) {\n            if (!params) { params = {}}\n            // properties that can be set directly (thought note that they may need to be read via their getters)\n            this.filtered = false;  // this is no longer present in es5.x+\n            this.trackTotalHits = true;   // FIXME: hard code this for the moment, we can introduce the ability to vary it later\n\n            this.size = es.getParam(params.size, false);\n            this.from = es.getParam(params.from, false);\n            this.fields = es.getParam(params.fields, []);\n            this.aggs = es.getParam(params.aggs, []);\n            this.must = es.getParam(params.must, []);\n            this.mustNot = es.getParam(params.mustNot, []);\n\n            // defaults from properties that will be set through their setters (see the bottom\n            // of the function)\n            this.queryString = false;\n            this.sort = [];\n\n            // ones that we haven't used yet, so are awaiting implementation\n            // NOTE: once we implement these, they also need to be considered in merge()\n            this.source = es.getParam(params.source, false);\n            this.should = es.getParam(params.should, []);\n            this.partialFields = es.getParam(params.partialField, false);\n            this.scriptFields = es.getParam(params.scriptFields, false);\n            this.minimumShouldMatch = es.getParam(params.minimumShouldMatch, false);\n            this.partialFields = es.getParam(params.partialFields, false);\n            this.scriptFields = es.getParam(params.scriptFields, false);\n\n            // for old versions of ES, so are not necessarily going to be implemented\n            this.facets = es.getParam(params.facets, []);\n\n            ///////////////////////////////////////////////////////////\n            // final part of construction - set the dynamic properties\n            // via their setters\n\n            if (params.queryString) {\n                this.setQueryString(params.queryString);\n            }\n\n            if (params.sort) {\n                this.setSortBy(params.sort);\n            }\n\n            // finally, if we're given a raw query, parse it\n            if (params.raw) {\n                this.parse(params.raw)\n            }\n        }\n\n        /////////////////////////////////////////////////\n        // getters and setters\n\n        getSize() {\n            if (this.size !== undefined && this.size !== false) {\n                return this.size;\n            }\n            return 10;\n        }\n\n        getFrom() {\n            if (this.from) {\n                return this.from\n            }\n            return 0;\n        }\n\n        addField(field) {\n            if ($.inArray(field, this.fields) === -1) {\n                this.fields.push(field);\n            }\n        }\n\n        setQueryString(params) {\n            var qs = params;\n            if (!(params instanceof es.QueryString)) {\n                if ($.isPlainObject(params)) {\n                    qs = new es.QueryString(params);\n                } else {\n                    qs = new es.QueryString({queryString: params});\n                }\n            }\n            this.queryString = qs;\n        }\n\n        getQueryString() {\n            return this.queryString;\n        }\n\n        removeQueryString() {\n            this.queryString = false;\n        }\n\n        setSortBy(params) {\n            // overwrite anything that was there before\n            this.sort = [];\n            // ensure we have a list of sort options\n            var sorts = params;\n            if (!$.isArray(params)) {\n                sorts = [params]\n            }\n            // add each one\n            for (var i = 0; i < sorts.length; i++) {\n                this.addSortBy(sorts[i]);\n            }\n        }\n\n        addSortBy(params) {\n            // ensure we have an instance of es.Sort\n            var sort = params;\n            if (!(params instanceof es.Sort)) {\n                sort = new es.Sort(params);\n            }\n            // prevent repeated sort options being added\n            for (var i = 0; i < this.sort.length; i++) {\n                var so = this.sort[i];\n                if (so.field === sort.field) {\n                    return;\n                }\n            }\n            // add the sort option\n            this.sort.push(sort);\n        }\n\n        prependSortBy(params) {\n            // ensure we have an instance of es.Sort\n            var sort = params;\n            if (!(params instanceof es.Sort)) {\n                sort = new es.Sort(params);\n            }\n            this.removeSortBy(sort);\n            this.sort.unshift(sort);\n        }\n\n        removeSortBy(params) {\n            // ensure we have an instance of es.Sort\n            var sort = params;\n            if (!(params instanceof es.Sort)) {\n                sort = new es.Sort(params);\n            }\n            var removes = [];\n            for (var i = 0; i < this.sort.length; i++) {\n                var so = this.sort[i];\n                if (so.field === sort.field) {\n                    removes.push(i);\n                }\n            }\n            removes = removes.sort().reverse();\n            for (var i = 0; i < removes.length; i++) {\n                this.sort.splice(removes[i], 1);\n            }\n        }\n\n        getSortBy() {\n            return this.sort;\n        }\n\n        setSourceFilters(params) {\n            if (!this.source) {\n                this.source = {include: [], exclude: []};\n            }\n            if (params.include) {\n                this.source.include = params.include;\n            }\n            if (params.exclude) {\n                this.source.exclude = params.exclude;\n            }\n        }\n\n        addSourceFilters(params) {\n            if (!this.source) {\n                this.source = {include: [], exclude: []};\n            }\n            if (params.include) {\n                if (this.source.include) {\n                    Array.prototype.push.apply(this.source.include, params.include);\n                } else {\n                    this.source.include = params.include;\n                }\n            }\n            if (params.exclude) {\n                if (this.source.include) {\n                    Array.prototype.push.apply(this.source.include, params.include);\n                } else {\n                    this.source.include = params.include;\n                }\n            }\n        }\n\n        getSourceIncludes() {\n            if (!this.source) {\n                return [];\n            }\n            return this.source.include;\n        }\n\n        getSourceExcludes() {\n            if (!this.source) {\n                return [];\n            }\n            return this.source.exclude;\n        };\n\n        getAggregation(params) {\n            var name = params.name;\n            for (var i = 0; i < this.aggs.length; i++) {\n                var a = this.aggs[i];\n                if (a.name === name) {\n                    return a;\n                }\n            }\n        }\n\n        addAggregation(agg, overwrite) {\n            if (overwrite) {\n                this.removeAggregation(agg.name);\n            } else {\n                for (var i = 0; i < this.aggs.length; i++) {\n                    if (this.aggs[i].name === agg.name) {\n                        return;\n                    }\n                }\n            }\n            this.aggs.push(agg);\n        }\n\n        removeAggregation(name) {\n            var removes = [];\n            for (var i = 0; i < this.aggs.length; i++) {\n                if (this.aggs[i].name === name) {\n                    removes.push(i);\n                }\n            }\n            removes = removes.sort().reverse();\n            for (var i = 0; i < removes.length; i++) {\n                this.aggs.splice(removes[i], 1);\n            }\n        }\n\n        clearAggregations() {\n            this.aggs = [];\n        }\n\n        listAggregations() {\n            return this.aggs;\n        }\n\n        addMust(filter) {\n            var existing = this.listMust(filter);\n            if (existing.length === 0) {\n                this.must.push(filter);\n            }\n        }\n\n        listMust(template) {\n            return this.listFilters({boolType: \"must\", template: template});\n        }\n\n        removeMust(template) {\n            var removes = [];\n            for (var i = 0; i < this.must.length; i++) {\n                var m = this.must[i];\n                if (m.matches(template)) {\n                    removes.push(i);\n                }\n            }\n            removes = removes.sort().reverse();\n            for (var i = 0; i < removes.length; i++) {\n                this.must.splice(removes[i], 1);\n            }\n            // return the count of filters that were removed\n            return removes.length;\n        }\n\n        clearMust() {\n            this.must = [];\n        }\n\n        addMustNot(filter) {\n            var existing = this.listMustNot(filter);\n            if (existing.length === 0) {\n                this.mustNot.push(filter);\n            }\n        }\n\n        listMustNot(template) {\n            return this.listFilters({boolType: \"must_not\", template: template});\n        }\n\n        removeMustNot(template) {\n            var removes = [];\n            for (var i = 0; i < this.mustNot.length; i++) {\n                var m = this.mustNot[i];\n                if (m.matches(template)) {\n                    removes.push(i);\n                }\n            }\n            removes = removes.sort().reverse();\n            for (var i = 0; i < removes.length; i++) {\n                this.mustNot.splice(removes[i], 1);\n            }\n            // return the count of filters that were removed\n            return removes.length;\n        }\n\n        clearMustNot() {\n            this.mustNot = [];\n        }\n\n        /////////////////////////////////////////////////\n        // interrogative functions\n\n        hasFilters() {\n            return this.must.length > 0 || this.should.length > 0 || this.mustNot.length > 0\n        }\n\n        // in general better to use the listMust, listShould, listMustNot, directly.\n        // those methods each use this method internally anyway\n        listFilters(params) {\n            var boolType = params.boolType || \"must\";\n            var template = params.template || false;\n\n            //var field = params.field || false;\n            //var filterType = params.filterType || false;\n\n            // first get the boolean filter field that we're going to look in\n            var bool = [];\n            if (boolType === \"must\") {\n                bool = this.must;\n            } else if (boolType === \"should\") {\n                bool = this.should;\n            } else if (boolType === \"must_not\") {\n                bool = this.mustNot;\n            }\n\n            if (!template) {\n                return bool;\n            }\n            var l = [];\n            for (var i = 0; i < bool.length; i++) {\n                var m = bool[i];\n                if (m.matches(template)) {\n                    l.push(m);\n                }\n            }\n            return l;\n        }\n\n        ////////////////////////////////////////////////\n        // create, parse, serialise functions\n\n        merge(source) {\n            // merge this query (in place) with the provided query, where the provided\n            // query is dominant (i.e. any properties it has override this object)\n            //\n            // These are the merge rules:\n            // this.filtered - take from source\n            // this.size - take from source if set\n            // this.from - take from source if set\n            // this.fields - append any new ones from source\n            // this.aggs - append any new ones from source, overwriting any with the same name\n            // this.must - append any new ones from source\n            // this.mustNot - append any new ones from source\n            // this.queryString - take from source if set\n            // this.sort - prepend any from source\n            // this.source - append any new ones from source\n\n            this.filtered = source.filtered;\n            if (source.size) {\n                this.size = source.size;\n            }\n            if (source.from) {\n                this.from = source.from;\n            }\n            if (source.fields && source.fields.length > 0) {\n                for (var i = 0; i < source.fields.length; i++) {\n                    this.addField(source.fields[i]);\n                }\n            }\n            var aggs = source.listAggregations();\n            for (var i = 0; i < aggs.length; i++) {\n                this.addAggregation(aggs[i], true);\n            }\n            var must = source.listMust();\n            for (var i = 0; i < must.length; i++) {\n                this.addMust(must[i]);\n            }\n            let mustNot = source.listMustNot();\n            for (let i = 0; i < mustNot.length; i++) {\n                this.addMustNot(mustNot[i]);\n            }\n            if (source.getQueryString()) {\n                this.setQueryString(source.getQueryString())\n            }\n            var sorts = source.getSortBy();\n            if (sorts && sorts.length > 0) {\n                sorts.reverse();\n                for (var i = 0; i < sorts.length; i++) {\n                    this.prependSortBy(sorts[i])\n                }\n            }\n            var includes = source.getSourceIncludes();\n            var excludes = source.getSourceExcludes();\n            this.addSourceFilters({include: includes, exclude: excludes});\n        }\n\n        objectify(params) {\n            if (!params) {\n                params = {};\n            }\n            // this allows you to specify which bits of the query get objectified\n            var include_query_string = params.include_query_string === undefined ? true : params.include_query_string;\n            var include_filters = params.include_filters === undefined ? true : params.include_filters;\n            var include_paging = params.include_paging === undefined ? true : params.include_paging;\n            var include_sort = params.include_sort === undefined ? true : params.include_sort;\n            var include_fields = params.include_fields === undefined ? true : params.include_fields;\n            var include_aggregations = params.include_aggregations === undefined ? true : params.include_aggregations;\n            var include_source_filters = params.include_source_filters === undefined ? true : params.include_source_filters;\n\n            // queries will be separated in queries and bool filters, which may then be\n            // combined later\n            var q = {};\n            var query_part = {};\n            var bool = {};\n\n            // query string\n            if (this.queryString && include_query_string) {\n                $.extend(query_part, this.queryString.objectify());\n            }\n\n            if (include_filters) {\n                // add any MUST filters\n                if (this.must.length > 0) {\n                    var musts = [];\n                    for (var i = 0; i < this.must.length; i++) {\n                        var m = this.must[i];\n                        musts.push(m.objectify());\n                    }\n                    bool[\"must\"] = musts;\n                }\n                // add any must_not filters\n                if (this.mustNot.length > 0) {\n                    let mustNots = [];\n                    for (var i = 0; i < this.mustNot.length; i++) {\n                        var m = this.mustNot[i];\n                        mustNots.push(m.objectify());\n                    }\n                    bool[\"must_not\"] = mustNots;\n                }\n            }\n\n            var qpl = Object.keys(query_part).length;\n            var bpl = Object.keys(bool).length;\n            var query_portion = {};\n            if (qpl === 0 && bpl === 0) {\n                query_portion[\"match_all\"] = {};\n            } else if (qpl === 0 && bpl > 0) {\n                query_portion[\"bool\"] = bool;\n            } else if (qpl > 0 && bpl === 0) {\n                query_portion = query_part;\n            } else if (qpl > 0 && bpl > 0) {\n                query_portion[\"bool\"] = bool;\n                query_portion[\"bool\"][\"must\"].push(query_part);\n            }\n            q[\"query\"] = query_portion;\n\n            if (include_paging) {\n                // page size\n                if (this.size !== undefined && this.size !== false) {\n                    q[\"size\"] = this.size;\n                }\n\n                // page number (from)\n                if (this.from) {\n                    q[\"from\"] = this.from;\n                }\n            }\n\n            // sort option\n            if (this.sort.length > 0 && include_sort) {\n                q[\"sort\"] = [];\n                for (var i = 0; i < this.sort.length; i++) {\n                    q.sort.push(this.sort[i].objectify())\n                }\n            }\n\n            // fields\n            if (this.fields.length > 0 && include_fields) {\n                q[\"stored_fields\"] = this.fields;\n            }\n\n            // add any aggregations\n            if (this.aggs.length > 0 && include_aggregations) {\n                q[\"aggs\"] = {};\n                for (var i = 0; i < this.aggs.length; i++) {\n                    var agg = this.aggs[i];\n                    $.extend(q.aggs, agg.objectify())\n                }\n            }\n\n            // add the source filters\n            if (include_source_filters && this.source && (this.source.include || this.source.exclude)) {\n                q[\"_source\"] = {};\n                if (this.source.include.length > 0) {\n                    q[\"_source\"][\"include\"] = this.source.include;\n                }\n                if (this.source.exclude.length > 0) {\n                    q[\"_source\"][\"exclude\"] = this.source.exclude;\n                }\n            }\n\n            // set whether to track the total\n            if (this.trackTotalHits) {\n                q[\"track_total_hits\"] = true;\n            }\n\n            return q;\n        }\n\n        toString() {\n            return JSON.stringify(this.objectify())\n        }\n\n        parse(obj) {\n\n            function parseBool(bool, target) {\n                if (bool.must) {\n                    for (var i = 0; i < bool.must.length; i++) {\n                        var type = Object.keys(bool.must[i])[0];\n                        var fil = es.filterFactory(type, {raw: bool.must[i]});\n                        if (fil && type !== \"query_string\") {\n                            target.addMust(fil);\n                        } else if (fil && type === \"query_string\") {\n                            // FIXME: this will work fine as long as there are no nested bools\n                            target.setQueryString(fil);\n                        }\n                    }\n                }\n                if (bool.must_not) {\n                    for (var i = 0; i < bool.must_not.length; i++) {\n                        var type = Object.keys(bool.must_not[i])[0];\n                        var fil = es.filterFactory(type, {raw: bool.must_not[i]});\n                        if (fil) {\n                            target.addMustNot(fil);\n                        }\n                    }\n                }\n            }\n\n            function parseQuery(q, target) {\n                var keys = Object.keys(q);\n                for (var i = 0; i < keys.length; i++) {\n                    var type = keys[i];\n                    if (type === \"bool\") {\n                        parseBool(q.bool, target);\n                        continue;\n                    }\n                    var impl = es.filterFactory(type, {raw: q[type]});\n                    if (impl) {\n                        if (type === \"query_string\") {\n                            target.setQueryString(impl);\n                        }\n                        // FIXME: other non-filtered queries?\n                    }\n                }\n            }\n\n            // parse the query itself\n            if (obj.query) {\n                if (obj.query.filtered) {\n                    this.filtered = true;\n                    var bool = obj.query.filtered.filter.bool;\n                    if (bool) {\n                        parseBool(bool, this);\n                    }\n                    var q = obj.query.filtered.query;\n                    parseQuery(q, this);\n                } else {\n                    var q = obj.query;\n                    parseQuery(q, this);\n                }\n            }\n\n            if (obj.size) {\n                this.size = obj.size;\n            }\n\n            if (obj.from) {\n                this.from = obj.from;\n            }\n\n            if (obj.stored_fields) {\n                this.fields = obj.stored_fields;\n            }\n\n            if (obj.sort) {\n                for (var i = 0; i < obj.sort.length; i++) {\n                    var so = obj.sort[i];\n                    this.addSortBy(new es.Sort({raw: so}));\n                }\n            }\n\n            if (obj.aggs || obj.aggregations) {\n                var aggs = obj.aggs ? obj.aggs : obj.aggregations;\n                var anames = Object.keys(aggs);\n                for (var i = 0; i < anames.length; i++) {\n                    var name = anames[i];\n                    var agg = aggs[name];\n                    var type = Object.keys(agg)[0];\n                    var raw = {};\n                    raw[name] = agg;\n                    var oa = es.aggregationFactory(type, {raw: raw});\n                    if (oa) {\n                        this.addAggregation(oa);\n                    }\n                }\n            }\n\n            if (obj._source) {\n                var source = obj._source;\n                var include = [];\n                var exclude = [];\n\n                if (typeof source === \"string\") {\n                    include.push(source);\n                }\n                else if (Array.isArray(source)) {\n                    include = source;\n                } else {\n                    if (source.hasOwnProperty(\"include\")) {\n                        include = source.include;\n                    }\n                    if (source.hasOwnProperty(\"exclude\")) {\n                        exclude = source.exclude;\n                    }\n                }\n                this.setSourceFilters({include: include, exclude: exclude});\n            }\n        }\n\n        clone() {\n            return new es.Query({raw: Object.assign({}, this.objectify())})\n        }\n    },\n\n    ///////////////////////////////////////////////\n    // Query String\n\n    QueryString : class {\n        constructor(params) {\n            this.queryString = params.queryString || false;\n            this.defaultField = params.defaultField || false;\n            this.defaultOperator = params.defaultOperator || \"OR\";\n\n            this.fuzzify = params.fuzzify || false;     // * or ~\n            this.escapeSet = params.escapeSet || es.specialCharsSubSet;\n            this.pairs = params.pairs || es.characterPairs;\n            this.unEscapeSet = params.unEscapeSet || es.specialChars;\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var qs = this._escape(this._fuzzify(this.queryString));\n            var obj = {query_string : {query : qs}};\n            if (this.defaultOperator) {\n                obj.query_string[\"default_operator\"] = this.defaultOperator;\n            }\n            if (this.defaultField) {\n                obj.query_string[\"default_field\"] = this.defaultField;\n            }\n            return obj;\n        }\n\n        parse(obj) {\n            if (obj.query_string) {\n                obj = obj.query_string;\n            }\n            this.queryString = this._unescape(obj.query);\n            if (obj.default_operator) {\n                this.defaultOperator = obj.default_operator;\n            }\n            if (obj.default_field) {\n                this.defaultField = obj.default_field;\n            }\n        }\n\n        _fuzzify(str) {\n            if (!this.fuzzify || !(this.fuzzify === \"*\" || this.fuzzify === \"~\")) {\n                return str;\n            }\n\n            if (!(str.indexOf('*') === -1 && str.indexOf('~') === -1 && str.indexOf(':') === -1)) {\n                return str;\n            }\n\n            var pq = \"\";\n            var optparts = str.split(' ');\n            for (var i = 0; i < optparts.length; i++) {\n                var oip = optparts[i];\n                if (oip.length > 0) {\n                    oip = oip + this.fuzzify;\n                    this.fuzzify === \"*\" ? oip = \"*\" + oip : false;\n                    pq += oip + \" \";\n                }\n            }\n            return pq;\n        };\n\n        _escapeRegExp(string) {\n            return string.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n        };\n\n        _replaceAll(string, find, replace) {\n            return string.replace(new RegExp(this._escapeRegExp(find), 'g'), replace);\n        };\n\n        _unReplaceAll(string, find) {\n            return string.replace(new RegExp(\"\\\\\\\\(\" + this._escapeRegExp(find) + \")\", 'g'), \"$1\");\n        };\n\n        _paired(string, pair) {\n            var matches = (string.match(new RegExp(this._escapeRegExp(pair), \"g\"))) || [];\n            return matches.length % 2 === 0;\n        };\n\n        _escape(str) {\n            // make a copy of the special characters (we may modify it in a moment)\n            var scs = this.escapeSet.slice(0);\n\n            // first check for pairs, and push any extra characters to be escaped\n            for (var i = 0; i < this.pairs.length; i++) {\n                var char = this.pairs[i];\n                if (!this._paired(str, char)) {\n                    scs.push(char);\n                }\n            }\n\n            // now do the escape\n            for (var i = 0; i < scs.length; i++) {\n                var char = scs[i];\n                str = this._replaceAll(str, char, \"\\\\\" + char);\n            }\n\n            return str;\n        };\n\n        _unescape(str) {\n            for (var i = 0; i < this.unEscapeSet.length; i++) {\n                var char = this.unEscapeSet[i];\n                str = this._unReplaceAll(str, char)\n            }\n            return str;\n        };\n    },\n\n    //////////////////////////////////////////////\n    // Sort Option\n\n    Sort : class {\n        constructor(params) {\n            this.field = params.field || \"_score\";\n            this.order = params.order || \"desc\";\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var obj = {};\n            obj[this.field] = {order: this.order};\n            return obj;\n        }\n\n        parse(obj) {\n            this.field = Object.keys(obj)[0];\n            if (obj[this.field].order) {\n                this.order = obj[this.field].order;\n            }\n        }\n    },\n\n    //////////////////////////////////////////////\n    // Root Aggregation and aggregation implementations\n\n    TermsAggregation : class extends Aggregation {\n        static type = \"terms\";\n\n        constructor(params) {\n            super(params);\n            this.field = params.field || false;\n            this.size = params.size || 10;\n\n            // set the ordering for the first time\n            this.orderBy = \"_count\";\n            if (params.orderBy) {\n                this.orderBy = params.orderBy;\n                if (this.orderBy[0] !== \"_\") {\n                    this.orderBy = \"_\" + this.orderBy;\n                }\n            }\n            this.orderDir = params.orderDir || \"desc\";\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        // provide a method to set and normalise the ordering in future\n        setOrdering(orderBy, orderDir) {\n            this.orderBy = orderBy;\n            if (this.orderBy[0] !== \"_\") {\n                this.orderBy = \"_\" + this.orderBy;\n            }\n            this.orderDir = orderDir;\n        }\n\n        objectify() {\n            var body = {field: this.field, size: this.size, order: {}};\n            body.order[this.orderBy] = this.orderDir;\n            return this._make_aggregation(es.TermsAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.TermsAggregation.type);\n            this.field = body.field;\n            if (body.size) {\n                this.size = body.size;\n            }\n            if (body.order) {\n                this.orderBy = Object.keys(body.order)[0];\n                this.orderDir = body.order[this.orderBy];\n            }\n        }\n    },\n\n    CardinalityAggregation : class extends Aggregation {\n        static type = \"cardinality\";\n\n        constructor(params) {\n            super(params);\n            this.field = es.getParam(params.field, false);\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {field: this.field};\n            return this._make_aggregation(es.CardinalityAggregation.type, body);\n        };\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.CardinalityAggregation.type);\n            this.field = body.field;\n        };\n    },\n\n    RangeAggregation : class extends Aggregation {\n        static type = \"range\";\n\n        constructor(params) {\n            super(params);\n            this.field = params.field || false;\n            this.ranges = params.ranges || [];\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {field: this.field, ranges: this.ranges};\n            return this._make_aggregation(es.RangeAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.RangeAggregation.type);\n            this.field = body.field;\n            this.ranges = body.ranges;\n        }\n    },\n\n    GeoDistanceAggregation : class extends Aggregation {\n        static type = \"geo_distance\";\n\n        constructor(params) {\n            super(params);\n            this.field = params.field || false;\n            this.lat = params.lat || false;\n            this.lon = params.lon || false;\n            this.unit = params.unit || \"m\";\n            this.distance_type = params.distance_type || \"sloppy_arc\";\n            this.ranges = params.ranges || [];\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {\n                field: this.field,\n                origin: {lat : this.lat, lon: this.lon},\n                unit : this.unit,\n                distance_type : this.distance_type,\n                ranges: this.ranges\n            };\n            return this._make_aggregation(es.GeoDistanceAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.GeoDistanceAggregation.type);\n            this.field = body.field;\n\n            // FIXME: only handles the lat/lon object - but there are several forms\n            // this origin could take\n            var origin = body.origin;\n            if (origin.lat) {\n                this.lat = origin.lat;\n            }\n            if (origin.lon) {\n                this.lon = origin.lon;\n            }\n\n            if (body.unit) {\n                this.unit = body.unit;\n            }\n\n            if (body.distance_type) {\n                this.distance_type = body.distance_type;\n            }\n\n            this.ranges = body.ranges;\n        }\n    },\n\n    GeohashGridAggregation : class extends Aggregation {\n        static type = \"geohash_grid\";\n\n        constructor(params) {\n            super(params)\n            this.field = params.field || false;\n            this.precision = params.precision || 3;\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {\n                field: this.field,\n                precision: this.precision\n            };\n            return this._make_aggregation(es.GeohashGridAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.GeohashGridAggregation.type);\n            this.field = body.field;\n            this.precision = body.precision;\n        }\n    },\n\n    StatsAggregation : class extends Aggregation {\n        static type = \"stats\";\n\n        constructor(params) {\n            super(params);\n            this.field = params.field || false;\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {field: this.field};\n            return this._make_aggregation(es.StatsAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.StatsAggregation.type);\n            this.field = body.field;\n        };\n    },\n\n    SumAggregation : class extends Aggregation {\n        static type = \"sum\";\n\n        constructor(params) {\n            super(params);\n            this.field = params.field || false;\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {field: this.field};\n            return this._make_aggregation(es.SumAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.SumAggregation.type);\n            this.field = body.field;\n        }\n    },\n\n    DateHistogramAggregation : class extends Aggregation {\n        static type = \"date_histogram\";\n\n        constructor(params) {\n            super(params);\n            this.field = params.field || false;\n            this.interval = params.interval || \"month\";\n            this.format = params.format || false;\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {field: this.field, interval: this.interval};\n            if (this.format) {\n                body[\"format\"] = this.format;\n            }\n            return this._make_aggregation(es.DateHistogramAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.DateHistogramAggregation.type);\n            this.field = body.field;\n            if (body.interval) {\n                this.interval = body.interval;\n            }\n            if (body.format) {\n                this.format = body.format;\n            }\n        }\n    },\n\n    FiltersAggregation : class extends Aggregation {\n        static type = \"filters\";\n\n        constructor(params) {\n            super(params);\n            this.filters = params.filters || {};\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var body = {filters: this.filters};\n            return this._make_aggregation(es.FiltersAggregation.type, body);\n        }\n\n        parse(obj) {\n            var body = this._parse_wrapper(obj, es.FiltersAggregation.type);\n            this.filters = body.filters;\n        }\n    },\n\n    ///////////////////////////////////////////////////\n    // Filters\n\n    TermFilter : class extends Filter {\n        static type = \"term\";\n\n        constructor(params) {\n            super(params);\n            // this.filter handled by superclass\n            this.value = params.value || false;\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        matches(other) {\n            // ask the parent object first\n            let pm = this._baseMatch(other);\n            if (!pm) {\n                return false;\n            }\n            // value (if set) must match\n            if (other.value && other.value !== this.value) {\n                return false;\n            }\n\n            return true;\n        }\n\n        objectify() {\n            var obj = {term : {}};\n            obj.term[this.field] = this.value;\n            return obj;\n        }\n\n        parse(obj) {\n            if (obj.term) {\n                obj = obj.term;\n            }\n            this.field = Object.keys(obj)[0];\n            this.value = obj[this.field];\n        }\n    },\n\n    ExistsFilter : class extends Filter {\n        static type = \"exists\";\n\n        constructor(params) {\n            super(params);\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            return {exists : {field: this.field}};\n        }\n\n        parse(obj) {\n            if (obj.exists) {\n                obj = obj.exists;\n            }\n            this.field = obj.field;\n        }\n    },\n\n    TermsFilter : class extends Filter {\n        static type = \"terms\";\n\n        constructor(params) {\n            super(params);\n            // this.field handled by superclass\n            this.values = params.values || false;\n            this.execution = params.execution || false;\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        matches(other) {\n            // ask the parent object first\n            let pm = this._baseMatch(other);\n            if (!pm) {\n                return false;\n            }\n\n            // values (if set) must be the same list\n            if (other.values) {\n                if (other.values.length !== this.values.length) {\n                    return false;\n                }\n                for (var i = 0; i < other.values.length; i++) {\n                    if ($.inArray(other.values[i], this.values) === -1) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        objectify() {\n            var val = this.values || [];\n            var obj = {terms : {}};\n            obj.terms[this.field] = val;\n            if (this.execution) {\n                obj.terms[\"execution\"] = this.execution;\n            }\n            return obj;\n        };\n\n        parse(obj) {\n            if (obj.terms) {\n                obj = obj.terms;\n            }\n            this.field = Object.keys(obj)[0];\n            this.values = obj[this.field];\n            if (obj.execution) {\n                this.execution = obj.execution;\n            }\n        }\n\n        add_term(term) {\n            if (!this.values) {\n                this.values = [];\n            }\n            if ($.inArray(term, this.values) === -1) {\n                this.values.push(term);\n            }\n        }\n\n        has_term(term) {\n            if (!this.values) {\n                return false;\n            }\n            return $.inArray(term, this.values) >= 0;\n        }\n\n        remove_term(term) {\n            if (!this.values) {\n                return;\n            }\n            var idx = $.inArray(term, this.values);\n            if (idx >= 0) {\n                this.values.splice(idx, 1);\n            }\n        }\n\n        has_terms() {\n            return (this.values !== false && this.values.length > 0)\n        }\n\n        term_count() {\n            return this.values === false ? 0 : this.values.length;\n        }\n\n        clear_terms() {\n            this.values = false;\n        }\n    },\n\n    RangeFilter : class extends Filter {\n        static type = \"range\";\n\n        constructor(params) {\n            super(params);\n\n            // this.field handled by superclass\n            this.lt = es.getParam(params.lt, false);\n            this.lte = es.getParam(params.lte, false);\n            this.gte = es.getParam(params.gte, false);\n            this.format = es.getParam(params.format, false);\n\n            // normalise the values to strings\n            if (this.lt) {\n                this.lt = this.lt.toString()\n            }\n            if (this.lte) {\n                this.lte = this.lte.toString()\n            }\n            if (this.gte) {\n                this.gte = this.gte.toString()\n            }\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        matches(other) {\n            // ask the parent object first\n            let pm = super.matches(other);\n            if (!pm) {\n                return false;\n            }\n\n            // ranges (if set) must match\n            if (other.lt) {\n                if (other.lt !== this.lt) {\n                    return false;\n                }\n            }\n            if (other.lte) {\n                if (other.lte !== this.lte) {\n                    return false;\n                }\n            }\n            if (other.gte) {\n                if (other.gte !== this.gte) {\n                    return false;\n                }\n            }\n\n            if (other.format) {\n                if (other.format !== this.format) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        objectify() {\n            var obj = {range: {}};\n            obj.range[this.field] = {};\n            if (this.lte !== false) {\n                obj.range[this.field][\"lte\"] = this.lte;\n            }\n            if (this.lt !== false && this.lte === false) {\n                obj.range[this.field][\"lt\"] = this.lt;\n            }\n            if (this.gte !== false) {\n                obj.range[this.field][\"gte\"] = this.gte;\n            }\n            if (this.format !== false) {\n                obj.range[this.field][\"format\"] = this.format;\n            }\n            return obj;\n        }\n\n        parse(obj) {\n            if (obj.range) {\n                obj = obj.range;\n            }\n            this.field = Object.keys(obj)[0];\n            if (obj[this.field].lte !== undefined && obj[this.field].lte !== false) {\n                this.lte = obj[this.field].lte;\n            }\n            if (obj[this.field].lt !== undefined && obj[this.field].lt !== false) {\n                this.lt = obj[this.field].lt;\n            }\n            if (obj[this.field].gte !== undefined && obj[this.field].gte !== false) {\n                this.gte = obj[this.field].gte;\n            }\n            if (obj[this.field].format !== undefined && obj[this.field].format !== false) {\n                this.format = obj[this.field].format;\n            }\n        }\n    },\n\n    GeoDistanceRangeFilter : class extends Filter {\n        static type = \"geo_distance_range\";\n\n        constructor(params) {\n            super(params);\n\n            // this.field is handled by superclass\n            this.lt = params.lt || false;\n            this.gte = params.gte || false;\n            this.lat = params.lat || false;\n            this.lon = params.lon || false;\n            this.unit = params.unit || \"m\";\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        objectify() {\n            var obj = {geo_distance_range: {}};\n            obj.geo_distance_range[this.field] = {lat: this.lat, lon: this.lon};\n            if (this.lt) {\n                obj.geo_distance_range[\"lt\"] = this.lt + this.unit;\n            }\n            if (this.gte) {\n                obj.geo_distance_range[\"gte\"] = this.gte + this.unit;\n            }\n            return obj;\n        }\n\n        parse(obj) {\n            function endsWith(str, suffix) {\n                return str.indexOf(suffix, str.length - suffix.length) !== -1;\n            }\n\n            function splitUnits(str) {\n                var unit = false;\n                for (var i = 0; i < es.distanceUnits.length; i++) {\n                    var cu = es.distanceUnits[i];\n                    if (endsWith(str, cu)) {\n                        str = str.substring(0, str.length - cu.length);\n                        unit = str.substring(str.length - cu.length);\n                    }\n                }\n\n                return [str, unit];\n            }\n\n            if (obj.geo_distance_range) {\n                obj = obj.geo_distance_range;\n            }\n            this.field = Object.keys(obj)[0];\n            this.lat = obj[this.field].lat;\n            this.lon = obj[this.field].lon;\n\n            var lt = obj[this.field].lt;\n            var gte = obj[this.field].gte;\n\n            if (lt) {\n                lt = lt.trim();\n                var parts = splitUnits(lt);\n                this.lt = parts[0];\n                this.unit = parts[1];\n            }\n\n            if (gte) {\n                gte = gte.trim();\n                var parts = splitUnits(gte);\n                this.gte = parts[0];\n                this.unit = parts[1];\n            }\n        }\n    },\n\n    GeoBoundingBoxFilter : class extends Filter {\n        static type = \"geo_bounding_box\";\n\n        constructor(params) {\n            super(params);\n            this.top_left = params.top_left || false;\n            this.bottom_right = params.bottom_right || false;\n\n            if (params.raw) {\n                this.parse(params.raw);\n            }\n        }\n\n        matches(other) {\n            // ask the parent object first\n            let pm = super.matches(other);\n            if (!pm) {\n                return false;\n            }\n            if (other.top_left && other.top_left !== this.top_left) {\n                return false;\n            }\n            if (other.bottom_right && other.bottom_right !== this.bottom_right) {\n                return false;\n            }\n            return true;\n        }\n\n        objectify() {\n            var obj = {geo_bounding_box : {}};\n            obj.geo_bounding_box[this.field] = {\n                top_left: this.top_left,\n                bottom_right: this.bottom_right\n            };\n            return obj;\n        }\n\n        parse(obj) {\n            if (obj.geo_bounding_box) {\n                obj = obj.geo_bounding_box;\n            }\n            this.field = Object.keys(obj)[0];\n            this.top_left = obj[this.field].top_left;\n            this.bottom_right = obj[this.field].bottom_right;\n        }\n    },\n\n    ////////////////////////////////////////////////////\n    // The result object\n\n    Result : class {\n        constructor(params) {\n            this.data = params.raw;\n        }\n\n        buckets(agg_name) {\n            return this.data.aggregations[agg_name].buckets;\n        }\n\n        aggregation(agg_name) {\n            return this.data.aggregations[agg_name];\n        }\n\n        results() {\n            var res = [];\n            if (this.data.hits && this.data.hits.hits) {\n                for (var i = 0; i < this.data.hits.hits.length; i++) {\n                    var source = this.data.hits.hits[i];\n                    if (\"_source\" in source) {\n                        res.push(source._source);\n                    } else if (\"_fields\" in source) {\n                        res.push(source._fields);\n                    } else {\n                        res.push(source);\n                    }\n                }\n            }\n            return res;\n        }\n\n        total() {\n            if (this.data.hits && this.data.hits.total && this.data.hits.total.value) {\n                return parseInt(this.data.hits.total.value);\n            }\n            return false;\n        }\n    },\n\n    ////////////////////////////////////////////////////\n    // Primary functions for interacting with elasticsearch\n\n    doQuery : function(params) {\n        // extract the parameters of the request\n        var success = params.success;\n        var error = params.error;\n        var complete = params.complete;\n        var search_url = params.search_url;\n        var queryobj = params.queryobj;\n        var datatype = params.datatype;\n\n        // serialise the query\n        var querystring = JSON.stringify(queryobj);\n\n        // prep the callbacks (they are connected)\n        var error_callback = es.queryError(error);\n        var success_callback = es.querySuccess(success, error_callback);\n\n        let ajax = {\n            url: search_url,\n            headers: es.requestHeaders,\n            dataType: datatype,\n            success: success_callback,\n            error: error_callback,\n            complete: complete\n        }\n        if (datatype !== \"jsonp\") {\n            ajax.jsonp = false;\n        }\n\n        // make the call to the elasticsearch web service\n        if (es.requestMethod === \"get\") {\n            ajax.type = \"get\";\n            ajax.data = {source: querystring, source_content_type: \"application/json\"};\n            $.ajax(ajax);\n        } else if (es.requestMethod === \"post\") {\n            ajax.type = \"post\"\n            ajax.data = querystring;\n            $.ajax(ajax);\n        } else {\n            throw \"es.requestMethod must be either 'get' or 'post\";\n        }\n    },\n\n    querySuccess : function(callback, error_callback) {\n        return function(data) {\n            if (data.hasOwnProperty(\"error\")) {\n                error_callback(data);\n                return;\n            }\n\n            var result = new es.Result({raw: data});\n            callback(result);\n        }\n    },\n\n    queryError : function(callback) {\n        return function(data) {\n            if (callback) {\n                callback(data);\n            } else {\n                throw new Error(data);\n            }\n        }\n    },\n\n    /////////////////////////////////////////////////////\n\n    getParam : function(value, def) {\n        return value !== undefined ? value : def;\n    }\n};\n\nexport {es}","var moment = window.moment;\nexport {moment};","import {getParam, getUrlParams, objClosure, AsyncGroup} from './utils';\nimport {ESQueryAdapter} from \"./adapters/es_adapter\";\n\nimport {es} from '../dependencies/es'\nimport {$} from '../dependencies/jquery';\n\nexport class Edge {\n    constructor(params) {\n        /////////////////////////////////////////////\n        // parameters that can be set via params arg\n\n        // the jquery selector for the element where the edge will be deployed\n        this.selector = getParam(params, \"selector\", \"body\");\n\n        // the base search url which will respond to elasticsearch queries.  Generally ends with _search\n        this.searchUrl = getParam(params, \"searchUrl\", false);\n\n        // datatype for ajax requests to use - overall recommend using jsonp and proxying ES requests\n        // through a back end that can provide that\n        this.datatype = getParam(params, \"datatype\", \"jsonp\");\n\n        // dictionary of queries to be run before the primary query is executed\n        // {\"<preflight id>\" : new es.Query(....)}\n        // results will appear with the same ids in this.preflightResults\n        // preflight queries are /not/ subject to the base query\n        this.preflightQueries = getParam(params, \"preflightQueries\", false);\n\n        // query that forms the basis of all queries that are assembled and run\n        // Note that baseQuery is inviolable - it's requirements will always be enforced\n        this.baseQuery = getParam(params, \"baseQuery\", false);\n\n        // query to use to initialise the search.  Use this to set your opening\n        // values for things like page size, initial search terms, etc.  Any request to\n        // reset the interface will return to this query\n        this.openingQuery = getParam(params, \"openingQuery\", () => typeof es !== 'undefined' ? new es.Query() : false);\n\n        // dictionary of functions that will generate secondary queries which also need to be\n        // run at the point that cycle() is called.  These functions and their resulting\n        // queries will be run /after/ the primary query (so can take advantage of the\n        // results).  Their results will be stored in this.secondaryResults.\n        // secondary queries are not subject the base query, although the functions\n        // may of course apply the base query too if they wish\n        // {\"<secondary id>\" : function() }\n        this.secondaryQueries = getParam(params, \"secondaryQueries\", false);\n\n        // dictionary mapping keys to urls that will be used for search.  These should be\n        // the same keys as used in secondaryQueries, if those secondary queries should be\n        // issued against different urls than the primary search_url.\n        this.secondaryUrls = getParam(params, \"secondaryUrls\", false);\n\n        // should the init process do a search\n        this.initialSearch = getParam(params, \"initialSearch\", true);\n\n        // list of static files (e.g. data files) to be loaded at startup, and made available\n        // on the object for use by components\n        // {\"id\" : \"<internal id to give the file>\", \"url\" : \"<file url>\", \"processor\" : edges.csv.newObjectByRow, \"datatype\" : \"text\", \"opening\" : <function to be run after processing for initial state>}\n        this.staticFiles = getParam(params, \"staticFiles\", []);\n\n        // should the search url be synchronised with the browser's url bar after search\n        // and should queries be retrieved from the url on init\n        this.manageUrl = getParam(params, \"manageUrl\", false);\n\n        // query parameter in which the query for this edge instance will be stored\n        this.urlQuerySource = getParam(params, \"urlQuerySource\", \"source\");\n\n        // options to be passed to es.Query.objectify when prepping the query to be placed in the URL\n        this.urlQueryOptions = getParam(params, \"urlQueryOptions\", false);\n\n        // template object that will be used to draw the frame for the edge.  May be left\n        // blank, in which case the edge will assume that the elements are already rendered\n        // on the page by the caller\n        this.template = getParam(params, \"template\", false);\n\n        // list of all the components that are involved in this edge\n        this.components = getParam(params, \"components\", []);\n\n        // the query adapter\n        this.queryAdapter = getParam(params, \"queryAdapter\", () => new ESQueryAdapter());\n\n        // list of callbacks to be run synchronously with the edge instance as the argument\n        // (these bind at the same points as all the events are triggered, and are keyed the same way)\n        this.callbacks = getParam(params, \"callbacks\", {});\n\n        /////////////////////////////////////////////\n        // operational properties\n\n        // the query most recently read from the url\n        this.urlQuery = false;\n\n        // original url parameters\n        this.urlParams = {};\n\n        // the short url for this page\n        this.shortUrl = false;\n\n        // the last primary ES query object that was executed\n        this.currentQuery = false;\n\n        // the last result object from the ES layer\n        this.result = false;\n\n        // the results of the preflight queries, keyed by their id\n        this.preflightResults = {};\n\n        // the actual secondary queries derived from the functions in this.secondaryQueries;\n        this.realisedSecondaryQueries = {};\n\n        // results of the secondary queries, keyed by their id\n        this.secondaryResults = {};\n\n        // if the search is currently executing\n        this.searching = false;\n\n        // jquery object that represents the selected element\n        this.context = false;\n\n        // raw access to this.staticFiles loaded resources, keyed by id\n        this.static = {};\n\n        // access to processed static files, keyed by id\n        this.resources = {};\n\n        // list of static resources where errors were encountered\n        this.errorLoadingStatic = [];\n\n\n        //////////////////////////////////////////\n        // now kick off the edge\n        this.startup();\n    }\n\n    //////////////////////////////////////////////////\n    // Startup\n\n    startup() {\n        // obtain the jquery context for all our operations\n        this.context = $(this.selector);\n\n        // trigger the edges:init event\n        this.trigger(\"edges:pre-init\");\n\n        // if we are to manage the URL, attempt to pull a query from it\n        if (this.manageUrl) {\n            var urlParams = getUrlParams();\n            if (this.urlQuerySource in urlParams) {\n                this.urlQuery = new es.Query({raw : urlParams[this.urlQuerySource]});\n                delete urlParams[this.urlQuerySource];\n            }\n            this.urlParams = urlParams;\n        }\n\n        // render the template if necessary\n        if (this.template) {\n            this.template.draw(this);\n        }\n\n        // call each of the components to initialise themselves\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            component.init(this);\n        }\n\n        // now call each component to render itself (pre-search)\n        this.draw();\n\n        // load any static files - this will happen asynchronously, so afterwards\n        // we call finaliseStartup to finish the process\n        // var onward = edges.objClosure(this, \"startupPart2\");\n        let onward = () => this.startupPart2()\n        this.loadStaticsAsync(onward);\n    }\n\n    startupPart2() {\n        // FIXME: at this point we should check whether the statics all loaded correctly\n        // var onward = edges.objClosure(this, \"startupPart3\");\n        let onward = () => this.startupPart3()\n        this.runPreflightQueries(onward);\n    };\n\n    startupPart3() {\n\n        // determine whether to initialise with either the openingQuery or the urlQuery\n        var requestedQuery = this.openingQuery;\n        if (this.urlQuery) {\n            // if there is a URL query, then we open with that, and then forget it\n            requestedQuery = this.urlQuery;\n            this.urlQuery = false\n        }\n\n        // request the components to contribute to the query\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            component.contrib(requestedQuery);\n        }\n\n        // finally push the query, which will reconcile it with the baseQuery\n        this.pushQuery(requestedQuery);\n\n        // trigger the edges:post-init event\n        this.trigger(\"edges:post-init\");\n\n        // now issue a query\n        this.cycle();\n    };\n\n    ////////////////////////////////////////////////////\n    // Cycle\n\n    cycle() {\n        // if a search is currently executing, don't do anything, else turn it on\n        // FIXME: should we queue them up? - see the d3 map for an example of how to do this\n        if (this.searching) {\n            return;\n        }\n        this.searching = true;\n\n        // invalidate the short url\n        this.shortUrl = false;\n\n        // pre query event\n        this.trigger(\"edges:pre-query\");\n\n        // if we are managing the url space, use pushState to set it\n        if (this.manageUrl) {\n            this.updateUrl();\n        }\n\n        // if there's a search url, do a query, otherwise call synchronise and draw directly\n        if (this.searchUrl) {\n            // var onward = edges.objClosure(this, \"cyclePart2\");\n            let onward = () => this.cyclePart2();\n            this.doPrimaryQuery(onward);\n        } else {\n            this.cyclePart2();\n        }\n    }\n\n    cyclePart2() {\n        // var onward = edges.objClosure(this, \"cyclePart3\");\n        let onward = () => this.cyclePart3();\n        this.runSecondaryQueries(onward);\n    }\n\n    cyclePart3() {\n        this.synchronise();\n\n        // pre-render trigger\n        this.trigger(\"edges:pre-render\");\n        // render\n        this.draw();\n        // post render trigger\n        this.trigger(\"edges:post-render\");\n\n        // searching has completed, so flip the switch back\n        this.searching = false;\n    }\n\n    ////////////////////////////////////////////////////\n    // utilities required during startup\n\n    loadStaticsAsync(callback) {\n        if (!this.staticFiles || this.staticFiles.length === 0) {\n            this.trigger(\"edges:post-load-static\");\n            callback();\n            return;\n        }\n\n        var that = this;\n        var pg = new AsyncGroup({\n            list: this.staticFiles,\n            action: function(params) {\n                var entry = params.entry;\n                var success = params.success_callback;\n                var error = params.error_callback;\n\n                var id = entry.id;\n                var url = entry.url;\n                var datatype = edges.getParam(entry.datatype, \"text\");\n\n                $.ajax({\n                    type: \"get\",\n                    url: url,\n                    dataType: datatype,\n                    success: success,\n                    error: error\n                })\n            },\n            successCallbackArgs: [\"data\"],\n            success: function(params) {\n                var data = params.data;\n                var entry = params.entry;\n                if (entry.processor) {\n                    var processed = entry.processor({data : data});\n                    that.resources[entry.id] = processed;\n                    if (entry.opening) {\n                        entry.opening({resource : processed, edge: that});\n                    }\n                }\n                that.static[entry.id] = data;\n            },\n            errorCallbackArgs : [\"data\"],\n            error:  function(params) {\n                that.errorLoadingStatic.push(params.entry.id);\n                that.trigger(\"edges:error-load-static\");\n            },\n            carryOn: function() {\n                that.trigger(\"edges:post-load-static\");\n                callback();\n            }\n        });\n\n        pg.process();\n    }\n\n    runPreflightQueries(callback) {\n        if (!this.preflightQueries || Object.keys(this.preflightQueries).length === 0) {\n            callback();\n            return;\n        }\n\n        this.trigger(\"edges:pre-preflight\");\n\n        var entries = [];\n        var ids = Object.keys(this.preflightQueries);\n        for (var i = 0; i < ids.length; i++) {\n            var id = ids[i];\n            entries.push({id: id, query: this.preflightQueries[id]});\n        }\n\n        var that = this;\n        var pg = new AsyncGroup({\n            list: entries,\n            action: function(params) {\n                var entry = params.entry;\n                var success = params.success_callback;\n                var error = params.error_callback;\n\n                es.doQuery({\n                    search_url: that.searchUrl,\n                    queryobj: entry.query.objectify(),\n                    datatype: that.datatype,\n                    success: success,\n                    error: error\n                });\n            },\n            successCallbackArgs: [\"result\"],\n            success: function(params) {\n                var result = params.result;\n                var entry = params.entry;\n                that.preflightResults[entry.id] = result;\n            },\n            errorCallbackArgs : [\"result\"],\n            error:  function(params) {\n                that.trigger(\"edges:error-preflight\");\n            },\n            carryOn: function() {\n                that.trigger(\"edges:post-preflight\");\n                callback();\n            }\n        });\n\n        pg.process();\n    }\n\n    ///////////////////////////////////////////////////\n    // Utilities required during cycle\n\n    doPrimaryQuery(callback) {\n        var context = {\"callback\" : callback};\n\n        this.queryAdapter.doQuery({\n            edge: this,\n            success: objClosure(this, \"querySuccess\", [\"result\"], context),\n            error: objClosure(this, \"queryFail\", [\"response\"], context)\n        });\n    }\n\n    runSecondaryQueries(callback) {\n        this.realisedSecondaryQueries = {};\n        if (!this.secondaryQueries || Object.keys(this.secondaryQueries).length === 0) {\n            callback();\n            return;\n        }\n\n        // generate the query objects to be executed\n        var entries = [];\n        for (var key in this.secondaryQueries) {\n            var entry = {};\n            entry[\"query\"] = this.secondaryQueries[key](this);\n            entry[\"id\"] = key;\n            entry[\"searchUrl\"] = this.searchUrl;\n            if (this.secondaryUrls !== false && this.secondaryUrls.hasOwnProperty(key)) {\n                entry[\"searchUrl\"] = this.secondaryUrls[key]\n            }\n            entries.push(entry);\n            this.realisedSecondaryQueries[key] = entry.query;\n        }\n\n        var that = this;\n        var pg = new AsyncGroup({\n            list: entries,\n            action: function(params) {\n                var entry = params.entry;\n                var success = params.success_callback;\n                var error = params.error_callback;\n\n                es.doQuery({\n                    search_url: entry.searchUrl,\n                    queryobj: entry.query.objectify(),\n                    datatype: that.datatype,\n                    success: success,\n                    complete: false\n                });\n            },\n            successCallbackArgs: [\"result\"],\n            success: function(params) {\n                var result = params.result;\n                var entry = params.entry;\n                that.secondaryResults[entry.id] = result;\n            },\n            errorCallbackArgs : [\"result\"],\n            error:  function(params) {\n                // FIXME: not really sure what to do about this\n            },\n            carryOn: function() {\n                callback();\n            }\n        });\n\n        pg.process();\n    }\n\n    ////////////////////////////////////////////////////\n    //  functions for working with the queries\n\n    cloneQuery() {\n        if (this.currentQuery) {\n            return this.currentQuery.clone();\n        }\n        return false;\n    }\n\n    pushQuery(query) {\n        if (this.baseQuery) {\n            query.merge(this.baseQuery);\n        }\n        this.currentQuery = query;\n    }\n\n    cloneBaseQuery() {\n        if (this.baseQuery) {\n            return this.baseQuery.clone();\n        }\n        return new es.Query();\n    }\n\n    cloneOpeningQuery() {\n        if (this.openingQuery) {\n            return this.openingQuery.clone();\n        }\n        return new es.Query();\n    }\n\n    queryFail(params) {\n        var callback = params.callback;\n        var response = params.response;\n        this.trigger(\"edges:query-fail\");\n        if (response.hasOwnProperty(\"responseText\")) {\n            console.log(\"ERROR: query fail: \" + response.responseText);\n        }\n        if (response.hasOwnProperty(\"error\")) {\n            console.log(\"ERROR: search execution fail: \" + response.error);\n        }\n        callback();\n    };\n\n    querySuccess(params) {\n        this.result = params.result;\n        var callback = params.callback;\n\n        // success trigger\n        this.trigger(\"edges:query-success\");\n        callback();\n    };\n\n    //////////////////////////////////////////////////\n    // URL Management\n\n    updateUrl() {\n        var currentQs = window.location.search;\n        var qs = \"?\" + this.fullUrlQueryString();\n\n        if (currentQs === qs) {\n            return; // no need to push the state\n        }\n\n        var url = new URL(window.location.href);\n        url.search = qs;\n\n        if (currentQs === \"\") {\n            window.history.replaceState(\"\", \"\", url.toString());\n        } else {\n            window.history.pushState(\"\", \"\", url.toString());\n        }\n    }\n\n    fullUrl() {\n        var args = this.fullQueryArgs();\n        var fragment = \"\";\n        if (args[\"#\"]) {\n            fragment = \"#\" + args[\"#\"];\n            delete args[\"#\"];\n        }\n        var wloc = window.location.toString();\n        var bits = wloc.split(\"?\");\n        var url = bits[0] + \"?\" + this._makeUrlQuery(args) + fragment;\n        return url;\n    };\n\n    fullUrlQueryString() {\n        return this._makeUrlQuery(this.fullQueryArgs())\n    }\n\n    fullQueryArgs() {\n        var args = $.extend(true, {}, this.urlParams);\n        $.extend(args, this.urlQueryArg());\n        return args;\n    };\n\n    urlQueryArg(objectify_options) {\n        if (!objectify_options) {\n            if (this.urlQueryOptions) {\n                objectify_options = this.urlQueryOptions\n            } else {\n                objectify_options = {\n                    include_query_string : true,\n                    include_filters : true,\n                    include_paging : true,\n                    include_sort : true,\n                    include_fields : false,\n                    include_aggregations : false\n                }\n            }\n        }\n        var q = JSON.stringify(this.currentQuery.objectify(objectify_options));\n        var obj = {};\n        obj[this.urlQuerySource] = encodeURIComponent(q);\n        return obj;\n    }\n\n    _makeUrlQuery(args) {\n        var keys = Object.keys(args);\n        var entries = [];\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var val = args[key];\n            entries.push(key + \"=\" + val);  // NOTE we do not escape - this should already be done\n        }\n        return entries.join(\"&\");\n    }\n\n    /////////////////////////////////////////////////\n    // lifecycle functions\n\n    synchronise() {\n        // ask the components to synchronise themselves with the latest state\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            component.synchronise()\n        }\n    }\n\n    draw() {\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            component.draw(this);\n        }\n    };\n\n    reset() {\n        // tell the world we're about to reset\n        this.trigger(\"edges:pre-reset\");\n\n        // clone from the opening query\n        var requestedQuery = this.cloneOpeningQuery();\n\n        // request the components to contribute to the query\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            component.contrib(requestedQuery);\n        }\n\n        // push the query, which will reconcile it with the baseQuery\n        this.pushQuery(requestedQuery);\n\n        // tell the world that we've done the reset\n        this.trigger(\"edges:post-reset\");\n\n        // now execute the query\n        // this.doQuery();\n        this.cycle();\n    };\n\n    sleep() {\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            component.sleep();\n        }\n    };\n\n    wake() {\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            component.wake();\n        }\n    };\n\n    trigger(event_name) {\n        if (event_name in this.callbacks) {\n            this.callbacks[event_name](this);\n        }\n        this.context.trigger(event_name);\n    };\n\n    ////////////////////////////////////////////\n    // accessors\n\n    getComponent(params) {\n        var id = params.id;\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            if (component.id === id) {\n                return component;\n            }\n        }\n        return false;\n    };\n\n    // return components in the requested category\n    category(cat) {\n        var comps = [];\n        for (var i = 0; i < this.components.length; i++) {\n            var component = this.components[i];\n            if (component.category === cat) {\n                comps.push(component);\n            }\n        }\n        return comps;\n    };\n\n    jq(selector) {\n        return $(selector, this.context);\n    };\n}\n\nexport class Template {\n    draw(edge) {}\n}\n\nexport class Component {\n    constructor(params) {\n        this.id = getParam(params, \"id\");\n        this.renderer = getParam(params, \"renderer\");\n        this.category = getParam(params, \"category\", false);\n    }\n\n    init(edge) {\n        this.edge = edge;\n        this.context = this.edge.jq(\"#\" + this.id);\n        if (this.renderer) {\n            this.renderer.init(this);\n        }\n    }\n\n    draw() {\n        if (this.renderer) {\n            this.renderer.draw();\n        }\n    }\n\n    sleep() {\n        if (this.renderer) {\n            this.renderer.sleep();\n        }\n    }\n\n    wake() {\n        if (this.renderer) {\n            this.renderer.wake();\n        }\n    };\n\n    // convenience method for any renderer rendering a component\n    jq(selector) {\n        return this.edge.jq(selector);\n    }\n\n    // methods to be implemented by subclasses\n    contrib(query) {}\n    synchronise() {}\n}\n\nexport class Renderer {\n    init(component) {\n        this.component = component\n    }\n\n    draw() {};\n    sleep() {};\n    wake() {}\n}\n","import {$} from '../dependencies/jquery';\nimport {Component, Renderer} from \"./core\";\n\nexport function getParam(params, key, def) {\n    function _getDefault() {\n        if (typeof def === 'function') {\n            return def();\n        }\n        return def;\n    }\n\n    if (!params) {\n        return _getDefault();\n    }\n\n    if (!params.hasOwnProperty(key)) {\n        return _getDefault();\n    }\n\n    return params[key];\n}\n\nexport function getUrlParams() {\n    var params = {};\n    var url = window.location.href;\n    var fragment = false;\n\n    // break the anchor off the url\n    if (url.indexOf(\"#\") > -1) {\n        fragment = url.slice(url.indexOf('#'));\n        url = url.substring(0, url.indexOf('#'));\n    }\n\n    // extract and split the query args\n    var args = url.slice(url.indexOf('?') + 1).split('&');\n\n    for (var i = 0; i < args.length; i++) {\n        var kv = args[i].split('=');\n        if (kv.length === 2) {\n            var key = kv[0].replace(/\\+/g, \"%20\");\n            key = decodeURIComponent(key);\n            var val = kv[1].replace(/\\+/g, \"%20\");\n            val = decodeURIComponent(val);\n            if (val[0] === \"[\" || val[0] === \"{\") {\n                // if it looks like a JSON object in string form...\n                // remove \" (double quotes) at beginning and end of string to make it a valid\n                // representation of a JSON object, or the parser will complain\n                val = val.replace(/^\"/,\"\").replace(/\"$/,\"\");\n                val = JSON.parse(val);\n            }\n            params[key] = val;\n        }\n    }\n\n    // record the fragment identifier if required\n    if (fragment) {\n        params['#'] = fragment;\n    }\n\n    return params;\n}\n\nexport function isEmptyObject(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\n//////////////////////////////////////////////////////////////////\n// Closures for integrating the object with other modules\n\n// returns a function that will call the named function (fn) on\n// a specified object instance (obj), with all \"arguments\"\n// supplied to the closure by the caller\n//\n// if the args property is specified here, instead a parameters object\n// will be constructed with a one to one mapping between the names in args\n// and the values in the \"arguments\" supplied to the closure, until all\n// values in \"args\" are exhausted.\n//\n// so, for example,\n//\n// objClosure(this, \"function\")(arg1, arg2, arg3)\n// results in a call to\n// this.function(arg1, arg2, arg3, ...)\n//\n// and\n// objClosure(this, \"function\", [\"one\", \"two\"])(arg1, arg2, arg3)\n// results in a call to\n// this.function({one: arg1, two: arg2})\n//\nexport function objClosure(obj, fn, args, context_params) {\n    return function() {\n        if (args) {\n            var params = {};\n            for (var i = 0; i < args.length; i++) {\n                if (arguments.length > i) {\n                    params[args[i]] = arguments[i];\n                }\n            }\n            if (context_params) {\n                params = $.extend(params, context_params);\n            }\n            obj[fn](params);\n        } else {\n            var slice = Array.prototype.slice;\n            var theArgs = slice.apply(arguments);\n            if (context_params) {\n                theArgs.push(context_params);\n            }\n            obj[fn].apply(obj, theArgs);\n        }\n    }\n}\n\nexport function eventClosure(obj, fn, conditional, preventDefault) {\n    if (preventDefault === undefined) {\n        preventDefault = true;\n    }\n    return function(event) {\n        if (conditional) {\n            if (!conditional(event)) {\n                return;\n            }\n        }\n        if (preventDefault) {\n            event.preventDefault();\n        }\n        obj[fn](this, event);\n    }\n}\n\n///////////////////////////////////////////////////\n// Group of asynchronous operations\n\nexport class AsyncGroup {\n    constructor(params) {\n        this.list = getParam(params, \"list\");\n        this.successCallbackArgs = getParam(params, \"successCallbackArgs\");\n        this.errorCallbackArgs = getParam(params, \"errorCallbackArgs\");\n\n        this.functions = {\n            action: getParam(params, \"action\"),\n            success: getParam(params, \"success\"),\n            carryOn: getParam(params, \"carryOn\"),\n            error: getParam(params, \"error\")\n        };\n\n        this.checkList = [];\n\n        this.finished = false;\n\n        for (let i = 0; i < this.list.length; i++) {\n            this.checkList.push(0);\n        }\n    }\n\n    process(params) {\n        if (this.list.length === 0) {\n            this.functions.carryOn();\n        }\n\n        for (let i = 0; i < this.list.length; i++) {\n            let context = {index: i};\n\n            let success_callback = objClosure(this, \"_actionSuccess\", this.successCallbackArgs, context);\n            let error_callback = objClosure(this, \"_actionError\", this.successCallbackArgs, context);\n            let complete_callback = false;\n\n            this.functions.action({entry: this.list[i],\n                success_callback: success_callback,\n                error_callback: error_callback,\n                complete_callback: complete_callback\n            });\n        }\n    };\n\n    _actionSuccess(params) {\n        let index = params.index;\n        delete params.index;\n\n        params[\"entry\"] = this.list[index];\n        this.functions.success(params);\n        this.checkList[index] = 1;\n\n        if (this._isComplete()) {\n            this._finalise();\n        }\n    };\n\n    _actionError(params) {\n        let index = params.index;\n        delete params.index;\n\n        params[\"entry\"] = this.list[index];\n        this.functions.error(params);\n        this.checkList[index] = -1;\n\n        if (this._isComplete()) {\n            this._finalise();\n        }\n    };\n\n    _actionComplete(params) {};\n\n    _isComplete() {\n        return $.inArray(0, this.checkList) === -1;\n    };\n\n    _finalise = function() {\n        if (this.finished) {\n            return;\n        }\n        this.finished = true;\n        this.functions.carryOn();\n    };\n}\n\n///////////////////////////////////////////////////\n// Style/CSS/HTML ID related functions\n\nexport function bem(block, element, modifier) {\n    let bemClass = block;\n    if (element) {\n        bemClass += \"__\" + element;\n    }\n    if (modifier) {\n        bemClass += \"--\" + modifier;\n    }\n    return bemClass;\n}\n\nexport function styleClasses(namespace, field, instance_name) {\n    instance_name = _normaliseInstanceName(instance_name);\n    let cl = namespace;\n    if (field) {\n        cl += \"_\" + field\n    }\n    if (instance_name) {\n        let second = namespace + \"_\" + instance_name;\n        if (field) {\n            second += \"_\" + field;\n        }\n        cl += \" \" + second;\n    }\n    return cl;\n}\n\nexport function jsClasses(namespace, field, instance_name) {\n    instance_name = _normaliseInstanceName(instance_name);\n    let styles = styleClasses(namespace, field, instance_name)\n    let jsClasses = \"\";\n    let bits = styles.split(\" \")\n    for (let i = 0; i < bits.length; i++) {\n        let bit = bits[i];\n        jsClasses += \" js-\" + bit;\n    }\n    return jsClasses;\n}\n\nexport function allClasses(namespace, field, instance_name) {\n    instance_name = _normaliseInstanceName(instance_name);\n    let styles = styleClasses(namespace, field, instance_name);\n    let js = jsClasses(namespace, field, instance_name);\n    return styles + \" \" + js;\n}\n\nexport function jsClassSelector(namespace, field, instance_name) {\n    instance_name = _normaliseInstanceName(instance_name);\n    let sel = \".js-\" + namespace;\n    if (instance_name) {\n        sel += \"_\" + instance_name;\n    }\n    if (field) {\n        sel += \"_\" + field;\n    }\n    return sel;\n}\n\nexport function htmlID(namespace, field, instance_name) {\n    instance_name = _normaliseInstanceName(instance_name);\n    let id = namespace;\n    if (instance_name) {\n        id += \"_\" + instance_name;\n    }\n    if (field) {\n        id += \"_\" + field;\n    }\n    return id;\n}\n\nexport function idSelector(namespace, field, instance_name) {\n    instance_name = _normaliseInstanceName(instance_name);\n    return \"#\" + htmlID(namespace, field, instance_name);\n}\n\nfunction _normaliseInstanceName(instance_name) {\n    if (typeof instance_name === \"string\") {\n        return instance_name;\n    }\n    // FIXME: check this doesn't cause a circular import issue\n    if (instance_name instanceof Component) {\n        return instance_name.id;\n    }\n\n    if (instance_name instanceof Renderer) {\n        return instance_name.component.id;\n    }\n}\n\n////////////////////////////////////////////////////\n// content wrangling\n\nexport function escapeHtml(unsafe, def) {\n    if (def === undefined) {\n        def = \"\";\n    }\n    if (unsafe === undefined || unsafe == null) {\n        return def;\n    }\n    try {\n        if (typeof unsafe.replace !== \"function\") {\n            return unsafe\n        }\n        return unsafe\n            .replace(/&/g, \"&amp;\")\n            .replace(/</g, \"&lt;\")\n            .replace(/>/g, \"&gt;\")\n            .replace(/\"/g, \"&quot;\")\n            .replace(/'/g, \"&#039;\");\n    } catch(err) {\n        return def;\n    }\n}\n\nexport function safeId(unsafe) {\n    return unsafe.replace(/&/g, \"_\")\n            .replace(/</g, \"_\")\n            .replace(/>/g, \"_\")\n            .replace(/\"/g, \"_\")\n            .replace(/'/g, \"_\")\n            .replace(/\\./gi,'_')\n            .replace(/\\:/gi,'_')\n            .replace(/\\s/gi,\"_\");\n}\n\nexport function numFormat(params) {\n    var reflectNonNumbers = getParam(params, \"reflectNonNumbers\", false);\n    var prefix = getParam(params, \"prefix\", \"\");\n    var zeroPadding = getParam(params, \"zeroPadding\", false);\n    var decimalPlaces = getParam(params, \"decimalPlaces\", false);\n    var thousandsSeparator = getParam(params, \"thousandsSeparator\", false);\n    var decimalSeparator = getParam(params, \"decimalSeparator\", \".\");\n    var suffix = getParam(params, \"suffix\", \"\");\n\n    return function(number) {\n        // ensure this is really a number\n        var num = parseFloat(number);\n        if (isNaN(num)) {\n            if (reflectNonNumbers) {\n                return number;\n            } else {\n                return num;\n            }\n        }\n\n        // first off we need to convert the number to a string, which we can do directly, or using toFixed if that\n        // is suitable here\n        if (decimalPlaces !== false) {\n            num = num.toFixed(decimalPlaces);\n        } else {\n            num  = num.toString();\n        }\n\n        // now \"num\" is a string containing the formatted number that we can work on\n\n        var bits = num.split(\".\");\n\n        if (zeroPadding !== false) {\n            var zeros = zeroPadding - bits[0].length;\n            var pad = \"\";\n            for (var i = 0; i < zeros; i++) {\n                pad += \"0\";\n            }\n            bits[0] = pad + bits[0];\n        }\n\n        if (thousandsSeparator !== false) {\n            bits[0] = bits[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparator);\n        }\n\n        if (bits.length === 1) {\n            return prefix + bits[0] + suffix;\n        } else {\n            return prefix + bits[0] + decimalSeparator + bits[1] + suffix;\n        }\n    }\n}\n\nexport function numParse(params) {\n    var commaRx = new RegExp(\",\", \"g\");\n\n    return function(num) {\n        num = num.trim();\n        num = num.replace(commaRx, \"\");\n        if (num === \"\") {\n            return 0.0;\n        }\n        return parseFloat(num);\n    }\n}\n\n//////////////////////////////////////////////////////////////////\n// Event binding utilities\n\nexport function on(selector, event, caller, targetFunction, delay, conditional, preventDefault) {\n    if (preventDefault === undefined) {\n        preventDefault = true;\n    }\n    // if the caller has an inner component (i.e. it is a Renderer), use the component's id\n    // otherwise, if it has a namespace (which is true of Renderers or Templates) use that\n    if (caller.component && caller.component.id) {\n        event = event + \".\" + caller.component.id;\n    } else if (caller.namespace) {\n        event = event + \".\" + caller.namespace;\n    }\n\n    // create the closure to be called on the event\n    var clos = eventClosure(caller, targetFunction, conditional, preventDefault);\n\n    // now bind the closure directly or with delay\n    // if the caller has an inner component (i.e. it is a Renderer) use the components jQuery selector\n    // otherwise, if it has an inner, use the selector on that.\n    if (delay) {\n        if (caller.component) {\n            caller.component.jq(selector).bindWithDelay(event, clos, delay);\n        } else if (caller.edge) {\n            caller.edge.jq(selector).bindWithDelay(event, clos, delay);\n        } else {\n            $(selector).bindWithDelay(event, clos, delay);\n        }\n    } else {\n        if (caller.component) {\n            var element = caller.component.jq(selector);\n            element.off(event);\n            element.on(event, clos);\n        } else if (caller.edge) {\n            var element = caller.edge.jq(selector);\n            element.off(event);\n            element.on(event, clos);\n        } else {\n            var element = $(selector);\n            element.off(event);\n            element.on(event, clos);\n        }\n    }\n}\n\nexport function off(selector, event, caller) {\n    // if the caller has an inner component (i.e. it is a Renderer), use the component's id\n    // otherwise, if it has a namespace (which is true of Renderers or Templates) use that\n    if (caller.component && caller.component.id) {\n        event = event + \".\" + caller.component.id;\n    } else if (caller.namespace) {\n        event = event + \".\" + caller.namespace;\n    }\n\n    if (caller.component) {\n        var element = caller.component.jq(selector);\n        element.off(event);\n    } else if (caller.edge) {\n        var element = caller.edge.jq(selector);\n        element.off(event);\n    } else {\n        var element = $(selector);\n        element.off(event);\n    }\n}","import {QueryAdapter} from './adapter'\n\nimport {es} from '../../dependencies/es'\n\nclass ESQueryAdapter extends QueryAdapter {\n    doQuery(params) {\n        var edge = params.edge;\n        var query = params.query;\n        var success = params.success;\n        var error = params.error;\n\n        if (!query) {\n            query = edge.currentQuery;\n        }\n\n        es.doQuery({\n            search_url: edge.searchUrl,\n            queryobj: query.objectify(),\n            datatype: edge.datatype,\n            success: success,\n            error: error\n        });\n    };\n}\n\nexport {ESQueryAdapter}","class QueryAdapter {\n    doQuery(params) {};\n}\n\nexport {QueryAdapter}","import {Component} from \"../core\";\nimport {getParam} from \"../utils\";\n\nexport class Chart extends Component {\n    constructor(params) {\n        super(params);\n\n        // actual data series that the renderer will render\n        // data series is of the form\n        // [\n        //      {\n        //          key: \"<name of series>\",\n        //          values: [\n        //              {label: \"<name of this value>\", value: \"<the value itself>\"}\n        //          ]\n        //      }\n        // ]\n        //\n        // For example\n        // [{ key: \"power output\", values: [{label: 1980, value: 100}, {label: 1981, value: 200}]\n        this.dataSeries = getParam(params, \"dataSeries\", false);\n\n        // function which will generate the data series, which will be\n        // written to this.dataSeries if that is not provided\n        this.dataFunction = getParam(params, \"dataFunction\", false);\n\n        // should we enforce a rectangular shape on the data series for when there is\n        // more than one series to be displayed?\n        this.rectangulate = getParam(params, \"rectangulate\", false);\n\n        // function which will sort the values of a series, used when rectangulate is\n        // set to true\n        this.seriesSort = getParam(params, \"seriesSort\", false);\n    }\n\n    synchronise () {\n        if (this.dataFunction) {\n            this.dataSeries = this.dataFunction(this);\n        }\n        if (this.rectangulate) {\n            this._rectangulate();\n        }\n    }\n\n    _rectangulate() {\n        if (this.dataSeries.length === 1) {\n            // if there's only one series, it is rectangular by definition\n            return;\n        }\n\n        // first index all the keys in the data series values for all\n        // data series\n        let allLabels = [];\n        for (let i = 0; i < this.dataSeries.length; i++) {\n            let series = this.dataSeries[i];\n            for (let j = 0; j < series.values.length; j++) {\n                let point = series.values[j];\n                if (!allLabels.includes(point.label)) {\n                    allLabels.push(point.label);\n                }\n            }\n        }\n\n        // now we have a full list of labels, check they are all present\n        // in each series, and if not set a default value of 0\n        for (let i = 0; i < this.dataSeries.length; i++) {\n            let series = this.dataSeries[i];\n            let currentLabels = series.values.map((x) => x.label)\n            for (let j = 0; j < allLabels.length; j++) {\n                let considerLabel = allLabels[j];\n                if (!currentLabels.includes(considerLabel)) {\n                    series.values.push({label: considerLabel, value: 0});   // NOTE: there is no sorting here, have to see what impact that has\n                }\n            }\n            if (this.seriesSort) {\n                series.values = this.seriesSort(series.values);\n            }\n        }\n    }\n}\n\n////////////////////////////////////////////////////////////\n// Some utility data functions that could be used by the chart\n\n/**\n * Takes a date histogram aggregation and turns it into a single data series\n *\n * @param params\n * @returns {(function(*): ([]|[{values: *[], key: string}]))|*}\n */\nexport function dateHistogram(params) {\n\n    let agg = params.agg;\n    let seriesName = params.seriesName;\n\n    return function(component) {\n        let values = [];\n\n        if (!component.edge.result) {\n            return []\n        }\n        let aggregation = component.edge.result.aggregation(agg);\n        for (let i = 0; i < aggregation.buckets.length; i++) {\n            let bucket = aggregation.buckets[i];\n            values.push({label: bucket.key, value: bucket.doc_count});\n        }\n        return [{key: seriesName, values: values}]\n    }\n}\n\n/**\n * Takes a date histogram with a nested terms aggregation and turns it\n * into a set of date based series, one per nested term\n *\n * @param params\n */\nexport function termSplitDateHistogram(params) {\n    let histogramAgg = params.histogramAgg;\n    let termsAgg = params.termsAgg;\n\n    return function(component) {\n        let series = {};\n\n        if (!component.edge.result) {\n            return []\n        }\n        let aggregation = component.edge.result.aggregation(histogramAgg);\n        for (let i = 0; i < aggregation.buckets.length; i++) {\n            let bucket = aggregation.buckets[i];\n            let terms = bucket[termsAgg];\n            for (let j = 0; j < terms.buckets.length; j++) {\n                let term = terms.buckets[j];\n                if (!(term.key in series)) {\n                    series[term.key] = [];\n                }\n                series[term.key].push({label: bucket.key, value: term.doc_count});\n            }\n        }\n\n        let dataSeries = [];\n        let seriesNames = Object.keys(series);\n        for (let i = 0; i < seriesNames.length; i++) {\n            let seriesName = seriesNames[i];\n            dataSeries.push({key: seriesName, values: series[seriesName]})\n        }\n        return dataSeries;\n    }\n}\n\n/**\n * Converts one or more terms aggregations (which may be nested in other aggregations)\n * into data series.\n *\n * In the case of nested aggregations, use dot notation to indicate the path to the\n * relevant terms aggregation (e.g. event.format)\n *\n * @param params\n * @returns {(function(*): (*[]))|*}\n */\nexport function nestedTerms(params) {\n    let aggs = getParam(params, \"aggs\", []);\n    let seriesName = getParam(params, \"seriesName\", \"series\");\n\n    return function (component) {\n        // for each aggregation, get the results and add them to the data series\n        var data_series = [];\n        if (!component.edge.result) {\n            return data_series;\n        }\n\n        let context = component.edge.result.data.aggregations;\n\n        function recurse(aggs, context) {\n            let finalBuckets = []\n            for (let i = 0; i < aggs.length; i++) {\n                let agg = aggs[i];\n                if (typeof agg === \"string\") {\n                    return context[agg].buckets;\n                } else {\n                    let key = Object.keys(agg)[0];\n                    let nested = context[key].buckets;\n                    if (agg[key].keys) {\n                        nested = nested.filter(b => agg[key].keys.includes(b.key));\n                    }\n                    for (let j = 0; j < nested.length; j++) {\n                        let nest = nested[j];\n                        let bs = recurse(agg[key].aggs, nest);\n                        finalBuckets.push(...bs);\n                    }\n                }\n            }\n            return finalBuckets;\n        }\n        let bs = recurse(aggs, context);\n\n        var series = {};\n        series[\"key\"] = seriesName;\n        series[\"values\"] = [];\n\n        for (let j = 0; j < bs.length; j++) {\n            let doccount = bs[j].doc_count;\n            let key = bs[j].key;\n            series.values.push({label: key, value: doccount});\n        }\n\n        return [series];\n    }\n}","import {nv} from \"../../../dependencies/nvd3\"\nimport {d3} from \"../../../dependencies/d3\"\n\nimport {Renderer} from \"../../core\";\nimport {getParam, htmlID, idSelector, styleClasses} from \"../../utils\";\nimport {toXY, hasData} from \"./nvd3utils\";\n\nexport class MultibarRenderer extends Renderer {\n    constructor(params) {\n        super(params);\n\n        this.xTickFormat = getParam(params, \"xTickFormat\", \",.2f\");\n        this.yTickFormat = getParam(params, \"yTickFormat\", \",.2f\");\n\n        this.stacked = getParam(params, \"stacked\", false);\n        this.groupSpacing = getParam(params, \"groupSpacing\", 0.1);\n        this.transitionDuration = getParam(params, \"transitionDuration\", 500);\n        this.controls = getParam(params, \"controls\", false);\n        this.barColor = getParam(params, \"barColor\", false);\n        this.color = getParam(params, \"color\", false);\n        this.showLegend = getParam(params, \"showLegend\", true);\n        this.xAxisLabel = getParam(params, \"xAxisLabel\", \"\");\n        this.yAxisLabel = getParam(params, \"yAxisLabel\", \"\");\n        this.yAxisLabelDistance = getParam(params, \"yAxisLabelDistance\", 0);\n\n        this.marginTop = getParam(params, \"marginTop\", 30);\n        this.marginRight = getParam(params, \"marginRight\", 20);\n        this.marginBottom = getParam(params, \"marginBottom\", 50);\n        this.marginLeft = getParam(params, \"marginLeft\", 60);\n\n        this.hideIfNoData = getParam(params, \"hideIfNoData\", false);\n        this.onHide = getParam(params, \"onHide\", false);\n        this.onShow = getParam(params, \"onShow\", false);\n\n        this.namespace = \"edges-nvd3-multibar\";\n    }\n\n    draw() {\n        // first sort out the data series\n        let data_series = this.component.dataSeries;\n        if (!data_series) {\n            data_series = [];\n        }\n        data_series = toXY(this.component.dataSeries);\n\n        // now decide if we are going to continue\n        if (this.hideIfNoData) {\n            if (!hasData(data_series)) {\n                this.component.context.html(\"\");\n                this.component.context.hide();\n\n                if (this.onHide) {\n                    this.onHide();\n                }\n\n                return;\n            }\n            \n            this.component.context.show();\n            if (this.onShow) {\n                this.onShow();\n            }\n        }\n\n        let svgId = htmlID(this.namespace, \"svg\", this);\n        let svgSelector = idSelector(this.namespace, \"svg\", this);\n        this.component.context.html('<svg id=\"' + svgId + '\"></svg>');\n\n        var that = this;\n        nv.addGraph(function () {\n            var chart = nv.models.multiBarChart()\n                .showControls(that.controls)\n                .margin({top: that.marginTop, right: that.marginRight, bottom: that.marginBottom, left: that.marginLeft})\n                .stacked(that.stacked)\n                .groupSpacing(that.groupSpacing);\n\n            chart.xAxis\n                .axisLabel(that.xAxisLabel)\n\n            if (that.xTickFormat) {\n                var fn = that.xTickFormat;\n                if (typeof that.xTickFormat === \"string\") {\n                    fn = d3.format(that.xTickFormat);\n                }\n                chart.xAxis.tickFormat(fn);\n            }\n\n            chart.yAxis\n                .axisLabel(that.yAxisLabel)\n                .axisLabelDistance(that.yAxisLabelDistance);\n\n            if (that.yTickFormat) {\n                var fn = that.yTickFormat;\n                if (typeof that.yTickFormat === \"string\") {\n                    fn = d3.format(that.yTickFormat);\n                }\n                chart.yAxis.tickFormat(fn);\n            }\n\n            if (that.barColor) {\n                chart.barColor(that.barColor);\n            }\n\n            if (that.color) {\n                chart.color(that.color);\n            }\n\n            chart.showLegend(that.showLegend);\n\n            d3.select(svgSelector)\n                .datum(data_series)\n                .transition().duration(that.transitionDuration).call(chart);\n\n            nv.utils.windowResize(chart.update);\n\n            return chart;\n        });\n    }\n}","var nv = window.nv;\nexport {nv};","var d3 = window.d3;\nexport {d3};","import {$} from \"../../../dependencies/jquery\"\n\n/**\n * Convert a Chart data series to the X/Y format for nvd3 charts\n *\n * @param data_series\n * @returns {*[]}\n */\nexport function toXY(data_series) {\n    var new_series = [];\n    for (var i = 0; i < data_series.length; i++) {\n        var os = data_series[i];\n        var ns = {};\n        ns[\"key\"] = os[\"key\"];\n        ns[\"values\"] = [];\n        for (var j = 0; j < os.values.length; j++) {\n            var vector = os.values[j];\n            ns[\"values\"].push({x: vector.label, y: vector.value})\n        }\n        new_series.push(ns)\n    }\n    return new_series;\n}\n\n/**\n * Check if there's any data in the data series\n *\n * @param dataSeries\n * @returns {boolean}\n */\nexport function hasData(dataSeries) {\n    if (!dataSeries) {\n        return false;\n    }\n\n    if (dataSeries.length === 0) {\n        return false;\n    }\n\n    var emptyCount = 0;\n    for (var i = 0; i < dataSeries.length; i++) {\n        var series = dataSeries[i];\n        if (series.values.length === 0) {\n            emptyCount++;\n        }\n    }\n    if (emptyCount === dataSeries.length) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Wrap chart labels according to supplied display constraints\n *\n */\nexport function wrapLabels(params) {\n    var axisSelector = params.axisSelector;\n    var maxWidth = params.maxWidth;\n    var maxHeight = params.maxHeight;\n    var lineHeight = params.lineHeight || 1.2;\n    var wordBreaks = params.wordBreaks || [\" \", \"\\t\"];\n    var minChunkSize = params.minHyphenSize || 3;\n\n    function _isMidWord(currentLine, remainder) {\n        var leftChar = $.inArray(currentLine[currentLine.length - 1], wordBreaks) === -1;\n        var rightChar = $.inArray(remainder[0], wordBreaks) === -1;\n        return leftChar && rightChar;\n    }\n\n    function _toPrevSpace(currentLine) {\n        for (var i = currentLine.length - 1; i >= 0; i--) {\n            var char = currentLine[i];\n            if ($.inArray(char, wordBreaks) !== -1) {\n                return currentLine.length - i;\n            }\n        }\n        return -1;\n    }\n\n    function _toNextSpace(remainder) {\n        for (var i = 0; i < remainder.length; i++) {\n            var char = remainder[i];\n            if ($.inArray(char, wordBreaks) !== -1) {\n                return i + 1;\n            }\n        }\n        return -1;\n    }\n\n    function _backtrack(count, currentLine, remainder) {\n        for (var i = 0; i < count; i++) {\n            remainder.unshift(currentLine.pop());\n        }\n    }\n\n    function _isTooLong(tspan) {\n        return tspan.node().getComputedTextLength() >= maxWidth\n    }\n\n    function separate(text) {\n        // get the current content then clear the text element\n        var chars = text.text().trim().split(\"\");\n        text.text(null);\n\n        // set up registries for the text lines that they will create\n        var lines = [];\n\n        // create a tspan for working in - we need it to calculate line widths dynamically\n        var x = text.attr(\"x\");\n        var tspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", 0);\n\n        // record the current line\n        var currentLine = [];\n\n        // for each character in the text, push to the current line, assign to the tspan, and then\n        // check if we have exceeded the allowed max width\n        while (chars.length > 0) {\n            var char = chars.shift();\n            currentLine.push(char);\n            tspan.text(currentLine.join(\"\"));\n\n            var maxed = false;\n            var hyphenated = false;\n            while(_isTooLong(tspan)) {\n                // record that we pushed the tspan to the limit\n                maxed = true;\n\n                // if we already added a hyphen, remove it\n                if (hyphenated) {\n                    currentLine.splice(currentLine.length - 1);\n                    hyphenated = false;\n                }\n\n                // if we have exceeded the max width back-track 1\n                _backtrack(1, currentLine, chars);\n\n                if (_isMidWord(currentLine, chars)) {\n                    var toPrevSpace = _toPrevSpace(currentLine);\n\n                    if (toPrevSpace === -1 || toPrevSpace - 1 > minChunkSize) {\n                        _backtrack(1, currentLine, chars);\n                        currentLine.push(\"-\");\n                        hyphenated = true;\n                    } else {\n                        _backtrack(toPrevSpace, currentLine, chars);\n                    }\n                }\n\n                currentLine = currentLine.join(\"\").trim().split(\"\");\n                tspan.text(currentLine.join(\"\"));\n            }\n\n            // if we didn't yet fill the tspan, continue adding characters\n            if (!maxed && chars.length > 0) {\n                continue;\n            }\n\n            // otherwise, move on to the next line\n            if (maxed || chars.length === 0) {\n                lines.push(currentLine);\n                currentLine = [];\n            }\n        }\n\n        // create all the tspans\n        tspan.remove();\n        var tspans = [];\n        for (var i = 0; i < lines.length; i++) {\n            tspan = text.append(\"tspan\").attr(\"x\", x).attr(\"y\", 0);\n            tspan.text(lines[i].join(\"\"));\n            tspans.push(tspan);\n        }\n\n        return tspans;\n    }\n\n    function distribute(text, tspans) {\n        var imax = tspans.length;\n        var pmax = lineHeight * (imax - 1);\n        var dy = parseFloat(text.attr(\"dy\"));\n\n        for (var j = 0; j < tspans.length; j++) {\n            var pos = (lineHeight * j) - (pmax / 2.0) + dy;\n            var tspan = tspans[j];\n            tspan.attr(\"dy\", pos + \"em\");\n        }\n    }\n\n    function reduce(text, tspans) {\n        var reduced = false;\n        var box = text.node().getBBox();\n        if (box.height > maxHeight && tspans.length > 1) {\n            tspans[tspans.length - 1].remove();\n            tspans.pop();\n            var line = tspans[tspans.length - 1].text();\n            if (line.length > 3) {\n                line = line.substring(0, line.length - 3) + \"...\";\n            }\n            tspans[tspans.length - 1].text(line);\n            reduced = true;\n        }\n        return reduced;\n    }\n\n    d3.selectAll(axisSelector + \" .tick text\").each(function(i, e) {\n        var text = d3.select(this);\n        var tspans = separate(text);\n        do {\n            distribute(text, tspans);\n        }\n        while (reduce(text, tspans))\n    });\n}","import {es} from '../../dependencies/es'\n\nimport {Component} from \"../core\";\nimport {getParam} from \"../utils\";\nimport {pickFirst} from \"./maputils\";\nimport Geohash from \"latlon-geohash\";\n\nexport class GeohashedZoomableMap extends Component {\n    constructor(params) {\n        super(params);\n        //////////////////////////////////\n        // parameters that can be passed in\n\n        // field in the data which is the geo_point type\n        this.geoHashAggregation = getParam(params, \"geoHashAggregation\", \"geohash\");\n\n        this.calculateCentre = getParam(params, \"calculateCentre\", () => { return pickFirst });\n\n        this.geoBoundingBoxFilterField = getParam(params, \"geoBoundingBoxFilterField\", \"location\")\n\n        this.zoomToPrecisionMap = getParam(params, \"zoomToPrecisionMap\", {\n            0: 1,\n            3: 2,\n            5: 3,\n            7: 4,\n            10: 5,\n            13: 6,\n            15: 7\n        });\n\n        //////////////////////////////////\n        // internal state\n\n        // list of locations and the related object at those locations\n        // of the form\n        // {lat: <lat>, lon: <lon>, obj: {object}}\n        this.locations = [];\n\n        // lat/lon object which defines the centre point of the map\n        // this default is somewhere in Mali, and is a decent default for the globe\n        this.centre = {lat: 17, lon: 0};\n\n        this.currentPrecision = 0;\n        this.currentTopLeft = false;\n        this.currentBottomRight = false;\n    }\n\n    synchronise() {\n        this.locations = [];\n        this.centre = {lat: 17, lon: 0};\n\n        // read the locations out of the geohash aggregation\n        if (this.edge.result) {\n            let agg = this.edge.result.aggregation(this.geoHashAggregation);\n            for (let i = 0; i < agg.buckets.length; i++) {\n                let bucket = agg.buckets[i];\n                let latlon = Geohash.decode(bucket.key);\n                latlon[\"count\"] = bucket.doc_count;\n                this.locations.push(latlon);\n            }\n        }\n\n        // set the centre point\n        if (this.locations.length > 0) {\n            this.centre = this.calculateCentre(this.locations);\n        }\n    }\n\n    boundsChanged(params) {\n        let top_left = params.top_left;\n        let bottom_right = params.bottom_right;\n        let zoom = params.zoom;\n\n        let precision = this._getPrecisionForZoom(zoom);\n\n        // if the precision isn't going to change, and the view is just a closer view than\n        // the existing one, don't run the cycle\n        if (precision === this.currentPrecision && this._currentBoxContains({top_left: top_left, bottom_right: bottom_right})) {\n            return;\n        }\n\n        let nq = this.edge.cloneQuery();\n\n        nq.removeMust(new es.GeoBoundingBoxFilter({field: this.geoBoundingBoxFilterField}))\n        nq.addMust(new es.GeoBoundingBoxFilter({\n            field: this.geoBoundingBoxFilterField,\n            top_left: top_left,\n            bottom_right: bottom_right\n        }))\n\n        let agg = nq.getAggregation({name: this.geoHashAggregation});\n        agg.precision = precision;\n\n        this.currentPrecision = precision;\n        this.currentBottomRight = bottom_right;\n        this.currentTopLeft = top_left;\n\n        this.edge.pushQuery(nq);\n        this.edge.cycle()\n    }\n\n    _getPrecisionForZoom(zoom) {\n        for (let i = zoom; i >= 0; i--) {\n            if (i in this.zoomToPrecisionMap) {\n                return this.zoomToPrecisionMap[i];\n            }\n        }\n        return 1\n    }\n\n    _currentBoxContains(params) {\n        let top_left = params.top_left;\n        let bottom_right = params.bottom_right;\n\n        // if we don't know the current box, then assume false, as we can't tell\n        if (!this.currentTopLeft || !this.currentBottomRight) {\n            return false;\n        }\n\n        function getCorners(top_left, bottom_right) {\n            let a = {lon: top_left.lon, lat: top_left.lat}\n            let b = {lon: top_left.lon, lat: bottom_right.lat}\n            let c = {lon: bottom_right.lon, lat: bottom_right.lat}\n            let d = {lon: bottom_right.lon, lat: top_left.lat}\n            return [a, b, c, d];\n        }\n\n        let current = getCorners(this.currentTopLeft, this.currentBottomRight);\n        let updated = getCorners(top_left, bottom_right);\n\n        let tl = current[0].lon > updated[0].lon && current[0].lat < updated[0].lat;\n        let tr = current[1].lon > updated[1].lon && current[1].lat > updated[1].lat;\n        let br = current[2].lon < updated[2].lon && current[2].lat > updated[2].lat;\n        let bl = current[3].lon < updated[3].lon && current[3].lat > updated[3].lat;\n\n        return tl && tr && br && bl;\n    }\n}\n","export function pickFirst(locations) {\n    return {lat: locations[0].lat, lon: locations[0].lon}\n}","/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n/* Geohash encoding/decoding and associated functions   (c) Chris Veness 2014-2019 / MIT Licence  */\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\nconst base32 = '0123456789bcdefghjkmnpqrstuvwxyz'; // (geohash-specific) Base32 map\n\n\n/**\n * Geohash: Gustavo Niemeyer’s geocoding system.\n */\nclass Geohash {\n\n    /**\n     * Encodes latitude/longitude to geohash, either to specified precision or to automatically\n     * evaluated precision.\n     *\n     * @param   {number} lat - Latitude in degrees.\n     * @param   {number} lon - Longitude in degrees.\n     * @param   {number} [precision] - Number of characters in resulting geohash.\n     * @returns {string} Geohash of supplied latitude/longitude.\n     * @throws  Invalid geohash.\n     *\n     * @example\n     *     const geohash = Geohash.encode(52.205, 0.119, 7); // => 'u120fxw'\n     */\n    static encode(lat, lon, precision) {\n        // infer precision?\n        if (typeof precision == 'undefined') {\n            // refine geohash until it matches precision of supplied lat/lon\n            for (let p=1; p<=12; p++) {\n                const hash = Geohash.encode(lat, lon, p);\n                const posn = Geohash.decode(hash);\n                if (posn.lat==lat && posn.lon==lon) return hash;\n            }\n            precision = 12; // set to maximum\n        }\n\n        lat = Number(lat);\n        lon = Number(lon);\n        precision = Number(precision);\n\n        if (isNaN(lat) || isNaN(lon) || isNaN(precision)) throw new Error('Invalid geohash');\n\n        let idx = 0; // index into base32 map\n        let bit = 0; // each char holds 5 bits\n        let evenBit = true;\n        let geohash = '';\n\n        let latMin =  -90, latMax =  90;\n        let lonMin = -180, lonMax = 180;\n\n        while (geohash.length < precision) {\n            if (evenBit) {\n                // bisect E-W longitude\n                const lonMid = (lonMin + lonMax) / 2;\n                if (lon >= lonMid) {\n                    idx = idx*2 + 1;\n                    lonMin = lonMid;\n                } else {\n                    idx = idx*2;\n                    lonMax = lonMid;\n                }\n            } else {\n                // bisect N-S latitude\n                const latMid = (latMin + latMax) / 2;\n                if (lat >= latMid) {\n                    idx = idx*2 + 1;\n                    latMin = latMid;\n                } else {\n                    idx = idx*2;\n                    latMax = latMid;\n                }\n            }\n            evenBit = !evenBit;\n\n            if (++bit == 5) {\n                // 5 bits gives us a character: append it and start over\n                geohash += base32.charAt(idx);\n                bit = 0;\n                idx = 0;\n            }\n        }\n\n        return geohash;\n    }\n\n\n    /**\n     * Decode geohash to latitude/longitude (location is approximate centre of geohash cell,\n     *     to reasonable precision).\n     *\n     * @param   {string} geohash - Geohash string to be converted to latitude/longitude.\n     * @returns {{lat:number, lon:number}} (Center of) geohashed location.\n     * @throws  Invalid geohash.\n     *\n     * @example\n     *     const latlon = Geohash.decode('u120fxw'); // => { lat: 52.205, lon: 0.1188 }\n     */\n    static decode(geohash) {\n\n        const bounds = Geohash.bounds(geohash); // <-- the hard work\n        // now just determine the centre of the cell...\n\n        const latMin = bounds.sw.lat, lonMin = bounds.sw.lon;\n        const latMax = bounds.ne.lat, lonMax = bounds.ne.lon;\n\n        // cell centre\n        let lat = (latMin + latMax)/2;\n        let lon = (lonMin + lonMax)/2;\n\n        // round to close to centre without excessive precision: ⌊2-log10(Δ°)⌋ decimal places\n        lat = lat.toFixed(Math.floor(2-Math.log(latMax-latMin)/Math.LN10));\n        lon = lon.toFixed(Math.floor(2-Math.log(lonMax-lonMin)/Math.LN10));\n\n        return { lat: Number(lat), lon: Number(lon) };\n    }\n\n\n    /**\n     * Returns SW/NE latitude/longitude bounds of specified geohash.\n     *\n     * @param   {string} geohash - Cell that bounds are required of.\n     * @returns {{sw: {lat: number, lon: number}, ne: {lat: number, lon: number}}}\n     * @throws  Invalid geohash.\n     */\n    static bounds(geohash) {\n        if (geohash.length == 0) throw new Error('Invalid geohash');\n\n        geohash = geohash.toLowerCase();\n\n        let evenBit = true;\n        let latMin =  -90, latMax =  90;\n        let lonMin = -180, lonMax = 180;\n\n        for (let i=0; i<geohash.length; i++) {\n            const chr = geohash.charAt(i);\n            const idx = base32.indexOf(chr);\n            if (idx == -1) throw new Error('Invalid geohash');\n\n            for (let n=4; n>=0; n--) {\n                const bitN = idx >> n & 1;\n                if (evenBit) {\n                    // longitude\n                    const lonMid = (lonMin+lonMax) / 2;\n                    if (bitN == 1) {\n                        lonMin = lonMid;\n                    } else {\n                        lonMax = lonMid;\n                    }\n                } else {\n                    // latitude\n                    const latMid = (latMin+latMax) / 2;\n                    if (bitN == 1) {\n                        latMin = latMid;\n                    } else {\n                        latMax = latMid;\n                    }\n                }\n                evenBit = !evenBit;\n            }\n        }\n\n        const bounds = {\n            sw: { lat: latMin, lon: lonMin },\n            ne: { lat: latMax, lon: lonMax },\n        };\n\n        return bounds;\n    }\n\n\n    /**\n     * Determines adjacent cell in given direction.\n     *\n     * @param   geohash - Cell to which adjacent cell is required.\n     * @param   direction - Direction from geohash (N/S/E/W).\n     * @returns {string} Geocode of adjacent cell.\n     * @throws  Invalid geohash.\n     */\n    static adjacent(geohash, direction) {\n        // based on github.com/davetroy/geohash-js\n\n        geohash = geohash.toLowerCase();\n        direction = direction.toLowerCase();\n\n        if (geohash.length == 0) throw new Error('Invalid geohash');\n        if ('nsew'.indexOf(direction) == -1) throw new Error('Invalid direction');\n\n        const neighbour = {\n            n: [ 'p0r21436x8zb9dcf5h7kjnmqesgutwvy', 'bc01fg45238967deuvhjyznpkmstqrwx' ],\n            s: [ '14365h7k9dcfesgujnmqp0r2twvyx8zb', '238967debc01fg45kmstqrwxuvhjyznp' ],\n            e: [ 'bc01fg45238967deuvhjyznpkmstqrwx', 'p0r21436x8zb9dcf5h7kjnmqesgutwvy' ],\n            w: [ '238967debc01fg45kmstqrwxuvhjyznp', '14365h7k9dcfesgujnmqp0r2twvyx8zb' ],\n        };\n        const border = {\n            n: [ 'prxz',     'bcfguvyz' ],\n            s: [ '028b',     '0145hjnp' ],\n            e: [ 'bcfguvyz', 'prxz'     ],\n            w: [ '0145hjnp', '028b'     ],\n        };\n\n        const lastCh = geohash.slice(-1);    // last character of hash\n        let parent = geohash.slice(0, -1); // hash without last character\n\n        const type = geohash.length % 2;\n\n        // check for edge-cases which don't share common prefix\n        if (border[direction][type].indexOf(lastCh) != -1 && parent != '') {\n            parent = Geohash.adjacent(parent, direction);\n        }\n\n        // append letter for direction to parent\n        return parent + base32.charAt(neighbour[direction][type].indexOf(lastCh));\n    }\n\n\n    /**\n     * Returns all 8 adjacent cells to specified geohash.\n     *\n     * @param   {string} geohash - Geohash neighbours are required of.\n     * @returns {{n,ne,e,se,s,sw,w,nw: string}}\n     * @throws  Invalid geohash.\n     */\n    static neighbours(geohash) {\n        return {\n            'n':  Geohash.adjacent(geohash, 'n'),\n            'ne': Geohash.adjacent(Geohash.adjacent(geohash, 'n'), 'e'),\n            'e':  Geohash.adjacent(geohash, 'e'),\n            'se': Geohash.adjacent(Geohash.adjacent(geohash, 's'), 'e'),\n            's':  Geohash.adjacent(geohash, 's'),\n            'sw': Geohash.adjacent(Geohash.adjacent(geohash, 's'), 'w'),\n            'w':  Geohash.adjacent(geohash, 'w'),\n            'nw': Geohash.adjacent(Geohash.adjacent(geohash, 'n'), 'w'),\n        };\n    }\n\n}\n\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\nexport default Geohash;\n","import {Renderer} from \"../../core\";\nimport {getParam, allClasses, jsClassSelector, objClosure} from \"../../utils\";\n\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\nimport {google} from '../../../dependencies/google';\n\nexport class GoogleMapView extends Renderer {\n    constructor(params) {\n        super(params);\n\n        /////////////////////////////////////////////\n        // parameters that can be passed in\n\n        // what should the renderer do if there are no geopoints\n        // can be one of:\n        // render - render the map anyway, with no geopoints on it\n        // hide - hide the map and display the mapHiddenText\n        this.onNoGeoPoints = getParam(params, \"onNoGeoPoints\", \"render\");\n\n        // text to render if the map has no geo points and the behaviour is \"hide\"\n        this.mapHiddenText = getParam(params, \"mapHiddenText\", \"No map data available\");\n\n        // initial zoom level\n        this.initialZoom = getParam(params, \"initialZoom\", 2);\n\n        // initial map type\n        this.mapType = getParam(params, \"mapType\", \"hybrid\");\n\n        this.labelFunction = getParam(params, \"labelFunction\", false);\n\n        // should we be using the google maps clustering features\n        this.cluster = getParam(params, \"cluster\", false);\n\n        this.reQueryOnBoundsChange = getParam(params, \"reQueryOnBoundsChange\", false);\n\n        this.clusterIcons = getParam(params, \"clusterIcons\", {\n            0: \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m1.png\"\n        });\n\n        this.renderCluster = getParam(params, \"renderCluster\", false);\n\n        /////////////////////////////////////////////\n        // internal state\n\n        this.namespace = \"edges-google-map-view\";\n        this.map = false;\n        this.markers = [];\n        this.markerCluster = false;\n        this.currentZoom = false;\n        this.currentBounds = false;\n\n        // for reasons unknown, on draw the map generates 2 idle events in rapid succession.  This allows us\n        // to squash responding to them\n        this.skipIdleEvent = 2;\n    }\n\n    draw() {\n        // now check if there are any geo points, and if there's anything we should do about it\n        if (this.component.locations.length === 0) {\n            if (this.onNoGeoPoints === \"hide\") {\n                this.component.context.html(this.mapHiddenText);\n                return;\n            }\n        }\n        this.skipIdleEvent = 2;\n\n        var centre = new google.maps.LatLng(this.component.centre.lat, this.component.centre.lon);\n\n        if (!this.map) {\n            var canvasClass = allClasses(this.namespace, \"canvas\", this);\n            var canvasSelector = jsClassSelector(this.namespace, \"canvas\", this);\n            this.component.context.html('<div class=\"' + canvasClass + '\"></div>');\n            var element = this.component.jq(canvasSelector)[0];\n\n            var mapTypeId = this.mapType;\n            if (this.mapType === \"hybrid\") {\n                mapTypeId = google.maps.MapTypeId.HYBRID;\n            }\n\n            var mapOptions = {\n                zoom: this.initialZoom,\n                center: centre,\n                mapTypeId: mapTypeId\n            };\n            this.map = new google.maps.Map(element, mapOptions);\n\n            // make sure we set the centre right\n            this.map.setCenter(centre);\n        }\n        \n        // clear any existing markers\n        for (i = 0; i < this.markers.length; i++) {\n            this.markers[i].setMap(null);\n        }\n        this.markers = [];\n\n        for (var i = 0; i < this.component.locations.length; i++) {\n            var loc = this.component.locations[i];\n            var myLatlng = new google.maps.LatLng(loc.lat, loc.lon);\n            let properties = {\n                position: myLatlng,\n            }\n            if (!this.cluster) {\n                // otherwise the mapping clusterer will deal with it\n                properties[\"map\"] = this.map;\n            }\n\n            if (this.cluster) {\n                let icon = this._getClusterIcon(loc.count)\n                if (icon) {\n                    properties[\"icon\"] = icon;\n                }\n            }\n            \n            if (this.labelFunction) {\n                properties[\"label\"] = {text: this.labelFunction(loc)} // e.g. loc.count.toString()\n            }\n\n            var marker = new google.maps.Marker(properties);\n            this.markers.push(marker);\n        }\n\n        if (this.cluster) {\n            let props = {\n                map: this.map,\n                markers: this.markers\n            }\n            if (this.renderCluster) {\n                props[\"renderer\"]  = this.renderCluster;\n            }\n            this.markerCluster = new MarkerClusterer(props);\n        }\n\n        if (this.reQueryOnBoundsChange) {\n            let onBoundsChanged = objClosure(this, \"boundsChanged\")\n            this.map.addListener(\"idle\", onBoundsChanged)\n        }\n    }\n\n    boundsChanged() {\n        // prevent the idle event from triggering a re-query the first time, as it does\n        // this on load\n        if (this.skipIdleEvent > 0) {\n            this.skipIdleEvent--;\n            return;\n        }\n\n        let bounds = this.map.getBounds();\n        let zoom = this.map.getZoom();\n\n        let ne = bounds.getNorthEast();\n        let sw = bounds.getSouthWest();\n\n        let top_left = {\n            lat: ne.lat(),\n            lon: sw.lng()\n        }\n\n        let bottom_right = {\n            lat: sw.lat(),\n            lon: ne.lng()\n        }\n\n        this.component.boundsChanged({\n            top_left: top_left,\n            bottom_right: bottom_right,\n            zoom: zoom\n        })\n    }\n\n    _getClusterIcon(count) {\n        let icon = false;\n        let highest = -1;\n        for (let limit in this.clusterIcons) {\n            if (limit <= count && limit > highest) {\n                icon = this.clusterIcons[limit];\n                highest = limit\n            }\n        }\n        return icon;\n    }\n}\n\n","import { featureCollection, point } from '@turf/helpers';\nimport clustersKmeans from '@turf/clusters-kmeans';\nimport clustersDbscan from '@turf/clusters-dbscan';\nimport SuperCluster from 'supercluster';\nimport equal from 'fast-deep-equal/es6';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Cluster {\r\n    constructor({ markers, position }) {\r\n        this.markers = markers;\r\n        if (position) {\r\n            if (position instanceof google.maps.LatLng) {\r\n                this._position = position;\r\n            }\r\n            else {\r\n                this._position = new google.maps.LatLng(position);\r\n            }\r\n        }\r\n    }\r\n    get bounds() {\r\n        if (this.markers.length === 0 && !this._position) {\r\n            return undefined;\r\n        }\r\n        return this.markers.reduce((bounds, marker) => {\r\n            return bounds.extend(marker.getPosition());\r\n        }, new google.maps.LatLngBounds(this._position, this._position));\r\n    }\r\n    get position() {\r\n        return this._position || this.bounds.getCenter();\r\n    }\r\n    /**\r\n     * Get the count of **visible** markers.\r\n     */\r\n    get count() {\r\n        return this.markers.filter((m) => m.getVisible())\r\n            .length;\r\n    }\r\n    /**\r\n     * Add a marker to the cluster.\r\n     */\r\n    push(marker) {\r\n        this.markers.push(marker);\r\n    }\r\n    /**\r\n     * Cleanup references and remove marker from map.\r\n     */\r\n    delete() {\r\n        if (this.marker) {\r\n            this.marker.setMap(null);\r\n            delete this.marker;\r\n        }\r\n        this.markers.length = 0;\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst filterMarkersToPaddedViewport = (map, mapCanvasProjection, markers, viewportPadding) => {\r\n    const extendedMapBounds = extendBoundsToPaddedViewport(map.getBounds(), mapCanvasProjection, viewportPadding);\r\n    return markers.filter((marker) => extendedMapBounds.contains(marker.getPosition()));\r\n};\r\n/**\r\n * Extends a bounds by a number of pixels in each direction.\r\n */\r\nconst extendBoundsToPaddedViewport = (bounds, projection, pixels) => {\r\n    const { northEast, southWest } = latLngBoundsToPixelBounds(bounds, projection);\r\n    const extendedPixelBounds = extendPixelBounds({ northEast, southWest }, pixels);\r\n    return pixelBoundsToLatLngBounds(extendedPixelBounds, projection);\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst distanceBetweenPoints = (p1, p2) => {\r\n    const R = 6371; // Radius of the Earth in km\r\n    const dLat = ((p2.lat - p1.lat) * Math.PI) / 180;\r\n    const dLon = ((p2.lng - p1.lng) * Math.PI) / 180;\r\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos((p1.lat * Math.PI) / 180) *\r\n            Math.cos((p2.lat * Math.PI) / 180) *\r\n            Math.sin(dLon / 2) *\r\n            Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst latLngBoundsToPixelBounds = (bounds, projection) => {\r\n    return {\r\n        northEast: projection.fromLatLngToDivPixel(bounds.getNorthEast()),\r\n        southWest: projection.fromLatLngToDivPixel(bounds.getSouthWest()),\r\n    };\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst extendPixelBounds = ({ northEast, southWest }, pixels) => {\r\n    northEast.x += pixels;\r\n    northEast.y -= pixels;\r\n    southWest.x -= pixels;\r\n    southWest.y += pixels;\r\n    return { northEast, southWest };\r\n};\r\n/**\r\n * @hidden\r\n */\r\nconst pixelBoundsToLatLngBounds = ({ northEast, southWest }, projection) => {\r\n    const bounds = new google.maps.LatLngBounds();\r\n    bounds.extend(projection.fromDivPixelToLatLng(northEast));\r\n    bounds.extend(projection.fromDivPixelToLatLng(southWest));\r\n    return bounds;\r\n};\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nclass AbstractAlgorithm {\r\n    constructor({ maxZoom = 16 }) {\r\n        this.maxZoom = maxZoom;\r\n    }\r\n    /**\r\n     * Helper function to bypass clustering based upon some map state such as\r\n     * zoom, number of markers, etc.\r\n     *\r\n     * ```typescript\r\n     *  cluster({markers, map}: AlgorithmInput): Cluster[] {\r\n     *    if (shouldBypassClustering(map)) {\r\n     *      return this.noop({markers, map})\r\n     *    }\r\n     * }\r\n     * ```\r\n     */\r\n    noop({ markers }) {\r\n        return noop(markers);\r\n    }\r\n}\r\n/**\r\n * Abstract viewport algorithm proves a class to filter markers by a padded\r\n * viewport. This is a common optimization.\r\n *\r\n * @hidden\r\n */\r\nclass AbstractViewportAlgorithm extends AbstractAlgorithm {\r\n    constructor(_a) {\r\n        var { viewportPadding = 60 } = _a, options = __rest(_a, [\"viewportPadding\"]);\r\n        super(options);\r\n        this.viewportPadding = 60;\r\n        this.viewportPadding = viewportPadding;\r\n    }\r\n    calculate({ markers, map, mapCanvasProjection, }) {\r\n        if (map.getZoom() >= this.maxZoom) {\r\n            return {\r\n                clusters: this.noop({\r\n                    markers,\r\n                    map,\r\n                    mapCanvasProjection,\r\n                }),\r\n                changed: false,\r\n            };\r\n        }\r\n        return {\r\n            clusters: this.cluster({\r\n                markers: filterMarkersToPaddedViewport(map, mapCanvasProjection, markers, this.viewportPadding),\r\n                map,\r\n                mapCanvasProjection,\r\n            }),\r\n        };\r\n    }\r\n}\r\n/**\r\n * @hidden\r\n */\r\nconst noop = (markers) => {\r\n    const clusters = markers.map((marker) => new Cluster({\r\n        position: marker.getPosition(),\r\n        markers: [marker],\r\n    }));\r\n    return clusters;\r\n};\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default Grid algorithm historically used in Google Maps marker\r\n * clustering.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n */\r\nclass GridAlgorithm extends AbstractViewportAlgorithm {\r\n    constructor(_a) {\r\n        var { maxDistance = 40000, gridSize = 40 } = _a, options = __rest(_a, [\"maxDistance\", \"gridSize\"]);\r\n        super(options);\r\n        this.clusters = [];\r\n        this.maxDistance = maxDistance;\r\n        this.gridSize = gridSize;\r\n    }\r\n    cluster({ markers, map, mapCanvasProjection, }) {\r\n        this.clusters = [];\r\n        markers.forEach((marker) => {\r\n            this.addToClosestCluster(marker, map, mapCanvasProjection);\r\n        });\r\n        return this.clusters;\r\n    }\r\n    addToClosestCluster(marker, map, projection) {\r\n        let maxDistance = this.maxDistance; // Some large number\r\n        let cluster = null;\r\n        for (let i = 0; i < this.clusters.length; i++) {\r\n            const candidate = this.clusters[i];\r\n            const distance = distanceBetweenPoints(candidate.bounds.getCenter().toJSON(), marker.getPosition().toJSON());\r\n            if (distance < maxDistance) {\r\n                maxDistance = distance;\r\n                cluster = candidate;\r\n            }\r\n        }\r\n        if (cluster &&\r\n            extendBoundsToPaddedViewport(cluster.bounds, projection, this.gridSize).contains(marker.getPosition())) {\r\n            cluster.push(marker);\r\n        }\r\n        else {\r\n            const cluster = new Cluster({ markers: [marker] });\r\n            this.clusters.push(cluster);\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Noop algorithm does not generate any clusters or filter markers by the an extended viewport.\r\n */\r\nclass NoopAlgorithm extends AbstractAlgorithm {\r\n    constructor(_a) {\r\n        var options = __rest(_a, []);\r\n        super(options);\r\n    }\r\n    calculate({ markers, map, mapCanvasProjection, }) {\r\n        return {\r\n            clusters: this.cluster({ markers, map, mapCanvasProjection }),\r\n            changed: false,\r\n        };\r\n    }\r\n    cluster(input) {\r\n        return this.noop(input);\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Experimental algorithm using Kmeans.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n *\r\n * @see https://www.npmjs.com/package/@turf/clusters-kmeans\r\n */\r\nclass KmeansAlgorithm extends AbstractViewportAlgorithm {\r\n    constructor(_a) {\r\n        var { numberOfClusters } = _a, options = __rest(_a, [\"numberOfClusters\"]);\r\n        super(options);\r\n        this.numberOfClusters = numberOfClusters;\r\n    }\r\n    cluster({ markers, map }) {\r\n        const clusters = [];\r\n        if (markers.length === 0) {\r\n            return clusters;\r\n        }\r\n        const points = featureCollection(markers.map((marker) => {\r\n            return point([marker.getPosition().lng(), marker.getPosition().lat()]);\r\n        }));\r\n        let numberOfClusters;\r\n        if (this.numberOfClusters instanceof Function) {\r\n            numberOfClusters = this.numberOfClusters(markers.length, map.getZoom());\r\n        }\r\n        else {\r\n            numberOfClusters = this.numberOfClusters;\r\n        }\r\n        clustersKmeans(points, { numberOfClusters }).features.forEach((point, i) => {\r\n            if (!clusters[point.properties.cluster]) {\r\n                clusters[point.properties.cluster] = new Cluster({\r\n                    position: {\r\n                        lng: point.properties.centroid[0],\r\n                        lat: point.properties.centroid[1],\r\n                    },\r\n                    markers: [],\r\n                });\r\n            }\r\n            clusters[point.properties.cluster].push(markers[i]);\r\n        });\r\n        return clusters;\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_INTERNAL_DBSCAN_OPTION = {\r\n    units: \"kilometers\",\r\n    mutate: false,\r\n    minPoints: 1,\r\n};\r\n/**\r\n *\r\n * **This algorithm is not yet ready for use!**\r\n *\r\n * Experimental algorithm using DBScan.\r\n *\r\n * The Grid algorithm does not implement caching and markers may flash as the\r\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\r\n *\r\n * @see https://www.npmjs.com/package/@turf/clusters-dbscan\r\n */\r\nclass DBScanAlgorithm extends AbstractViewportAlgorithm {\r\n    constructor(_a) {\r\n        var { maxDistance = 200, minPoints = DEFAULT_INTERNAL_DBSCAN_OPTION.minPoints } = _a, options = __rest(_a, [\"maxDistance\", \"minPoints\"]);\r\n        super(options);\r\n        this.maxDistance = maxDistance;\r\n        this.options = Object.assign(Object.assign({}, DEFAULT_INTERNAL_DBSCAN_OPTION), { minPoints });\r\n    }\r\n    cluster({ markers, mapCanvasProjection, }) {\r\n        const points = featureCollection(markers.map((marker) => {\r\n            const projectedPoint = mapCanvasProjection.fromLatLngToContainerPixel(marker.getPosition());\r\n            return point([projectedPoint.x, projectedPoint.y]);\r\n        }));\r\n        const grouped = [];\r\n        clustersDbscan(points, this.maxDistance, this.options).features.forEach((point, i) => {\r\n            if (!grouped[point.properties.cluster]) {\r\n                grouped[point.properties.cluster] = [];\r\n            }\r\n            grouped[point.properties.cluster].push(markers[i]);\r\n        });\r\n        return grouped.map((markers) => new Cluster({ markers }));\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A very fast JavaScript algorithm for geospatial point clustering using KD trees.\r\n *\r\n * @see https://www.npmjs.com/package/supercluster for more information on options.\r\n */\r\nclass SuperClusterAlgorithm extends AbstractAlgorithm {\r\n    constructor(_a) {\r\n        var { maxZoom, radius = 60 } = _a, options = __rest(_a, [\"maxZoom\", \"radius\"]);\r\n        super({ maxZoom });\r\n        this.superCluster = new SuperCluster(Object.assign({ maxZoom: this.maxZoom, radius }, options));\r\n        this.state = { zoom: null };\r\n    }\r\n    calculate(input) {\r\n        let changed = false;\r\n        if (!equal(input.markers, this.markers)) {\r\n            changed = true;\r\n            // TODO use proxy to avoid copy?\r\n            this.markers = [...input.markers];\r\n            const points = this.markers.map((marker) => {\r\n                return {\r\n                    type: \"Feature\",\r\n                    geometry: {\r\n                        type: \"Point\",\r\n                        coordinates: [\r\n                            marker.getPosition().lng(),\r\n                            marker.getPosition().lat(),\r\n                        ],\r\n                    },\r\n                    properties: { marker },\r\n                };\r\n            });\r\n            this.superCluster.load(points);\r\n        }\r\n        const state = { zoom: input.map.getZoom() };\r\n        if (!changed) {\r\n            if (this.state.zoom > this.maxZoom && state.zoom > this.maxZoom) ;\r\n            else {\r\n                changed = changed || !equal(this.state, state);\r\n            }\r\n        }\r\n        this.state = state;\r\n        if (changed) {\r\n            this.clusters = this.cluster(input);\r\n        }\r\n        return { clusters: this.clusters, changed };\r\n    }\r\n    cluster({ map }) {\r\n        return this.superCluster\r\n            .getClusters([-180, -90, 180, 90], map.getZoom())\r\n            .map(this.transformCluster.bind(this));\r\n    }\r\n    transformCluster({ geometry: { coordinates: [lng, lat], }, properties, }) {\r\n        if (properties.cluster) {\r\n            return new Cluster({\r\n                markers: this.superCluster\r\n                    .getLeaves(properties.cluster_id, Infinity)\r\n                    .map((leaf) => leaf.properties.marker),\r\n                position: new google.maps.LatLng({ lat, lng }),\r\n            });\r\n        }\r\n        else {\r\n            const marker = properties.marker;\r\n            return new Cluster({\r\n                markers: [marker],\r\n                position: marker.getPosition(),\r\n            });\r\n        }\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides statistics on all clusters in the current render cycle for use in {@link Renderer.render}.\r\n */\r\nclass ClusterStats {\r\n    constructor(markers, clusters) {\r\n        this.markers = { sum: markers.length };\r\n        const clusterMarkerCounts = clusters.map((a) => a.count);\r\n        const clusterMarkerSum = clusterMarkerCounts.reduce((a, b) => a + b, 0);\r\n        this.clusters = {\r\n            count: clusters.length,\r\n            markers: {\r\n                mean: clusterMarkerSum / clusters.length,\r\n                sum: clusterMarkerSum,\r\n                min: Math.min(...clusterMarkerCounts),\r\n                max: Math.max(...clusterMarkerCounts),\r\n            },\r\n        };\r\n    }\r\n}\r\nclass DefaultRenderer {\r\n    /**\r\n     * The default render function for the library used by {@link MarkerClusterer}.\r\n     *\r\n     * Currently set to use the following:\r\n     *\r\n     * ```typescript\r\n     * // change color if this cluster has more markers than the mean cluster\r\n     * const color =\r\n     *   count > Math.max(10, stats.clusters.markers.mean)\r\n     *     ? \"#ff0000\"\r\n     *     : \"#0000ff\";\r\n     *\r\n     * // create svg url with fill color\r\n     * const svg = window.btoa(`\r\n     * <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\r\n     *   <circle cx=\"120\" cy=\"120\" opacity=\".1\" r=\"130\" />\r\n     * </svg>`);\r\n     *\r\n     * // create marker using svg icon\r\n     * return new google.maps.Marker({\r\n     *   position,\r\n     *   icon: {\r\n     *     url: `data:image/svg+xml;base64,${svg}`,\r\n     *     scaledSize: new google.maps.Size(45, 45),\r\n     *   },\r\n     *   label: {\r\n     *     text: String(count),\r\n     *     color: \"rgba(255,255,255,0.9)\",\r\n     *     fontSize: \"12px\",\r\n     *   },\r\n     *   // adjust zIndex to be above other markers\r\n     *   zIndex: 1000 + count,\r\n     * });\r\n     * ```\r\n     */\r\n    render({ count, position }, stats) {\r\n        // change color if this cluster has more markers than the mean cluster\r\n        const color = count > Math.max(10, stats.clusters.markers.mean) ? \"#ff0000\" : \"#0000ff\";\r\n        // create svg url with fill color\r\n        const svg = window.btoa(`\n  <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n    <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n  </svg>`);\r\n        // create marker using svg icon\r\n        return new google.maps.Marker({\r\n            position,\r\n            icon: {\r\n                url: `data:image/svg+xml;base64,${svg}`,\r\n                scaledSize: new google.maps.Size(45, 45),\r\n            },\r\n            label: {\r\n                text: String(count),\r\n                color: \"rgba(255,255,255,0.9)\",\r\n                fontSize: \"12px\",\r\n            },\r\n            // adjust zIndex to be above other markers\r\n            zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,\r\n        });\r\n    }\r\n}\n\n/**\r\n * Copyright 2019 Google LLC. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Extends an object's prototype by another's.\r\n *\r\n * @param type1 The Type to be extended.\r\n * @param type2 The Type to extend with.\r\n * @ignore\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nfunction extend(type1, type2) {\r\n    /* istanbul ignore next */\r\n    // eslint-disable-next-line prefer-const\r\n    for (let property in type2.prototype) {\r\n        type1.prototype[property] = type2.prototype[property];\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\nclass OverlayViewSafe {\r\n    constructor() {\r\n        // MarkerClusterer implements google.maps.OverlayView interface. We use the\r\n        // extend function to extend MarkerClusterer with google.maps.OverlayView\r\n        // because it might not always be available when the code is defined so we\r\n        // look for it at the last possible moment. If it doesn't exist now then\r\n        // there is no point going ahead :)\r\n        extend(OverlayViewSafe, google.maps.OverlayView);\r\n    }\r\n}\n\n/**\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MarkerClustererEvents;\r\n(function (MarkerClustererEvents) {\r\n    MarkerClustererEvents[\"CLUSTERING_BEGIN\"] = \"clusteringbegin\";\r\n    MarkerClustererEvents[\"CLUSTERING_END\"] = \"clusteringend\";\r\n    MarkerClustererEvents[\"CLUSTER_CLICK\"] = \"click\";\r\n})(MarkerClustererEvents || (MarkerClustererEvents = {}));\r\nconst defaultOnClusterClickHandler = (_, cluster, map) => {\r\n    map.fitBounds(cluster.bounds);\r\n};\r\n/**\r\n * MarkerClusterer creates and manages per-zoom-level clusters for large amounts\r\n * of markers. See {@link MarkerClustererOptions} for more details.\r\n *\r\n * <iframe src=\"https://googlemaps.github.io/js-three/public/anchor/index.html\"></iframe>\r\n */\r\nclass MarkerClusterer extends OverlayViewSafe {\r\n    constructor({ map, markers = [], algorithm = new SuperClusterAlgorithm({}), renderer = new DefaultRenderer(), onClusterClick = defaultOnClusterClickHandler, }) {\r\n        super();\r\n        this.markers = [...markers];\r\n        this.clusters = [];\r\n        this.algorithm = algorithm;\r\n        this.renderer = renderer;\r\n        this.onClusterClick = onClusterClick;\r\n        if (map) {\r\n            this.setMap(map);\r\n        }\r\n    }\r\n    addMarker(marker, noDraw) {\r\n        if (this.markers.includes(marker)) {\r\n            return;\r\n        }\r\n        this.markers.push(marker);\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n    }\r\n    addMarkers(markers, noDraw) {\r\n        markers.forEach((marker) => {\r\n            this.addMarker(marker, true);\r\n        });\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n    }\r\n    removeMarker(marker, noDraw) {\r\n        const index = this.markers.indexOf(marker);\r\n        if (index === -1) {\r\n            // Marker is not in our list of markers, so do nothing:\r\n            return false;\r\n        }\r\n        marker.setMap(null);\r\n        this.markers.splice(index, 1); // Remove the marker from the list of managed markers\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n        return true;\r\n    }\r\n    removeMarkers(markers, noDraw) {\r\n        let removed = false;\r\n        markers.forEach((marker) => {\r\n            removed = this.removeMarker(marker, true) || removed;\r\n        });\r\n        if (removed && !noDraw) {\r\n            this.render();\r\n        }\r\n        return removed;\r\n    }\r\n    clearMarkers(noDraw) {\r\n        this.markers.length = 0;\r\n        if (!noDraw) {\r\n            this.render();\r\n        }\r\n    }\r\n    /**\r\n     * Recalculates and draws all the marker clusters.\r\n     */\r\n    render() {\r\n        const map = this.getMap();\r\n        if (map instanceof google.maps.Map && this.getProjection()) {\r\n            google.maps.event.trigger(this, MarkerClustererEvents.CLUSTERING_BEGIN, this);\r\n            const { clusters, changed } = this.algorithm.calculate({\r\n                markers: this.markers,\r\n                map,\r\n                mapCanvasProjection: this.getProjection(),\r\n            });\r\n            // allow algorithms to return flag on whether the clusters/markers have changed\r\n            if (changed || changed == undefined) {\r\n                // reset visibility of markers and clusters\r\n                this.reset();\r\n                // store new clusters\r\n                this.clusters = clusters;\r\n                this.renderClusters();\r\n            }\r\n            google.maps.event.trigger(this, MarkerClustererEvents.CLUSTERING_END, this);\r\n        }\r\n    }\r\n    onAdd() {\r\n        this.idleListener = this.getMap().addListener(\"idle\", this.render.bind(this));\r\n        this.render();\r\n    }\r\n    onRemove() {\r\n        google.maps.event.removeListener(this.idleListener);\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.markers.forEach((marker) => marker.setMap(null));\r\n        this.clusters.forEach((cluster) => cluster.delete());\r\n        this.clusters = [];\r\n    }\r\n    renderClusters() {\r\n        // generate stats to pass to renderers\r\n        const stats = new ClusterStats(this.markers, this.clusters);\r\n        const map = this.getMap();\r\n        this.clusters.forEach((cluster) => {\r\n            if (cluster.markers.length === 1) {\r\n                cluster.marker = cluster.markers[0];\r\n            }\r\n            else {\r\n                cluster.marker = this.renderer.render(cluster, stats);\r\n                if (this.onClusterClick) {\r\n                    cluster.marker.addListener(\"click\", \r\n                    /* istanbul ignore next */\r\n                    (event) => {\r\n                        google.maps.event.trigger(this, MarkerClustererEvents.CLUSTER_CLICK, cluster);\r\n                        this.onClusterClick(event, cluster, map);\r\n                    });\r\n                }\r\n            }\r\n            cluster.marker.setMap(map);\r\n        });\r\n    }\r\n}\n\nexport { AbstractAlgorithm, AbstractViewportAlgorithm, Cluster, ClusterStats, DBScanAlgorithm, DefaultRenderer, GridAlgorithm, KmeansAlgorithm, MarkerClusterer, MarkerClustererEvents, NoopAlgorithm, SuperClusterAlgorithm, defaultOnClusterClickHandler, distanceBetweenPoints, extendBoundsToPaddedViewport, extendPixelBounds, filterMarkersToPaddedViewport, noop, pixelBoundsToLatLngBounds };\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ClusterOptions {\n  position?: google.maps.LatLng | google.maps.LatLngLiteral;\n  markers?: google.maps.Marker[];\n}\n\nexport class Cluster {\n  public marker: google.maps.Marker;\n  public readonly markers?: google.maps.Marker[];\n  protected _position: google.maps.LatLng;\n\n  constructor({ markers, position }: ClusterOptions) {\n    this.markers = markers;\n\n    if (position) {\n      if (position instanceof google.maps.LatLng) {\n        this._position = position;\n      } else {\n        this._position = new google.maps.LatLng(position);\n      }\n    }\n  }\n\n  public get bounds(): google.maps.LatLngBounds | undefined {\n    if (this.markers.length === 0 && !this._position) {\n      return undefined;\n    }\n\n    return this.markers.reduce((bounds, marker) => {\n      return bounds.extend(marker.getPosition());\n    }, new google.maps.LatLngBounds(this._position, this._position));\n  }\n\n  public get position(): google.maps.LatLng {\n    return this._position || this.bounds.getCenter();\n  }\n\n  /**\n   * Get the count of **visible** markers.\n   */\n  public get count(): number {\n    return this.markers.filter((m: google.maps.Marker) => m.getVisible())\n      .length;\n  }\n\n  /**\n   * Add a marker to the cluster.\n   */\n  public push(marker: google.maps.Marker): void {\n    this.markers.push(marker);\n  }\n\n  /**\n   * Cleanup references and remove marker from map.\n   */\n  public delete(): void {\n    if (this.marker) {\n      this.marker.setMap(null);\n      delete this.marker;\n    }\n    this.markers.length = 0;\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const filterMarkersToPaddedViewport = (\n  map: google.maps.Map,\n  mapCanvasProjection: google.maps.MapCanvasProjection,\n  markers: google.maps.Marker[],\n  viewportPadding: number\n): google.maps.Marker[] => {\n  const extendedMapBounds = extendBoundsToPaddedViewport(\n    map.getBounds(),\n    mapCanvasProjection,\n    viewportPadding\n  );\n  return markers.filter((marker) =>\n    extendedMapBounds.contains(marker.getPosition())\n  );\n};\n\n/**\n * Extends a bounds by a number of pixels in each direction.\n */\nexport const extendBoundsToPaddedViewport = (\n  bounds: google.maps.LatLngBounds,\n  projection: google.maps.MapCanvasProjection,\n  pixels: number\n): google.maps.LatLngBounds => {\n  const { northEast, southWest } = latLngBoundsToPixelBounds(\n    bounds,\n    projection\n  );\n  const extendedPixelBounds = extendPixelBounds(\n    { northEast, southWest },\n    pixels\n  );\n  return pixelBoundsToLatLngBounds(extendedPixelBounds, projection);\n};\n\n/**\n * @hidden\n */\nexport const distanceBetweenPoints = (\n  p1: google.maps.LatLngLiteral,\n  p2: google.maps.LatLngLiteral\n): number => {\n  const R = 6371; // Radius of the Earth in km\n  const dLat = ((p2.lat - p1.lat) * Math.PI) / 180;\n  const dLon = ((p2.lng - p1.lng) * Math.PI) / 180;\n  const a =\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos((p1.lat * Math.PI) / 180) *\n      Math.cos((p2.lat * Math.PI) / 180) *\n      Math.sin(dLon / 2) *\n      Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\n\ntype PixelBounds = {\n  northEast: google.maps.Point;\n  southWest: google.maps.Point;\n};\n\n/**\n * @hidden\n */\nconst latLngBoundsToPixelBounds = (\n  bounds: google.maps.LatLngBounds,\n  projection: google.maps.MapCanvasProjection\n): PixelBounds => {\n  return {\n    northEast: projection.fromLatLngToDivPixel(bounds.getNorthEast()),\n    southWest: projection.fromLatLngToDivPixel(bounds.getSouthWest()),\n  };\n};\n\n/**\n * @hidden\n */\nexport const extendPixelBounds = (\n  { northEast, southWest }: PixelBounds,\n  pixels: number\n): PixelBounds => {\n  northEast.x += pixels;\n  northEast.y -= pixels;\n\n  southWest.x -= pixels;\n  southWest.y += pixels;\n\n  return { northEast, southWest };\n};\n\n/**\n * @hidden\n */\nexport const pixelBoundsToLatLngBounds = (\n  { northEast, southWest }: PixelBounds,\n  projection: google.maps.MapCanvasProjection\n): google.maps.LatLngBounds => {\n  const bounds = new google.maps.LatLngBounds();\n  bounds.extend(projection.fromDivPixelToLatLng(northEast));\n  bounds.extend(projection.fromDivPixelToLatLng(southWest));\n  return bounds;\n};\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cluster } from \"../cluster\";\nimport { filterMarkersToPaddedViewport } from \"./utils\";\n\nexport interface AlgorithmInput {\n  /**\n   * The map containing the markers and clusters.\n   */\n  map: google.maps.Map;\n  /**\n   * An array of markers to be clustered.\n   *\n   * There are some specific edge cases to be aware of including the following:\n   * * Markers that are not visible.\n   */\n  markers: google.maps.Marker[];\n  /**\n   * The `mapCanvasProjection` enables easy conversion from lat/lng to pixel.\n   *\n   * @see [MapCanvasProjection](https://developers.google.com/maps/documentation/javascript/reference/overlay-view#MapCanvasProjection)\n   */\n  mapCanvasProjection: google.maps.MapCanvasProjection;\n}\n\nexport interface AlgorithmOutput {\n  /**\n   * The clusters returned based upon the {@link AlgorithmInput}.\n   */\n  clusters: Cluster[];\n  /**\n   * A boolean flag indicating that the clusters have not changed.\n   */\n  changed?: boolean;\n}\n\nexport interface Algorithm {\n  /**\n   * Calculates an array of {@link Cluster}.\n   */\n  calculate: ({ markers, map }: AlgorithmInput) => AlgorithmOutput;\n}\n\nexport interface AlgorithmOptions {\n  maxZoom?: number;\n}\n/**\n * @hidden\n */\nexport abstract class AbstractAlgorithm implements Algorithm {\n  protected maxZoom: number;\n\n  constructor({ maxZoom = 16 }: AlgorithmOptions) {\n    this.maxZoom = maxZoom;\n  }\n  /**\n   * Helper function to bypass clustering based upon some map state such as\n   * zoom, number of markers, etc.\n   *\n   * ```typescript\n   *  cluster({markers, map}: AlgorithmInput): Cluster[] {\n   *    if (shouldBypassClustering(map)) {\n   *      return this.noop({markers, map})\n   *    }\n   * }\n   * ```\n   */\n  protected noop({ markers }: AlgorithmInput): Cluster[] {\n    return noop(markers);\n  }\n  /**\n   * Calculates an array of {@link Cluster}. Calculate is separate from\n   * {@link cluster} as it does preprocessing on the markers such as filtering\n   * based upon the viewport as in {@link AbstractViewportAlgorithm}. Caching\n   * and other optimizations can also be done here.\n   */\n  public abstract calculate({ markers, map }: AlgorithmInput): AlgorithmOutput;\n\n  /**\n   * Clusters the markers and called from {@link calculate}.\n   */\n  protected abstract cluster({ markers, map }: AlgorithmInput): Cluster[];\n}\n\n/**\n * @hidden\n */\nexport interface ViewportAlgorithmOptions extends AlgorithmOptions {\n  /**\n   * The number of pixels to extend beyond the viewport bounds when filtering\n   * markers prior to clustering.\n   */\n  viewportPadding?: number;\n}\n\n/**\n * Abstract viewport algorithm proves a class to filter markers by a padded\n * viewport. This is a common optimization.\n *\n * @hidden\n */\nexport abstract class AbstractViewportAlgorithm extends AbstractAlgorithm {\n  protected viewportPadding = 60;\n\n  constructor({ viewportPadding = 60, ...options }: ViewportAlgorithmOptions) {\n    super(options);\n    this.viewportPadding = viewportPadding;\n  }\n  public calculate({\n    markers,\n    map,\n    mapCanvasProjection,\n  }: AlgorithmInput): AlgorithmOutput {\n    if (map.getZoom() >= this.maxZoom) {\n      return {\n        clusters: this.noop({\n          markers,\n          map,\n          mapCanvasProjection,\n        }),\n        changed: false,\n      };\n    }\n\n    return {\n      clusters: this.cluster({\n        markers: filterMarkersToPaddedViewport(\n          map,\n          mapCanvasProjection,\n          markers,\n          this.viewportPadding\n        ),\n        map,\n        mapCanvasProjection,\n      }),\n    };\n  }\n  protected abstract cluster({ markers, map }: AlgorithmInput): Cluster[];\n}\n\n/**\n * @hidden\n */\nexport const noop = (markers: google.maps.Marker[]): Cluster[] => {\n  const clusters = markers.map(\n    (marker) =>\n      new Cluster({\n        position: marker.getPosition(),\n        markers: [marker],\n      })\n  );\n  return clusters;\n};\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbstractViewportAlgorithm,\n  AlgorithmInput,\n  ViewportAlgorithmOptions,\n} from \"./core\";\nimport { distanceBetweenPoints, extendBoundsToPaddedViewport } from \"./utils\";\n\nimport { Cluster } from \"../cluster\";\n\nexport interface GridOptions extends ViewportAlgorithmOptions {\n  gridSize?: number;\n  /**\n   * Max distance between cluster center and point in meters.\n   * @default 10000\n   */\n  maxDistance?: number;\n}\n\n/**\n * The default Grid algorithm historically used in Google Maps marker\n * clustering.\n *\n * The Grid algorithm does not implement caching and markers may flash as the\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\n */\nexport class GridAlgorithm extends AbstractViewportAlgorithm {\n  protected gridSize: number;\n  protected maxDistance: number;\n  protected clusters: Cluster[] = [];\n\n  constructor({ maxDistance = 40000, gridSize = 40, ...options }: GridOptions) {\n    super(options);\n\n    this.maxDistance = maxDistance;\n    this.gridSize = gridSize;\n  }\n\n  protected cluster({\n    markers,\n    map,\n    mapCanvasProjection,\n  }: AlgorithmInput): Cluster[] {\n    this.clusters = [];\n    markers.forEach((marker) => {\n      this.addToClosestCluster(marker, map, mapCanvasProjection);\n    });\n\n    return this.clusters;\n  }\n\n  protected addToClosestCluster(\n    marker: google.maps.Marker,\n    map: google.maps.Map,\n    projection: google.maps.MapCanvasProjection\n  ): void {\n    let maxDistance = this.maxDistance; // Some large number\n    let cluster: Cluster = null;\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      const candidate = this.clusters[i];\n      const distance = distanceBetweenPoints(\n        candidate.bounds.getCenter().toJSON(),\n        marker.getPosition().toJSON()\n      );\n\n      if (distance < maxDistance) {\n        maxDistance = distance;\n        cluster = candidate;\n      }\n    }\n\n    if (\n      cluster &&\n      extendBoundsToPaddedViewport(\n        cluster.bounds,\n        projection,\n        this.gridSize\n      ).contains(marker.getPosition())\n    ) {\n      cluster.push(marker);\n    } else {\n      const cluster = new Cluster({ markers: [marker] });\n      this.clusters.push(cluster);\n    }\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbstractAlgorithm,\n  AlgorithmInput,\n  AlgorithmOptions,\n  AlgorithmOutput,\n} from \"./core\";\n\nimport { Cluster } from \"../cluster\";\n\n/**\n * Noop algorithm does not generate any clusters or filter markers by the an extended viewport.\n */\nexport class NoopAlgorithm extends AbstractAlgorithm {\n  constructor({ ...options }: AlgorithmOptions) {\n    super(options);\n  }\n  public calculate({\n    markers,\n    map,\n    mapCanvasProjection,\n  }: AlgorithmInput): AlgorithmOutput {\n    return {\n      clusters: this.cluster({ markers, map, mapCanvasProjection }),\n      changed: false,\n    };\n  }\n\n  protected cluster(input: AlgorithmInput): Cluster[] {\n    return this.noop(input);\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbstractViewportAlgorithm,\n  AlgorithmInput,\n  ViewportAlgorithmOptions,\n} from \"./core\";\nimport { featureCollection, point } from \"@turf/helpers\";\n\nimport { Cluster } from \"../cluster\";\nimport clustersKmeans from \"@turf/clusters-kmeans\";\n\nexport interface KmeansAlgorithmOptions extends ViewportAlgorithmOptions {\n  numberOfClusters: number | ((count: number, zoom: number) => number);\n}\n\n/**\n * Experimental algorithm using Kmeans.\n *\n * The Grid algorithm does not implement caching and markers may flash as the\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\n *\n * @see https://www.npmjs.com/package/@turf/clusters-kmeans\n */\nexport class KmeansAlgorithm extends AbstractViewportAlgorithm {\n  protected numberOfClusters:\n    | number\n    | ((count: number, zoom: number) => number);\n\n  constructor({ numberOfClusters, ...options }: KmeansAlgorithmOptions) {\n    super(options);\n    this.numberOfClusters = numberOfClusters;\n  }\n\n  protected cluster({ markers, map }: AlgorithmInput): Cluster[] {\n    const clusters: Cluster[] = [];\n\n    if (markers.length === 0) {\n      return clusters;\n    }\n    const points = featureCollection(\n      markers.map((marker) => {\n        return point([marker.getPosition().lng(), marker.getPosition().lat()]);\n      })\n    );\n\n    let numberOfClusters: number;\n\n    if (this.numberOfClusters instanceof Function) {\n      numberOfClusters = this.numberOfClusters(markers.length, map.getZoom());\n    } else {\n      numberOfClusters = this.numberOfClusters;\n    }\n    clustersKmeans(points, { numberOfClusters }).features.forEach(\n      (point, i) => {\n        if (!clusters[point.properties.cluster]) {\n          clusters[point.properties.cluster] = new Cluster({\n            position: {\n              lng: point.properties.centroid[0],\n              lat: point.properties.centroid[1],\n            },\n            markers: [],\n          });\n        }\n\n        clusters[point.properties.cluster].push(markers[i]);\n      }\n    );\n\n    return clusters;\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbstractViewportAlgorithm,\n  AlgorithmInput,\n  ViewportAlgorithmOptions,\n} from \"./core\";\nimport { Units, featureCollection, point } from \"@turf/helpers\";\n\nimport { Cluster } from \"../cluster\";\nimport clustersDbscan from \"@turf/clusters-dbscan\";\n\nexport interface DBScanOptions {\n  units?: Units;\n  minPoints?: number;\n  mutate?: boolean;\n}\n\nexport interface DBScanAlgorithmOptions extends ViewportAlgorithmOptions {\n  maxDistance?: number;\n  minPoints?: number;\n}\n\nconst DEFAULT_INTERNAL_DBSCAN_OPTION: DBScanOptions = {\n  units: \"kilometers\",\n  mutate: false,\n  minPoints: 1,\n};\n\n/**\n *\n * **This algorithm is not yet ready for use!**\n *\n * Experimental algorithm using DBScan.\n *\n * The Grid algorithm does not implement caching and markers may flash as the\n * viewport changes. Instead use {@link SuperClusterAlgorithm}.\n *\n * @see https://www.npmjs.com/package/@turf/clusters-dbscan\n */\nexport class DBScanAlgorithm extends AbstractViewportAlgorithm {\n  protected maxDistance: number;\n  protected options: DBScanOptions;\n  constructor({\n    maxDistance = 200,\n    minPoints = DEFAULT_INTERNAL_DBSCAN_OPTION.minPoints,\n    ...options\n  }: DBScanAlgorithmOptions) {\n    super(options);\n    this.maxDistance = maxDistance;\n    this.options = {\n      ...DEFAULT_INTERNAL_DBSCAN_OPTION,\n      minPoints,\n    };\n  }\n\n  protected cluster({\n    markers,\n    mapCanvasProjection,\n  }: AlgorithmInput): Cluster[] {\n    const points = featureCollection(\n      markers.map((marker) => {\n        const projectedPoint = mapCanvasProjection.fromLatLngToContainerPixel(\n          marker.getPosition()\n        );\n        return point([projectedPoint.x, projectedPoint.y]);\n      })\n    );\n\n    const grouped: google.maps.Marker[][] = [];\n\n    clustersDbscan(points, this.maxDistance, this.options).features.forEach(\n      (point, i) => {\n        if (!grouped[point.properties.cluster]) {\n          grouped[point.properties.cluster] = [];\n        }\n\n        grouped[point.properties.cluster].push(markers[i]);\n      }\n    );\n\n    return grouped.map((markers) => new Cluster({ markers }));\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AbstractAlgorithm, AlgorithmInput, AlgorithmOutput } from \"./core\";\nimport SuperCluster, { ClusterFeature } from \"supercluster\";\n\nimport { Cluster } from \"../cluster\";\nimport equal from \"fast-deep-equal/es6\";\n\nexport type SuperClusterOptions = SuperCluster.Options<\n  { [name: string]: any },\n  { [name: string]: any }\n>;\n\n/**\n * A very fast JavaScript algorithm for geospatial point clustering using KD trees.\n *\n * @see https://www.npmjs.com/package/supercluster for more information on options.\n */\nexport class SuperClusterAlgorithm extends AbstractAlgorithm {\n  protected superCluster: SuperCluster;\n  protected markers: google.maps.Marker[];\n  protected clusters: Cluster[];\n  protected state: { zoom: number };\n\n  constructor({ maxZoom, radius = 60, ...options }: SuperClusterOptions) {\n    super({ maxZoom });\n\n    this.superCluster = new SuperCluster({\n      maxZoom: this.maxZoom,\n      radius,\n      ...options,\n    });\n\n    this.state = { zoom: null };\n  }\n  public calculate(input: AlgorithmInput): AlgorithmOutput {\n    let changed = false;\n\n    if (!equal(input.markers, this.markers)) {\n      changed = true;\n      // TODO use proxy to avoid copy?\n      this.markers = [...input.markers];\n\n      const points = this.markers.map((marker) => {\n        return {\n          type: \"Feature\" as const,\n          geometry: {\n            type: \"Point\" as const,\n            coordinates: [\n              marker.getPosition().lng(),\n              marker.getPosition().lat(),\n            ],\n          },\n          properties: { marker },\n        };\n      });\n\n      this.superCluster.load(points);\n    }\n\n    const state = { zoom: input.map.getZoom() };\n\n    if (!changed) {\n      if (this.state.zoom > this.maxZoom && state.zoom > this.maxZoom) {\n        // still beyond maxZoom, no change\n      } else {\n        changed = changed || !equal(this.state, state);\n      }\n    }\n\n    this.state = state;\n\n    if (changed) {\n      this.clusters = this.cluster(input);\n    }\n\n    return { clusters: this.clusters, changed };\n  }\n\n  public cluster({ map }: AlgorithmInput): Cluster[] {\n    return this.superCluster\n      .getClusters([-180, -90, 180, 90], map.getZoom())\n      .map(this.transformCluster.bind(this));\n  }\n\n  protected transformCluster({\n    geometry: {\n      coordinates: [lng, lat],\n    },\n    properties,\n  }: ClusterFeature<{ marker: google.maps.Marker }>): Cluster {\n    if (properties.cluster) {\n      return new Cluster({\n        markers: this.superCluster\n          .getLeaves(properties.cluster_id, Infinity)\n          .map((leaf) => leaf.properties.marker),\n        position: new google.maps.LatLng({ lat, lng }),\n      });\n    } else {\n      const marker = properties.marker;\n\n      return new Cluster({\n        markers: [marker],\n        position: marker.getPosition(),\n      });\n    }\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Cluster } from \"./cluster\";\n\n/**\n * Provides statistics on all clusters in the current render cycle for use in {@link Renderer.render}.\n */\nexport class ClusterStats {\n  public readonly markers: { sum: number };\n  public readonly clusters: {\n    count: number;\n    markers: {\n      mean: number;\n      sum: number;\n      min: number;\n      max: number;\n    };\n  };\n\n  constructor(markers: google.maps.Marker[], clusters: Cluster[]) {\n    this.markers = { sum: markers.length };\n\n    const clusterMarkerCounts = clusters.map((a) => a.count);\n    const clusterMarkerSum = clusterMarkerCounts.reduce((a, b) => a + b, 0);\n\n    this.clusters = {\n      count: clusters.length,\n      markers: {\n        mean: clusterMarkerSum / clusters.length,\n        sum: clusterMarkerSum,\n        min: Math.min(...clusterMarkerCounts),\n        max: Math.max(...clusterMarkerCounts),\n      },\n    };\n  }\n}\n\nexport interface Renderer {\n  /**\n   * Turn a {@link Cluster} into a `google.maps.Marker`.\n   *\n   * Below is a simple example to create a marker with the number of markers in the cluster as a label.\n   *\n   * ```typescript\n   * return new google.maps.Marker({\n   *   position,\n   *   label: String(markers.length),\n   * });\n   * ```\n   */\n  render(cluster: Cluster, stats: ClusterStats): google.maps.Marker;\n}\n\nexport class DefaultRenderer implements Renderer {\n  /**\n   * The default render function for the library used by {@link MarkerClusterer}.\n   *\n   * Currently set to use the following:\n   *\n   * ```typescript\n   * // change color if this cluster has more markers than the mean cluster\n   * const color =\n   *   count > Math.max(10, stats.clusters.markers.mean)\n   *     ? \"#ff0000\"\n   *     : \"#0000ff\";\n   *\n   * // create svg url with fill color\n   * const svg = window.btoa(`\n   * <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n   *   <circle cx=\"120\" cy=\"120\" opacity=\".1\" r=\"130\" />\n   * </svg>`);\n   *\n   * // create marker using svg icon\n   * return new google.maps.Marker({\n   *   position,\n   *   icon: {\n   *     url: `data:image/svg+xml;base64,${svg}`,\n   *     scaledSize: new google.maps.Size(45, 45),\n   *   },\n   *   label: {\n   *     text: String(count),\n   *     color: \"rgba(255,255,255,0.9)\",\n   *     fontSize: \"12px\",\n   *   },\n   *   // adjust zIndex to be above other markers\n   *   zIndex: 1000 + count,\n   * });\n   * ```\n   */\n  public render(\n    { count, position }: Cluster,\n    stats: ClusterStats\n  ): google.maps.Marker {\n    // change color if this cluster has more markers than the mean cluster\n    const color =\n      count > Math.max(10, stats.clusters.markers.mean) ? \"#ff0000\" : \"#0000ff\";\n\n    // create svg url with fill color\n    const svg = window.btoa(`\n  <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n    <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n    <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n  </svg>`);\n\n    // create marker using svg icon\n    return new google.maps.Marker({\n      position,\n      icon: {\n        url: `data:image/svg+xml;base64,${svg}`,\n        scaledSize: new google.maps.Size(45, 45),\n      },\n      label: {\n        text: String(count),\n        color: \"rgba(255,255,255,0.9)\",\n        fontSize: \"12px\",\n      },\n      // adjust zIndex to be above other markers\n      zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,\n    });\n  }\n}\n","/**\n * Copyright 2019 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OverlayViewSafe extends google.maps.OverlayView {}\n\n/**\n * Extends an object's prototype by another's.\n *\n * @param type1 The Type to be extended.\n * @param type2 The Type to extend with.\n * @ignore\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extend(type1: any, type2: any): void {\n  /* istanbul ignore next */\n  // eslint-disable-next-line prefer-const\n  for (let property in type2.prototype) {\n    type1.prototype[property] = type2.prototype[property];\n  }\n}\n\n/**\n * @ignore\n */\nexport class OverlayViewSafe {\n  constructor() {\n    // MarkerClusterer implements google.maps.OverlayView interface. We use the\n    // extend function to extend MarkerClusterer with google.maps.OverlayView\n    // because it might not always be available when the code is defined so we\n    // look for it at the last possible moment. If it doesn't exist now then\n    // there is no point going ahead :)\n    extend(OverlayViewSafe, google.maps.OverlayView);\n  }\n}\n","/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Algorithm, SuperClusterAlgorithm } from \"./algorithms\";\nimport { ClusterStats, DefaultRenderer, Renderer } from \"./renderer\";\n\nimport { Cluster } from \"./cluster\";\nimport { OverlayViewSafe } from \"./overlay-view-safe\";\n\nexport type onClusterClickHandler = (\n  event: google.maps.MapMouseEvent,\n  cluster: Cluster,\n  map: google.maps.Map\n) => void;\nexport interface MarkerClustererOptions {\n  markers?: google.maps.Marker[];\n  /**\n   * An algorithm to cluster markers. Default is {@link SuperClusterAlgorithm}. Must\n   * provide a `calculate` method accepting {@link AlgorithmInput} and returning\n   * an array of {@link Cluster}.\n   */\n  algorithm?: Algorithm;\n  map?: google.maps.Map | null;\n  /**\n   * An object that converts a {@link Cluster} into a `google.maps.Marker`.\n   * Default is {@link DefaultRenderer}.\n   */\n  renderer?: Renderer;\n  onClusterClick?: onClusterClickHandler;\n}\n\nexport enum MarkerClustererEvents {\n  CLUSTERING_BEGIN = \"clusteringbegin\",\n  CLUSTERING_END = \"clusteringend\",\n  CLUSTER_CLICK = \"click\",\n}\n\nexport const defaultOnClusterClickHandler: onClusterClickHandler = (\n  _: google.maps.MapMouseEvent,\n  cluster: Cluster,\n  map: google.maps.Map\n): void => {\n  map.fitBounds(cluster.bounds);\n};\n/**\n * MarkerClusterer creates and manages per-zoom-level clusters for large amounts\n * of markers. See {@link MarkerClustererOptions} for more details.\n *\n * <iframe src=\"https://googlemaps.github.io/js-three/public/anchor/index.html\"></iframe>\n */\nexport class MarkerClusterer extends OverlayViewSafe {\n  /** @see {@link MarkerClustererOptions.onClusterClick} */\n  public onClusterClick: onClusterClickHandler;\n  /** @see {@link MarkerClustererOptions.algorithm} */\n  protected algorithm: Algorithm;\n  protected clusters: Cluster[];\n  protected markers: google.maps.Marker[];\n  /** @see {@link MarkerClustererOptions.renderer} */\n  protected renderer: Renderer;\n  /** @see {@link MarkerClustererOptions.map} */\n  protected map: google.maps.Map | null;\n  /** @see {@link MarkerClustererOptions.maxZoom} */\n  protected idleListener: google.maps.MapsEventListener;\n\n  constructor({\n    map,\n    markers = [],\n    algorithm = new SuperClusterAlgorithm({}),\n    renderer = new DefaultRenderer(),\n    onClusterClick = defaultOnClusterClickHandler,\n  }: MarkerClustererOptions) {\n    super();\n    this.markers = [...markers];\n    this.clusters = [];\n\n    this.algorithm = algorithm;\n    this.renderer = renderer;\n\n    this.onClusterClick = onClusterClick;\n\n    if (map) {\n      this.setMap(map);\n    }\n  }\n\n  public addMarker(marker: google.maps.Marker, noDraw?: boolean): void {\n    if (this.markers.includes(marker)) {\n      return;\n    }\n\n    this.markers.push(marker);\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  public addMarkers(markers: google.maps.Marker[], noDraw?: boolean): void {\n    markers.forEach((marker) => {\n      this.addMarker(marker, true);\n    });\n\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  public removeMarker(marker: google.maps.Marker, noDraw?: boolean): boolean {\n    const index = this.markers.indexOf(marker);\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n\n    if (!noDraw) {\n      this.render();\n    }\n\n    return true;\n  }\n\n  public removeMarkers(\n    markers: google.maps.Marker[],\n    noDraw?: boolean\n  ): boolean {\n    let removed = false;\n\n    markers.forEach((marker) => {\n      removed = this.removeMarker(marker, true) || removed;\n    });\n\n    if (removed && !noDraw) {\n      this.render();\n    }\n\n    return removed;\n  }\n\n  public clearMarkers(noDraw?: boolean): void {\n    this.markers.length = 0;\n\n    if (!noDraw) {\n      this.render();\n    }\n  }\n\n  /**\n   * Recalculates and draws all the marker clusters.\n   */\n  public render(): void {\n    const map = this.getMap();\n    if (map instanceof google.maps.Map && this.getProjection()) {\n      google.maps.event.trigger(\n        this,\n        MarkerClustererEvents.CLUSTERING_BEGIN,\n        this\n      );\n      const { clusters, changed } = this.algorithm.calculate({\n        markers: this.markers,\n        map,\n        mapCanvasProjection: this.getProjection(),\n      });\n\n      // allow algorithms to return flag on whether the clusters/markers have changed\n      if (changed || changed == undefined) {\n        // reset visibility of markers and clusters\n        this.reset();\n\n        // store new clusters\n        this.clusters = clusters;\n\n        this.renderClusters();\n      }\n      google.maps.event.trigger(\n        this,\n        MarkerClustererEvents.CLUSTERING_END,\n        this\n      );\n    }\n  }\n\n  public onAdd(): void {\n    this.idleListener = this.getMap().addListener(\n      \"idle\",\n      this.render.bind(this)\n    );\n    this.render();\n  }\n\n  public onRemove(): void {\n    google.maps.event.removeListener(this.idleListener);\n    this.reset();\n  }\n\n  protected reset(): void {\n    this.markers.forEach((marker) => marker.setMap(null));\n    this.clusters.forEach((cluster) => cluster.delete());\n    this.clusters = [];\n  }\n\n  protected renderClusters(): void {\n    // generate stats to pass to renderers\n    const stats = new ClusterStats(this.markers, this.clusters);\n    const map = this.getMap() as google.maps.Map;\n\n    this.clusters.forEach((cluster) => {\n      if (cluster.markers.length === 1) {\n        cluster.marker = cluster.markers[0];\n      } else {\n        cluster.marker = this.renderer.render(cluster, stats);\n\n        if (this.onClusterClick) {\n          cluster.marker.addListener(\n            \"click\",\n            /* istanbul ignore next */\n            (event: google.maps.MapMouseEvent) => {\n              google.maps.event.trigger(\n                this,\n                MarkerClustererEvents.CLUSTER_CLICK,\n                cluster\n              );\n              this.onClusterClick(event, cluster, map);\n            }\n          );\n        }\n      }\n\n      cluster.marker.setMap(map);\n    });\n  }\n}\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import clone from \"@turf/clone\";\nimport { coordAll, featureEach } from \"@turf/meta\";\nimport skmeans from \"skmeans\";\n/**\n * Takes a set of {@link Point|points} and partition them into clusters using the k-mean .\n * It uses the [k-means algorithm](https://en.wikipedia.org/wiki/K-means_clustering)\n *\n * @name clustersKmeans\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.numberOfClusters=Math.sqrt(numberOfPoints/2)] numberOfClusters that will be generated\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {[number, number]} centroid - Centroid of the cluster [Longitude, Latitude]\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var options = {numberOfClusters: 7};\n * var clustered = turf.clustersKmeans(points, options);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersKmeans(points, options) {\n    if (options === void 0) { options = {}; }\n    // Default Params\n    var count = points.features.length;\n    options.numberOfClusters =\n        options.numberOfClusters || Math.round(Math.sqrt(count / 2));\n    // numberOfClusters can't be greater than the number of points\n    // fallbacks to count\n    if (options.numberOfClusters > count)\n        options.numberOfClusters = count;\n    // Clone points to prevent any mutations (enabled by default)\n    if (options.mutate !== true)\n        points = clone(points);\n    // collect points coordinates\n    var data = coordAll(points);\n    // create seed to avoid skmeans to drift\n    var initialCentroids = data.slice(0, options.numberOfClusters);\n    // create skmeans clusters\n    var skmeansResult = skmeans(data, options.numberOfClusters, initialCentroids);\n    // store centroids {clusterId: [number, number]}\n    var centroids = {};\n    skmeansResult.centroids.forEach(function (coord, idx) {\n        centroids[idx] = coord;\n    });\n    // add associated cluster number\n    featureEach(points, function (point, index) {\n        var clusterId = skmeansResult.idxs[index];\n        point.properties.cluster = clusterId;\n        point.properties.centroid = centroids[clusterId];\n    });\n    return points;\n}\nexport default clustersKmeans;\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexport default clone;\n","import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n","\"use strict\";\n\n/*jshint esversion: 6 */\n\nvar Distance = require(\"./distance.js\"),\n    ClusterInit = require(\"./kinit.js\"),\n    eudist = Distance.eudist,\n    mandist = Distance.mandist,\n    dist = Distance.dist,\n    kmrand = ClusterInit.kmrand,\n    kmpp = ClusterInit.kmpp;\n\nvar MAX = 10000;\n\n/**\n * Inits an array with values\n */\nfunction init(len, val, v) {\n\tv = v || [];\n\tfor (var i = 0; i < len; i++) {\n\t\tv[i] = val;\n\t}return v;\n}\n\nfunction skmeans(data, k, initial, maxit) {\n\tvar ks = [],\n\t    old = [],\n\t    idxs = [],\n\t    dist = [];\n\tvar conv = false,\n\t    it = maxit || MAX;\n\tvar len = data.length,\n\t    vlen = data[0].length,\n\t    multi = vlen > 0;\n\tvar count = [];\n\n\tif (!initial) {\n\t\tvar _idxs = {};\n\t\twhile (ks.length < k) {\n\t\t\tvar idx = Math.floor(Math.random() * len);\n\t\t\tif (!_idxs[idx]) {\n\t\t\t\t_idxs[idx] = true;\n\t\t\t\tks.push(data[idx]);\n\t\t\t}\n\t\t}\n\t} else if (initial == \"kmrand\") {\n\t\tks = kmrand(data, k);\n\t} else if (initial == \"kmpp\") {\n\t\tks = kmpp(data, k);\n\t} else {\n\t\tks = initial;\n\t}\n\n\tdo {\n\t\t// Reset k count\n\t\tinit(k, 0, count);\n\n\t\t// For each value in data, find the nearest centroid\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar min = Infinity,\n\t\t\t    _idx = 0;\n\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t// Multidimensional or unidimensional\n\t\t\t\tvar dist = multi ? eudist(data[i], ks[j]) : Math.abs(data[i] - ks[j]);\n\t\t\t\tif (dist <= min) {\n\t\t\t\t\tmin = dist;\n\t\t\t\t\t_idx = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidxs[i] = _idx; // Index of the selected centroid for that value\n\t\t\tcount[_idx]++; // Number of values for this centroid\n\t\t}\n\n\t\t// Recalculate centroids\n\t\tvar sum = [],\n\t\t    old = [],\n\t\t    dif = 0;\n\t\tfor (var _j = 0; _j < k; _j++) {\n\t\t\t// Multidimensional or unidimensional\n\t\t\tsum[_j] = multi ? init(vlen, 0, sum[_j]) : 0;\n\t\t\told[_j] = ks[_j];\n\t\t}\n\n\t\t// If multidimensional\n\t\tif (multi) {\n\t\t\tfor (var _j2 = 0; _j2 < k; _j2++) {\n\t\t\t\tks[_j2] = [];\n\t\t\t} // Sum values and count for each centroid\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tvar _idx2 = idxs[_i],\n\t\t\t\t    // Centroid for that item\n\t\t\t\tvsum = sum[_idx2],\n\t\t\t\t    // Sum values for this centroid\n\t\t\t\tvect = data[_i]; // Current vector\n\n\t\t\t\t// Accumulate value on the centroid for current vector\n\t\t\t\tfor (var h = 0; h < vlen; h++) {\n\t\t\t\t\tvsum[h] += vect[h];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tconv = true;\n\t\t\tfor (var _j3 = 0; _j3 < k; _j3++) {\n\t\t\t\tvar ksj = ks[_j3],\n\t\t\t\t    // Current centroid\n\t\t\t\tsumj = sum[_j3],\n\t\t\t\t    // Accumulated centroid values\n\t\t\t\toldj = old[_j3],\n\t\t\t\t    // Old centroid value\n\t\t\t\tcj = count[_j3]; // Number of elements for this centroid\n\n\t\t\t\t// New average\n\t\t\t\tfor (var _h = 0; _h < vlen; _h++) {\n\t\t\t\t\tksj[_h] = sumj[_h] / cj || 0; // New centroid\n\t\t\t\t}\n\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tif (conv) {\n\t\t\t\t\tfor (var _h2 = 0; _h2 < vlen; _h2++) {\n\t\t\t\t\t\tif (oldj[_h2] != ksj[_h2]) {\n\t\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If unidimensional\n\t\telse {\n\t\t\t\t// Sum values and count for each centroid\n\t\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\t\tvar _idx3 = idxs[_i2];\n\t\t\t\t\tsum[_idx3] += data[_i2];\n\t\t\t\t}\n\t\t\t\t// Calculate the average for each centroid\n\t\t\t\tfor (var _j4 = 0; _j4 < k; _j4++) {\n\t\t\t\t\tks[_j4] = sum[_j4] / count[_j4] || 0; // New centroid\n\t\t\t\t}\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tconv = true;\n\t\t\t\tfor (var _j5 = 0; _j5 < k; _j5++) {\n\t\t\t\t\tif (old[_j5] != ks[_j5]) {\n\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\tconv = conv || --it <= 0;\n\t} while (!conv);\n\n\treturn {\n\t\tit: MAX - it,\n\t\tk: k,\n\t\tidxs: idxs,\n\t\tcentroids: ks\n\t};\n}\n\nmodule.exports = skmeans;\n","/*jshint esversion: 6 */\n\nconst\n\tDistance = require(\"./distance.js\"),\n\tClusterInit = require(\"./kinit.js\"),\n\teudist = Distance.eudist,\n\tmandist = Distance.mandist,\n\tdist = Distance.dist,\n\tkmrand = ClusterInit.kmrand,\n\tkmpp = ClusterInit.kmpp;\n\nconst MAX = 10000;\n\n/**\n * Inits an array with values\n */\nfunction init(len,val,v) {\n\tv = v || [];\n\tfor(let i=0;i<len;i++) v[i] = val;\n\treturn v;\n}\n\nfunction skmeans(data,k,initial,maxit) {\n\tvar ks = [], old = [], idxs = [], dist = [];\n\tvar conv = false, it = maxit || MAX;\n\tvar len = data.length, vlen = data[0].length, multi = vlen>0;\n\tvar count = [];\n\n\tif(!initial) {\n\t\tlet idxs = {};\n\t\twhile(ks.length<k) {\n\t\t\tlet idx = Math.floor(Math.random()*len);\n\t\t\tif(!idxs[idx]) {\n\t\t\t\tidxs[idx] = true;\n\t\t\t\tks.push(data[idx]);\n\t\t\t}\n\t\t}\n\t}\n\telse if(initial==\"kmrand\") {\n\t\tks = kmrand(data,k);\n\t}\n\telse if(initial==\"kmpp\") {\n\t\tks = kmpp(data,k);\n\t}\n\telse {\n\t\tks = initial;\n\t}\n\n\tdo {\n\t\t// Reset k count\n\t\tinit(k,0,count);\n\n\t\t// For each value in data, find the nearest centroid\n\t\tfor(let i=0;i<len;i++) {\n\t\t\tlet min = Infinity, idx = 0;\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\t// Multidimensional or unidimensional\n\t\t\t\tvar dist = multi? eudist(data[i],ks[j]) : Math.abs(data[i]-ks[j]);\n\t\t\t\tif(dist<=min) {\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tidx = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidxs[i] = idx;\t// Index of the selected centroid for that value\n\t\t\tcount[idx]++;\t\t// Number of values for this centroid\n\t\t}\n\n\t\t// Recalculate centroids\n\t\tvar sum = [], old = [], dif = 0;\n\t\tfor(let j=0;j<k;j++) {\n\t\t\t// Multidimensional or unidimensional\n\t\t\tsum[j] = multi? init(vlen,0,sum[j]) : 0;\n\t\t\told[j] = ks[j];\n\t\t}\n\n\t\t// If multidimensional\n\t\tif(multi) {\n\t\t\tfor(let j=0;j<k;j++) ks[j] = [];\n\n\t\t\t// Sum values and count for each centroid\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tlet\tidx = idxs[i],\t\t// Centroid for that item\n\t\t\t\t\t\tvsum = sum[idx],\t// Sum values for this centroid\n\t\t\t\t\t\tvect = data[i];\t\t// Current vector\n\n\t\t\t\t// Accumulate value on the centroid for current vector\n\t\t\t\tfor(let h=0;h<vlen;h++) {\n\t\t\t\t\tvsum[h] += vect[h];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tconv = true;\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\tlet ksj = ks[j],\t\t// Current centroid\n\t\t\t\t\t\tsumj = sum[j],\t// Accumulated centroid values\n\t\t\t\t\t\toldj = old[j], \t// Old centroid value\n\t\t\t\t\t\tcj = count[j];\t// Number of elements for this centroid\n\n\t\t\t\t// New average\n\t\t\t\tfor(let h=0;h<vlen;h++) {\n\t\t\t\t\tksj[h] = (sumj[h])/(cj) || 0;\t// New centroid\n\t\t\t\t}\n\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tif(conv) {\n\t\t\t\t\tfor(let h=0;h<vlen;h++) {\n\t\t\t\t\t\tif(oldj[h]!=ksj[h]) {\n\t\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If unidimensional\n\t\telse {\n\t\t\t// Sum values and count for each centroid\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tlet idx = idxs[i];\n\t\t\t\tsum[idx] += data[i];\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\tks[j] = sum[j]/count[j] || 0;\t// New centroid\n\t\t\t}\n\t\t\t// Find if centroids have moved\n\t\t\tconv = true;\n\t\t\tfor(let j=0;j<k;j++) {\n\t\t\t\tif(old[j]!=ks[j]) {\n\t\t\t\t\tconv = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconv = conv || (--it<=0);\n\t}while(!conv);\n\n\treturn {\n\t\tit : MAX-it,\n\t\tk : k,\n\t\tidxs : idxs,\n\t\tcentroids : ks\n\t};\n}\n\nmodule.exports = skmeans;\n","\"use strict\";\n\nmodule.exports = {\n\t/**\n  * Euclidean distance\n  */\n\teudist: function eudist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar d = (v1[i] || 0) - (v2[i] || 0);\n\t\t\tsum += d * d;\n\t\t}\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\tmandist: function mandist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tsum += Math.abs((v1[i] || 0) - (v2[i] || 0));\n\t\t}\n\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\n\n\t/**\n  * Unidimensional distance\n  */\n\tdist: function dist(v1, v2, sqrt) {\n\t\tvar d = Math.abs(v1 - v2);\n\t\treturn sqrt ? d : d * d;\n\t}\n};\n","module.exports = {\n\t/**\n\t * Euclidean distance\n\t */\n\teudist(v1,v2,sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor(let i=0;i<len;i++) {\n\t\t\tvar d = (v1[i]||0) - (v2[i]||0);\n\t\t\tsum += d*d;\n\t\t}\n\t\t// Square root not really needed\n\t\treturn sqrt? Math.sqrt(sum) : sum;\n\t},\n\n\tmandist(v1,v2,sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor(let i=0;i<len;i++) {\n\t\t\tsum += Math.abs((v1[i]||0) - (v2[i]||0));\n\t\t}\n\n\t\t// Square root not really needed\n\t\treturn sqrt? Math.sqrt(sum) : sum;\n\t},\n\n\t/**\n\t * Unidimensional distance\n\t */\n\tdist(v1,v2,sqrt) {\n\t\tvar d = Math.abs(v1-v2);\n\t\treturn sqrt? d : d*d;\n\t}\n\n}\n","\"use strict\";\n\nvar Distance = require(\"./distance.js\"),\n    eudist = Distance.eudist,\n    dist = Distance.dist;\n\nmodule.exports = {\n\tkmrand: function kmrand(data, k) {\n\t\tvar map = {},\n\t\t    ks = [],\n\t\t    t = k << 2;\n\t\tvar len = data.length;\n\t\tvar multi = data[0].length > 0;\n\n\t\twhile (ks.length < k && t-- > 0) {\n\t\t\tvar d = data[Math.floor(Math.random() * len)];\n\t\t\tvar key = multi ? d.join(\"_\") : \"\" + d;\n\t\t\tif (!map[key]) {\n\t\t\t\tmap[key] = true;\n\t\t\t\tks.push(d);\n\t\t\t}\n\t\t}\n\n\t\tif (ks.length < k) throw new Error(\"Error initializating clusters\");else return ks;\n\t},\n\n\n\t/**\n  * K-means++ initial centroid selection\n  */\n\tkmpp: function kmpp(data, k) {\n\t\tvar distance = data[0].length ? eudist : dist;\n\t\tvar ks = [],\n\t\t    len = data.length;\n\t\tvar multi = data[0].length > 0;\n\t\tvar map = {};\n\n\t\t// First random centroid\n\t\tvar c = data[Math.floor(Math.random() * len)];\n\t\tvar key = multi ? c.join(\"_\") : \"\" + c;\n\t\tks.push(c);\n\t\tmap[key] = true;\n\n\t\t// Retrieve next centroids\n\t\twhile (ks.length < k) {\n\t\t\t// Min Distances between current centroids and data points\n\t\t\tvar dists = [],\n\t\t\t    lk = ks.length;\n\t\t\tvar dsum = 0,\n\t\t\t    prs = [];\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar min = Infinity;\n\t\t\t\tfor (var j = 0; j < lk; j++) {\n\t\t\t\t\tvar _dist = distance(data[i], ks[j]);\n\t\t\t\t\tif (_dist <= min) min = _dist;\n\t\t\t\t}\n\t\t\t\tdists[i] = min;\n\t\t\t}\n\n\t\t\t// Sum all min distances\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tdsum += dists[_i];\n\t\t\t}\n\n\t\t\t// Probabilities and cummulative prob (cumsum)\n\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\tprs[_i2] = { i: _i2, v: data[_i2], pr: dists[_i2] / dsum, cs: 0 };\n\t\t\t}\n\n\t\t\t// Sort Probabilities\n\t\t\tprs.sort(function (a, b) {\n\t\t\t\treturn a.pr - b.pr;\n\t\t\t});\n\n\t\t\t// Cummulative Probabilities\n\t\t\tprs[0].cs = prs[0].pr;\n\t\t\tfor (var _i3 = 1; _i3 < len; _i3++) {\n\t\t\t\tprs[_i3].cs = prs[_i3 - 1].cs + prs[_i3].pr;\n\t\t\t}\n\n\t\t\t// Randomize\n\t\t\tvar rnd = Math.random();\n\n\t\t\t// Gets only the items whose cumsum >= rnd\n\t\t\tvar idx = 0;\n\t\t\twhile (idx < len - 1 && prs[idx++].cs < rnd) {}\n\t\t\tks.push(prs[idx - 1].v);\n\t\t\t/*\n   let done = false;\n   while(!done) {\n   \t// this is our new centroid\n   \tc = prs[idx-1].v\n   \tkey = multi? c.join(\"_\") : `${c}`;\n   \tif(!map[key]) {\n   \t\tmap[key] = true;\n   \t\tks.push(c);\n   \t\tdone = true;\n   \t}\n   \telse {\n   \t\tidx++;\n   \t}\n   }\n   */\n\t\t}\n\n\t\treturn ks;\n\t}\n};\n","const\n\tDistance = require(\"./distance.js\"),\n\teudist = Distance.eudist,\n\tdist = Distance.dist;\n\nmodule.exports = {\n\tkmrand(data,k) {\n\t\tvar map = {}, ks = [], t = k<<2;\n\t\tvar len = data.length;\n\t\tvar multi = data[0].length>0;\n\n\t\twhile(ks.length<k && (t--)>0) {\n\t\t\tlet d = data[Math.floor(Math.random()*len)];\n\t\t\tlet key = multi? d.join(\"_\") : `${d}`;\n\t\t\tif(!map[key]) {\n\t\t\t\tmap[key] = true;\n\t\t\t\tks.push(d);\n\t\t\t}\n\t\t}\n\n\t\tif(ks.length<k) throw new Error(\"Error initializating clusters\");\n\t\telse return ks;\n\t},\n\n\t/**\n\t * K-means++ initial centroid selection\n\t */\n\tkmpp(data,k) {\n\t\tvar distance = data[0].length? eudist : dist;\n\t\tvar ks = [], len = data.length;\n\t\tvar multi = data[0].length>0;\n\t\tvar map = {};\n\n\t\t// First random centroid\n\t\tvar c = data[Math.floor(Math.random()*len)];\n\t\tvar key = multi? c.join(\"_\") : `${c}`;\n\t\tks.push(c);\n\t\tmap[key] = true;\n\n\t\t// Retrieve next centroids\n\t\twhile(ks.length<k) {\n\t\t\t// Min Distances between current centroids and data points\n\t\t\tlet dists = [], lk = ks.length;\n\t\t\tlet dsum = 0, prs = [];\n\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tlet min = Infinity;\n\t\t\t\tfor(let j=0;j<lk;j++) {\n\t\t\t\t\tlet dist = distance(data[i],ks[j]);\n\t\t\t\t\tif(dist<=min) min = dist;\n\t\t\t\t}\n\t\t\t\tdists[i] = min;\n\t\t\t}\n\n\t\t\t// Sum all min distances\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tdsum += dists[i]\n\t\t\t}\n\n\t\t\t// Probabilities and cummulative prob (cumsum)\n\t\t\tfor(let i=0;i<len;i++) {\n\t\t\t\tprs[i] = {i:i, v:data[i],\tpr:dists[i]/dsum, cs:0}\n\t\t\t}\n\n\t\t\t// Sort Probabilities\n\t\t\tprs.sort((a,b)=>a.pr-b.pr);\n\n\t\t\t// Cummulative Probabilities\n\t\t\tprs[0].cs = prs[0].pr;\n\t\t\tfor(let i=1;i<len;i++) {\n\t\t\t\tprs[i].cs = prs[i-1].cs + prs[i].pr;\n\t\t\t}\n\n\t\t\t// Randomize\n\t\t\tlet rnd = Math.random();\n\n\t\t\t// Gets only the items whose cumsum >= rnd\n\t\t\tlet idx = 0;\n\t\t\twhile(idx<len-1 && prs[idx++].cs<rnd);\n\t\t\tks.push(prs[idx-1].v);\n\t\t\t/*\n\t\t\tlet done = false;\n\t\t\twhile(!done) {\n\t\t\t\t// this is our new centroid\n\t\t\t\tc = prs[idx-1].v\n\t\t\t\tkey = multi? c.join(\"_\") : `${c}`;\n\t\t\t\tif(!map[key]) {\n\t\t\t\t\tmap[key] = true;\n\t\t\t\t\tks.push(c);\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tidx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\treturn ks;\n\t}\n\n}\n","import clone from \"@turf/clone\";\nimport distance from \"@turf/distance\";\nimport { coordAll } from \"@turf/meta\";\nimport { convertLength, } from \"@turf/helpers\";\nimport clustering from \"density-clustering\";\n/**\n * Takes a set of {@link Point|points} and partition them into clusters according to {@link DBSCAN's|https://en.wikipedia.org/wiki/DBSCAN} data clustering algorithm.\n *\n * @name clustersDbscan\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {number} maxDistance Maximum Distance between any point of the cluster to generate the clusters (kilometers only)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] in which `maxDistance` is expressed, can be degrees, radians, miles, or kilometers\n * @param {boolean} [options.mutate=false] Allows GeoJSON input to be mutated\n * @param {number} [options.minPoints=3] Minimum number of points to generate a single cluster,\n * points which do not meet this requirement will be classified as an 'edge' or 'noise'.\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {string} dbscan - type of point it has been classified as ('core'|'edge'|'noise')\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var maxDistance = 100;\n * var clustered = turf.clustersDbscan(points, maxDistance);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersDbscan(points, maxDistance, options) {\n    // Input validation being handled by Typescript\n    // collectionOf(points, 'Point', 'points must consist of a FeatureCollection of only Points');\n    // if (maxDistance === null || maxDistance === undefined) throw new Error('maxDistance is required');\n    // if (!(Math.sign(maxDistance) > 0)) throw new Error('maxDistance is invalid');\n    // if (!(minPoints === undefined || minPoints === null || Math.sign(minPoints) > 0)) throw new Error('options.minPoints is invalid');\n    if (options === void 0) { options = {}; }\n    // Clone points to prevent any mutations\n    if (options.mutate !== true)\n        points = clone(points);\n    // Defaults\n    options.minPoints = options.minPoints || 3;\n    // create clustered ids\n    var dbscan = new clustering.DBSCAN();\n    var clusteredIds = dbscan.run(coordAll(points), convertLength(maxDistance, options.units), options.minPoints, distance);\n    // Tag points to Clusters ID\n    var clusterId = -1;\n    clusteredIds.forEach(function (clusterIds) {\n        clusterId++;\n        // assign cluster ids to input points\n        clusterIds.forEach(function (idx) {\n            var clusterPoint = points.features[idx];\n            if (!clusterPoint.properties)\n                clusterPoint.properties = {};\n            clusterPoint.properties.cluster = clusterId;\n            clusterPoint.properties.dbscan = \"core\";\n        });\n    });\n    // handle noise points, if any\n    // edges points are tagged by DBSCAN as both 'noise' and 'cluster' as they can \"reach\" less than 'minPoints' number of points\n    dbscan.noise.forEach(function (noiseId) {\n        var noisePoint = points.features[noiseId];\n        if (!noisePoint.properties)\n            noisePoint.properties = {};\n        if (noisePoint.properties.cluster)\n            noisePoint.properties.dbscan = \"edge\";\n        else\n            noisePoint.properties.dbscan = \"noise\";\n    });\n    return points;\n}\nexport default clustersDbscan;\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = {\r\n      DBSCAN: require('./DBSCAN.js'),\r\n      KMEANS: require('./KMEANS.js'),\r\n      OPTICS: require('./OPTICS.js'),\r\n      PriorityQueue: require('./PriorityQueue.js')\r\n    };\r\n}\r\n","/**\r\n * DBSCAN - Density based clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * DBSCAN class construcotr\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {DBSCAN}\r\n */\r\nfunction DBSCAN(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {Array} */\r\n  this.dataset = [];\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 2;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n  /** @type {Array} */\r\n  this.clusters = [];\r\n  /** @type {Array} */\r\n  this.noise = [];\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._visited = [];\r\n  /** @type {Array} */\r\n  this._assigned = [];\r\n  /** @type {number} */\r\n  this._datasetLength = 0;\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n};\r\n\r\n/******************************************************************************/\r\n// public functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nDBSCAN.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0; pointId < this._datasetLength; pointId++) {\r\n    // if point is not visited, check if it forms a cluster\r\n    if (this._visited[pointId] !== 1) {\r\n      this._visited[pointId] = 1;\r\n\r\n      // if closest neighborhood is too small to form a cluster, mark as noise\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      if (neighbors.length < this.minPts) {\r\n        this.noise.push(pointId);\r\n      } else {\r\n        // create new cluster and add point\r\n        var clusterId = this.clusters.length;\r\n        this.clusters.push([]);\r\n        this._addToCluster(pointId, clusterId);\r\n\r\n        this._expandCluster(clusterId, neighbors);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this.noise = [];\r\n\r\n    this._datasetLength = dataset.length;\r\n    this._visited = new Array(this._datasetLength);\r\n    this._assigned = new Array(this._datasetLength);\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Expand cluster to closest points of given neighborhood\r\n *\r\n * @param {number} clusterId\r\n * @param {Array} neighbors\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._expandCluster = function(clusterId, neighbors) {\r\n\r\n  /**\r\n   * It's very important to calculate length of neighbors array each time,\r\n   * as the number of elements changes over time\r\n   */\r\n  for (var i = 0; i < neighbors.length; i++) {\r\n    var pointId2 = neighbors[i];\r\n\r\n    if (this._visited[pointId2] !== 1) {\r\n      this._visited[pointId2] = 1;\r\n      var neighbors2 = this._regionQuery(pointId2);\r\n\r\n      if (neighbors2.length >= this.minPts) {\r\n        neighbors = this._mergeArrays(neighbors, neighbors2);\r\n      }\r\n    }\r\n\r\n    // add to cluster\r\n    if (this._assigned[pointId2] !== 1) {\r\n      this._addToCluster(pointId2, clusterId);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Add new point to cluster\r\n *\r\n * @param {number} pointId\r\n * @param {number} clusterId\r\n */\r\nDBSCAN.prototype._addToCluster = function(pointId, clusterId) {\r\n  this.clusters[clusterId].push(pointId);\r\n  this._assigned[pointId] = 1;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId,\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._regionQuery = function(pointId) {\r\n  var neighbors = [];\r\n\r\n  for (var id = 0; id < this._datasetLength; id++) {\r\n    var dist = this.distance(this.dataset[pointId], this.dataset[id]);\r\n    if (dist < this.epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * @param {Array} a\r\n * @param {Array} b\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._mergeArrays = function(a, b) {\r\n  var len = b.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var P = b[i];\r\n    if (a.indexOf(P) < 0) {\r\n      a.push(P);\r\n    }\r\n  }\r\n\r\n  return a;\r\n};\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nDBSCAN.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = DBSCAN;\r\n}\r\n","﻿/**\r\n * KMEANS clustering\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * KMEANS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} k - number of clusters\r\n * @param {function} distance - distance function\r\n * @returns {KMEANS}\r\n */\r\n function KMEANS(dataset, k, distance) {\r\n  this.k = 3; // number of clusters\r\n  this.dataset = []; // set of feature vectors\r\n  this.assignments = []; // set of associated clusters for each feature vector\r\n  this.centroids = []; // vectors for our clusters\r\n\r\n  this.init(dataset, k, distance);\r\n}\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.init = function(dataset, k, distance) {\r\n  this.assignments = [];\r\n  this.centroids = [];\r\n\r\n  if (typeof dataset !== 'undefined') {\r\n    this.dataset = dataset;\r\n  }\r\n\r\n  if (typeof k !== 'undefined') {\r\n    this.k = k;\r\n  }\r\n\r\n  if (typeof distance !== 'undefined') {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.run = function(dataset, k) {\r\n  this.init(dataset, k);\r\n\r\n  var len = this.dataset.length;\r\n\r\n  // initialize centroids\r\n  for (var i = 0; i < this.k; i++) {\r\n    this.centroids[i] = this.randomCentroid();\r\n\t}\r\n\r\n  var change = true;\r\n  while(change) {\r\n\r\n    // assign feature vectors to clusters\r\n    change = this.assign();\r\n\r\n    // adjust location of centroids\r\n    for (var centroidId = 0; centroidId < this.k; centroidId++) {\r\n      var mean = new Array(maxDim);\r\n      var count = 0;\r\n\r\n      // init mean vector\r\n      for (var dim = 0; dim < maxDim; dim++) {\r\n        mean[dim] = 0;\r\n      }\r\n\r\n      for (var j = 0; j < len; j++) {\r\n        var maxDim = this.dataset[j].length;\r\n\r\n        // if current cluster id is assigned to point\r\n        if (centroidId === this.assignments[j]) {\r\n          for (var dim = 0; dim < maxDim; dim++) {\r\n            mean[dim] += this.dataset[j][dim];\r\n          }\r\n          count++;\r\n        }\r\n      }\r\n\r\n      if (count > 0) {\r\n        // if cluster contain points, adjust centroid position\r\n        for (var dim = 0; dim < maxDim; dim++) {\r\n          mean[dim] /= count;\r\n        }\r\n        this.centroids[centroidId] = mean;\r\n      } else {\r\n        // if cluster is empty, generate new random centroid\r\n        this.centroids[centroidId] = this.randomCentroid();\r\n        change = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.getClusters();\r\n};\r\n\r\n/**\r\n * Generate random centroid\r\n *\r\n * @returns {Array}\r\n */\r\nKMEANS.prototype.randomCentroid = function() {\r\n  var maxId = this.dataset.length -1;\r\n  var centroid;\r\n  var id;\r\n\r\n  do {\r\n    id = Math.round(Math.random() * maxId);\r\n    centroid = this.dataset[id];\r\n  } while (this.centroids.indexOf(centroid) >= 0);\r\n\r\n  return centroid;\r\n}\r\n\r\n/**\r\n * Assign points to clusters\r\n *\r\n * @returns {boolean}\r\n */\r\nKMEANS.prototype.assign = function() {\r\n  var change = false;\r\n  var len = this.dataset.length;\r\n  var closestCentroid;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    closestCentroid = this.argmin(this.dataset[i], this.centroids, this.distance);\r\n\r\n    if (closestCentroid != this.assignments[i]) {\r\n      this.assignments[i] = closestCentroid;\r\n      change = true;\r\n    }\r\n  }\r\n\r\n  return change;\r\n}\r\n\r\n/**\r\n * Extract information about clusters\r\n *\r\n * @returns {undefined}\r\n */\r\nKMEANS.prototype.getClusters = function() {\r\n  var clusters = new Array(this.k);\r\n  var centroidId;\r\n\r\n  for (var pointId = 0; pointId < this.assignments.length; pointId++) {\r\n    centroidId = this.assignments[pointId];\r\n\r\n    // init empty cluster\r\n    if (typeof clusters[centroidId] === 'undefined') {\r\n      clusters[centroidId] = [];\r\n    }\r\n\r\n    clusters[centroidId].push(pointId);\r\n  }\r\n\r\n  return clusters;\r\n};\r\n\r\n// utils\r\n\r\n/**\r\n * @params {Array} point\r\n * @params {Array.<Array>} set\r\n * @params {Function} f\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.argmin = function(point, set, f) {\r\n  var min = Number.MAX_VALUE;\r\n  var arg = 0;\r\n  var len = set.length;\r\n  var d;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    d = f(point, set[i]);\r\n    if (d < min) {\r\n      min = d;\r\n      arg = i;\r\n    }\r\n  }\r\n\r\n  return arg;\r\n};\r\n\r\n/**\r\n * Euclidean distance\r\n *\r\n * @params {number} p\r\n * @params {number} q\r\n * @returns {number}\r\n */\r\nKMEANS.prototype.distance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    var diff = p[i] - q[i];\r\n    sum += diff * diff;\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = KMEANS;\r\n}\r\n","\r\n/**\r\n * @requires ./PriorityQueue.js\r\n */\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n      var PriorityQueue = require('./PriorityQueue.js');\r\n}\r\n\r\n/**\r\n * OPTICS - Ordering points to identify the clustering structure\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * OPTICS class constructor\r\n * @constructor\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distanceFunction\r\n * @returns {OPTICS}\r\n */\r\nfunction OPTICS(dataset, epsilon, minPts, distanceFunction) {\r\n  /** @type {number} */\r\n  this.epsilon = 1;\r\n  /** @type {number} */\r\n  this.minPts = 1;\r\n  /** @type {function} */\r\n  this.distance = this._euclideanDistance;\r\n\r\n  // temporary variables used during computation\r\n\r\n  /** @type {Array} */\r\n  this._reachability = [];\r\n  /** @type {Array} */\r\n  this._processed = [];\r\n  /** @type {number} */\r\n  this._coreDistance = 0;\r\n  /** @type {Array} */\r\n  this._orderedList = [];\r\n\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n}\r\n\r\n/******************************************************************************/\r\n// pulic functions\r\n\r\n/**\r\n * Start clustering\r\n *\r\n * @param {Array} dataset\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nOPTICS.prototype.run = function(dataset, epsilon, minPts, distanceFunction) {\r\n  this._init(dataset, epsilon, minPts, distanceFunction);\r\n\r\n  for (var pointId = 0, l = this.dataset.length; pointId < l; pointId++) {\r\n    if (this._processed[pointId] !== 1) {\r\n      this._processed[pointId] = 1;\r\n      this.clusters.push([pointId]);\r\n      var clusterId = this.clusters.length - 1;\r\n\r\n      this._orderedList.push(pointId);\r\n      var priorityQueue = new PriorityQueue(null, null, 'asc');\r\n      var neighbors = this._regionQuery(pointId);\r\n\r\n      // using priority queue assign elements to new cluster\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, priorityQueue);\r\n        this._expandCluster(clusterId, priorityQueue);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this.clusters;\r\n};\r\n\r\n/**\r\n * Generate reachability plot for all points\r\n *\r\n * @returns {array}\r\n * @access public\r\n */\r\nOPTICS.prototype.getReachabilityPlot = function() {\r\n  var reachabilityPlot = [];\r\n\r\n  for (var i = 0, l = this._orderedList.length; i < l; i++) {\r\n    var pointId = this._orderedList[i];\r\n    var distance = this._reachability[pointId];\r\n\r\n    reachabilityPlot.push([pointId, distance]);\r\n  }\r\n\r\n  return reachabilityPlot;\r\n};\r\n\r\n/******************************************************************************/\r\n// protected functions\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} dataset\r\n * @param {number} epsilon\r\n * @param {number} minPts\r\n * @param {function} distance\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._init = function(dataset, epsilon, minPts, distance) {\r\n\r\n  if (dataset) {\r\n\r\n    if (!(dataset instanceof Array)) {\r\n      throw Error('Dataset must be of type array, ' +\r\n        typeof dataset + ' given');\r\n    }\r\n\r\n    this.dataset = dataset;\r\n    this.clusters = [];\r\n    this._reachability = new Array(this.dataset.length);\r\n    this._processed = new Array(this.dataset.length);\r\n    this._coreDistance = 0;\r\n    this._orderedList = [];\r\n  }\r\n\r\n  if (epsilon) {\r\n    this.epsilon = epsilon;\r\n  }\r\n\r\n  if (minPts) {\r\n    this.minPts = minPts;\r\n  }\r\n\r\n  if (distance) {\r\n    this.distance = distance;\r\n  }\r\n};\r\n\r\n/**\r\n * Update information in queue\r\n *\r\n * @param {number} pointId\r\n * @param {Array} neighbors\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._updateQueue = function(pointId, neighbors, queue) {\r\n  var self = this;\r\n\r\n  this._coreDistance = this._distanceToCore(pointId);\r\n  neighbors.forEach(function(pointId2) {\r\n    if (self._processed[pointId2] === undefined) {\r\n      var dist = self.distance(self.dataset[pointId], self.dataset[pointId2]);\r\n      var newReachableDistance = Math.max(self._coreDistance, dist);\r\n\r\n      if (self._reachability[pointId2] === undefined) {\r\n        self._reachability[pointId2] = newReachableDistance;\r\n        queue.insert(pointId2, newReachableDistance);\r\n      } else {\r\n        if (newReachableDistance < self._reachability[pointId2]) {\r\n          self._reachability[pointId2] = newReachableDistance;\r\n          queue.remove(pointId2);\r\n          queue.insert(pointId2, newReachableDistance);\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Expand cluster\r\n *\r\n * @param {number} clusterId\r\n * @param {PriorityQueue} queue\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nOPTICS.prototype._expandCluster = function(clusterId, queue) {\r\n  var queueElements = queue.getElements();\r\n\r\n  for (var p = 0, l = queueElements.length; p < l; p++) {\r\n    var pointId = queueElements[p];\r\n    if (this._processed[pointId] === undefined) {\r\n      var neighbors = this._regionQuery(pointId);\r\n      this._processed[pointId] = 1;\r\n\r\n      this.clusters[clusterId].push(pointId);\r\n      this._orderedList.push(pointId);\r\n\r\n      if (this._distanceToCore(pointId) !== undefined) {\r\n        this._updateQueue(pointId, neighbors, queue);\r\n        this._expandCluster(clusterId, queue);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Calculating distance to cluster core\r\n *\r\n * @param {number} pointId\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._distanceToCore = function(pointId) {\r\n  var l = this.epsilon;\r\n  for (var coreDistCand = 0; coreDistCand < l; coreDistCand++) {\r\n    var neighbors = this._regionQuery(pointId, coreDistCand);\r\n    if (neighbors.length >= this.minPts) {\r\n      return coreDistCand;\r\n    }\r\n  }\r\n\r\n  return;\r\n};\r\n\r\n/**\r\n * Find all neighbors around given point\r\n *\r\n * @param {number} pointId\r\n * @param {number} epsilon\r\n * @returns {Array}\r\n * @access protected\r\n */\r\nOPTICS.prototype._regionQuery = function(pointId, epsilon) {\r\n  epsilon = epsilon || this.epsilon;\r\n  var neighbors = [];\r\n\r\n  for (var id = 0, l = this.dataset.length; id < l; id++) {\r\n    if (this.distance(this.dataset[pointId], this.dataset[id]) < epsilon) {\r\n      neighbors.push(id);\r\n    }\r\n  }\r\n\r\n  return neighbors;\r\n};\r\n\r\n/******************************************************************************/\r\n// helpers\r\n\r\n/**\r\n * Calculate euclidean distance in multidimensional space\r\n *\r\n * @param {Array} p\r\n * @param {Array} q\r\n * @returns {number}\r\n * @access protected\r\n */\r\nOPTICS.prototype._euclideanDistance = function(p, q) {\r\n  var sum = 0;\r\n  var i = Math.min(p.length, q.length);\r\n\r\n  while (i--) {\r\n    sum += (p[i] - q[i]) * (p[i] - q[i]);\r\n  }\r\n\r\n  return Math.sqrt(sum);\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = OPTICS;\r\n}\r\n","/**\r\n * PriorityQueue\r\n * Elements in this queue are sorted according to their value\r\n *\r\n * @author Lukasz Krawczyk <contact@lukaszkrawczyk.eu>\r\n * @copyright MIT\r\n */\r\n\r\n/**\r\n * PriorityQueue class construcotr\r\n * @constructor\r\n *\r\n * @example\r\n * queue: [1,2,3,4]\r\n * priorities: [4,1,2,3]\r\n * > result = [1,4,2,3]\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @param {string} sorting - asc / desc\r\n * @returns {PriorityQueue}\r\n */\r\nfunction PriorityQueue(elements, priorities, sorting) {\r\n  /** @type {Array} */\r\n  this._queue = [];\r\n  /** @type {Array} */\r\n  this._priorities = [];\r\n  /** @type {string} */\r\n  this._sorting = 'desc';\r\n\r\n  this._init(elements, priorities, sorting);\r\n};\r\n\r\n/**\r\n * Insert element\r\n *\r\n * @param {Object} ele\r\n * @param {Object} priority\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.insert = function(ele, priority) {\r\n  var indexToInsert = this._queue.length;\r\n  var index = indexToInsert;\r\n\r\n  while (index--) {\r\n    var priority2 = this._priorities[index];\r\n    if (this._sorting === 'desc') {\r\n      if (priority > priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    } else {\r\n      if (priority < priority2) {\r\n        indexToInsert = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  this._insertAt(ele, priority, indexToInsert);\r\n};\r\n\r\n/**\r\n * Remove element\r\n *\r\n * @param {Object} ele\r\n * @returns {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.remove = function(ele) {\r\n  var index = this._queue.length;\r\n\r\n  while (index--) {\r\n    var ele2 = this._queue[index];\r\n    if (ele === ele2) {\r\n      this._queue.splice(index, 1);\r\n      this._priorities.splice(index, 1);\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For each loop wrapper\r\n *\r\n * @param {function} func\r\n * @returs {undefined}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.forEach = function(func) {\r\n  this._queue.forEach(func);\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElements = function() {\r\n  return this._queue;\r\n};\r\n\r\n/**\r\n * @param {number} index\r\n * @returns {Object}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementPriority = function(index) {\r\n  return this._priorities[index];\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getPriorities = function() {\r\n  return this._priorities;\r\n};\r\n\r\n/**\r\n * @returns {Array}\r\n * @access public\r\n */\r\nPriorityQueue.prototype.getElementsWithPriorities = function() {\r\n  var result = [];\r\n\r\n  for (var i = 0, l = this._queue.length; i < l; i++) {\r\n    result.push([this._queue[i], this._priorities[i]]);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Set object properties\r\n *\r\n * @param {Array} elements\r\n * @param {Array} priorities\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._init = function(elements, priorities, sorting) {\r\n\r\n  if (elements && priorities) {\r\n    this._queue = [];\r\n    this._priorities = [];\r\n\r\n    if (elements.length !== priorities.length) {\r\n      throw new Error('Arrays must have the same length');\r\n    }\r\n\r\n    for (var i = 0; i < elements.length; i++) {\r\n      this.insert(elements[i], priorities[i]);\r\n    }\r\n  }\r\n\r\n  if (sorting) {\r\n    this._sorting = sorting;\r\n  }\r\n};\r\n\r\n/**\r\n * Insert element at given position\r\n *\r\n * @param {Object} ele\r\n * @param {number} index\r\n * @returns {undefined}\r\n * @access protected\r\n */\r\nPriorityQueue.prototype._insertAt = function(ele, priority, index) {\r\n  if (this._queue.length === index) {\r\n    this._queue.push(ele);\r\n    this._priorities.push(priority);\r\n  } else {\r\n    this._queue.splice(index, 0, ele);\r\n    this._priorities.splice(index, 0, priority);\r\n  }\r\n};\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = PriorityQueue;\r\n}\r\n","\nimport KDBush from 'kdbush';\n\nconst defaultOptions = {\n    minZoom: 0,   // min zoom to generate clusters on\n    maxZoom: 16,  // max zoom level to cluster the points on\n    minPoints: 2, // minimum points to form a cluster\n    radius: 40,   // cluster radius in pixels\n    extent: 512,  // tile extent (radius is calculated relative to it)\n    nodeSize: 64, // size of the KD-tree leaf node, affects performance\n    log: false,   // whether to log timing info\n\n    // whether to generate numeric ids for input features (in vector tiles)\n    generateId: false,\n\n    // a reduce function for calculating custom cluster properties\n    reduce: null, // (accumulated, props) => { accumulated.sum += props.sum; }\n\n    // properties to use for individual points when running the reducer\n    map: props => props // props => ({sum: props.my_value})\n};\n\nconst fround = Math.fround || (tmp => ((x) => { tmp[0] = +x; return tmp[0]; }))(new Float32Array(1));\n\nexport default class Supercluster {\n    constructor(options) {\n        this.options = extend(Object.create(defaultOptions), options);\n        this.trees = new Array(this.options.maxZoom + 1);\n    }\n\n    load(points) {\n        const {log, minZoom, maxZoom, nodeSize} = this.options;\n\n        if (log) console.time('total time');\n\n        const timerId = `prepare ${  points.length  } points`;\n        if (log) console.time(timerId);\n\n        this.points = points;\n\n        // generate a cluster object for each point and index input points into a KD-tree\n        let clusters = [];\n        for (let i = 0; i < points.length; i++) {\n            if (!points[i].geometry) continue;\n            clusters.push(createPointCluster(points[i], i));\n        }\n        this.trees[maxZoom + 1] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n        if (log) console.timeEnd(timerId);\n\n        // cluster points on max zoom, then cluster the results on previous zoom, etc.;\n        // results in a cluster hierarchy across zoom levels\n        for (let z = maxZoom; z >= minZoom; z--) {\n            const now = +Date.now();\n\n            // create a new set of clusters for the zoom and index them with a KD-tree\n            clusters = this._cluster(clusters, z);\n            this.trees[z] = new KDBush(clusters, getX, getY, nodeSize, Float32Array);\n\n            if (log) console.log('z%d: %d clusters in %dms', z, clusters.length, +Date.now() - now);\n        }\n\n        if (log) console.timeEnd('total time');\n\n        return this;\n    }\n\n    getClusters(bbox, zoom) {\n        let minLng = ((bbox[0] + 180) % 360 + 360) % 360 - 180;\n        const minLat = Math.max(-90, Math.min(90, bbox[1]));\n        let maxLng = bbox[2] === 180 ? 180 : ((bbox[2] + 180) % 360 + 360) % 360 - 180;\n        const maxLat = Math.max(-90, Math.min(90, bbox[3]));\n\n        if (bbox[2] - bbox[0] >= 360) {\n            minLng = -180;\n            maxLng = 180;\n        } else if (minLng > maxLng) {\n            const easternHem = this.getClusters([minLng, minLat, 180, maxLat], zoom);\n            const westernHem = this.getClusters([-180, minLat, maxLng, maxLat], zoom);\n            return easternHem.concat(westernHem);\n        }\n\n        const tree = this.trees[this._limitZoom(zoom)];\n        const ids = tree.range(lngX(minLng), latY(maxLat), lngX(maxLng), latY(minLat));\n        const clusters = [];\n        for (const id of ids) {\n            const c = tree.points[id];\n            clusters.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n        }\n        return clusters;\n    }\n\n    getChildren(clusterId) {\n        const originId = this._getOriginId(clusterId);\n        const originZoom = this._getOriginZoom(clusterId);\n        const errorMsg = 'No cluster with the specified id.';\n\n        const index = this.trees[originZoom];\n        if (!index) throw new Error(errorMsg);\n\n        const origin = index.points[originId];\n        if (!origin) throw new Error(errorMsg);\n\n        const r = this.options.radius / (this.options.extent * Math.pow(2, originZoom - 1));\n        const ids = index.within(origin.x, origin.y, r);\n        const children = [];\n        for (const id of ids) {\n            const c = index.points[id];\n            if (c.parentId === clusterId) {\n                children.push(c.numPoints ? getClusterJSON(c) : this.points[c.index]);\n            }\n        }\n\n        if (children.length === 0) throw new Error(errorMsg);\n\n        return children;\n    }\n\n    getLeaves(clusterId, limit, offset) {\n        limit = limit || 10;\n        offset = offset || 0;\n\n        const leaves = [];\n        this._appendLeaves(leaves, clusterId, limit, offset, 0);\n\n        return leaves;\n    }\n\n    getTile(z, x, y) {\n        const tree = this.trees[this._limitZoom(z)];\n        const z2 = Math.pow(2, z);\n        const {extent, radius} = this.options;\n        const p = radius / extent;\n        const top = (y - p) / z2;\n        const bottom = (y + 1 + p) / z2;\n\n        const tile = {\n            features: []\n        };\n\n        this._addTileFeatures(\n            tree.range((x - p) / z2, top, (x + 1 + p) / z2, bottom),\n            tree.points, x, y, z2, tile);\n\n        if (x === 0) {\n            this._addTileFeatures(\n                tree.range(1 - p / z2, top, 1, bottom),\n                tree.points, z2, y, z2, tile);\n        }\n        if (x === z2 - 1) {\n            this._addTileFeatures(\n                tree.range(0, top, p / z2, bottom),\n                tree.points, -1, y, z2, tile);\n        }\n\n        return tile.features.length ? tile : null;\n    }\n\n    getClusterExpansionZoom(clusterId) {\n        let expansionZoom = this._getOriginZoom(clusterId) - 1;\n        while (expansionZoom <= this.options.maxZoom) {\n            const children = this.getChildren(clusterId);\n            expansionZoom++;\n            if (children.length !== 1) break;\n            clusterId = children[0].properties.cluster_id;\n        }\n        return expansionZoom;\n    }\n\n    _appendLeaves(result, clusterId, limit, offset, skipped) {\n        const children = this.getChildren(clusterId);\n\n        for (const child of children) {\n            const props = child.properties;\n\n            if (props && props.cluster) {\n                if (skipped + props.point_count <= offset) {\n                    // skip the whole cluster\n                    skipped += props.point_count;\n                } else {\n                    // enter the cluster\n                    skipped = this._appendLeaves(result, props.cluster_id, limit, offset, skipped);\n                    // exit the cluster\n                }\n            } else if (skipped < offset) {\n                // skip a single point\n                skipped++;\n            } else {\n                // add a single point\n                result.push(child);\n            }\n            if (result.length === limit) break;\n        }\n\n        return skipped;\n    }\n\n    _addTileFeatures(ids, points, x, y, z2, tile) {\n        for (const i of ids) {\n            const c = points[i];\n            const isCluster = c.numPoints;\n\n            let tags, px, py;\n            if (isCluster) {\n                tags = getClusterProperties(c);\n                px = c.x;\n                py = c.y;\n            } else {\n                const p = this.points[c.index];\n                tags = p.properties;\n                px = lngX(p.geometry.coordinates[0]);\n                py = latY(p.geometry.coordinates[1]);\n            }\n\n            const f = {\n                type: 1,\n                geometry: [[\n                    Math.round(this.options.extent * (px * z2 - x)),\n                    Math.round(this.options.extent * (py * z2 - y))\n                ]],\n                tags\n            };\n\n            // assign id\n            let id;\n            if (isCluster) {\n                id = c.id;\n            } else if (this.options.generateId) {\n                // optionally generate id\n                id = c.index;\n            } else if (this.points[c.index].id) {\n                // keep id if already assigned\n                id = this.points[c.index].id;\n            }\n\n            if (id !== undefined) f.id = id;\n\n            tile.features.push(f);\n        }\n    }\n\n    _limitZoom(z) {\n        return Math.max(this.options.minZoom, Math.min(+z, this.options.maxZoom + 1));\n    }\n\n    _cluster(points, zoom) {\n        const clusters = [];\n        const {radius, extent, reduce, minPoints} = this.options;\n        const r = radius / (extent * Math.pow(2, zoom));\n\n        // loop through each point\n        for (let i = 0; i < points.length; i++) {\n            const p = points[i];\n            // if we've already visited the point at this zoom level, skip it\n            if (p.zoom <= zoom) continue;\n            p.zoom = zoom;\n\n            // find all nearby points\n            const tree = this.trees[zoom + 1];\n            const neighborIds = tree.within(p.x, p.y, r);\n\n            const numPointsOrigin = p.numPoints || 1;\n            let numPoints = numPointsOrigin;\n\n            // count the number of points in a potential cluster\n            for (const neighborId of neighborIds) {\n                const b = tree.points[neighborId];\n                // filter out neighbors that are already processed\n                if (b.zoom > zoom) numPoints += b.numPoints || 1;\n            }\n\n            // if there were neighbors to merge, and there are enough points to form a cluster\n            if (numPoints > numPointsOrigin && numPoints >= minPoints) {\n                let wx = p.x * numPointsOrigin;\n                let wy = p.y * numPointsOrigin;\n\n                let clusterProperties = reduce && numPointsOrigin > 1 ? this._map(p, true) : null;\n\n                // encode both zoom and point index on which the cluster originated -- offset by total length of features\n                const id = (i << 5) + (zoom + 1) + this.points.length;\n\n                for (const neighborId of neighborIds) {\n                    const b = tree.points[neighborId];\n\n                    if (b.zoom <= zoom) continue;\n                    b.zoom = zoom; // save the zoom (so it doesn't get processed twice)\n\n                    const numPoints2 = b.numPoints || 1;\n                    wx += b.x * numPoints2; // accumulate coordinates for calculating weighted center\n                    wy += b.y * numPoints2;\n\n                    b.parentId = id;\n\n                    if (reduce) {\n                        if (!clusterProperties) clusterProperties = this._map(p, true);\n                        reduce(clusterProperties, this._map(b));\n                    }\n                }\n\n                p.parentId = id;\n                clusters.push(createCluster(wx / numPoints, wy / numPoints, id, numPoints, clusterProperties));\n\n            } else { // left points as unclustered\n                clusters.push(p);\n\n                if (numPoints > 1) {\n                    for (const neighborId of neighborIds) {\n                        const b = tree.points[neighborId];\n                        if (b.zoom <= zoom) continue;\n                        b.zoom = zoom;\n                        clusters.push(b);\n                    }\n                }\n            }\n        }\n\n        return clusters;\n    }\n\n    // get index of the point from which the cluster originated\n    _getOriginId(clusterId) {\n        return (clusterId - this.points.length) >> 5;\n    }\n\n    // get zoom of the point from which the cluster originated\n    _getOriginZoom(clusterId) {\n        return (clusterId - this.points.length) % 32;\n    }\n\n    _map(point, clone) {\n        if (point.numPoints) {\n            return clone ? extend({}, point.properties) : point.properties;\n        }\n        const original = this.points[point.index].properties;\n        const result = this.options.map(original);\n        return clone && result === original ? extend({}, result) : result;\n    }\n}\n\nfunction createCluster(x, y, id, numPoints, properties) {\n    return {\n        x: fround(x), // weighted cluster center; round for consistency with Float32Array index\n        y: fround(y),\n        zoom: Infinity, // the last zoom the cluster was processed at\n        id, // encodes index of the first child of the cluster and its zoom level\n        parentId: -1, // parent cluster id\n        numPoints,\n        properties\n    };\n}\n\nfunction createPointCluster(p, id) {\n    const [x, y] = p.geometry.coordinates;\n    return {\n        x: fround(lngX(x)), // projected point coordinates\n        y: fround(latY(y)),\n        zoom: Infinity, // the last zoom the point was processed at\n        index: id, // index of the source feature in the original input array,\n        parentId: -1 // parent cluster id\n    };\n}\n\nfunction getClusterJSON(cluster) {\n    return {\n        type: 'Feature',\n        id: cluster.id,\n        properties: getClusterProperties(cluster),\n        geometry: {\n            type: 'Point',\n            coordinates: [xLng(cluster.x), yLat(cluster.y)]\n        }\n    };\n}\n\nfunction getClusterProperties(cluster) {\n    const count = cluster.numPoints;\n    const abbrev =\n        count >= 10000 ? `${Math.round(count / 1000)  }k` :\n        count >= 1000 ? `${Math.round(count / 100) / 10  }k` : count;\n    return extend(extend({}, cluster.properties), {\n        cluster: true,\n        cluster_id: cluster.id,\n        point_count: count,\n        point_count_abbreviated: abbrev\n    });\n}\n\n// longitude/latitude to spherical mercator in [0..1] range\nfunction lngX(lng) {\n    return lng / 360 + 0.5;\n}\nfunction latY(lat) {\n    const sin = Math.sin(lat * Math.PI / 180);\n    const y = (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n    return y < 0 ? 0 : y > 1 ? 1 : y;\n}\n\n// spherical mercator to longitude/latitude\nfunction xLng(x) {\n    return (x - 0.5) * 360;\n}\nfunction yLat(y) {\n    const y2 = (180 - y * 360) * Math.PI / 180;\n    return 360 * Math.atan(Math.exp(y2)) / Math.PI - 90;\n}\n\nfunction extend(dest, src) {\n    for (const id in src) dest[id] = src[id];\n    return dest;\n}\n\nfunction getX(p) {\n    return p.x;\n}\nfunction getY(p) {\n    return p.y;\n}\n","\nimport sort from './sort';\nimport range from './range';\nimport within from './within';\n\nconst defaultGetX = p => p[0];\nconst defaultGetY = p => p[1];\n\nexport default class KDBush {\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\n        this.nodeSize = nodeSize;\n        this.points = points;\n\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n\n        const ids = this.ids = new IndexArrayType(points.length);\n        const coords = this.coords = new ArrayType(points.length * 2);\n\n        for (let i = 0; i < points.length; i++) {\n            ids[i] = i;\n            coords[2 * i] = getX(points[i]);\n            coords[2 * i + 1] = getY(points[i]);\n        }\n\n        sort(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    }\n\n    range(minX, minY, maxX, maxY) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    }\n\n    within(x, y, r) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    }\n}\n","\nexport default function sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1;\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        const t = coords[2 * k + inc];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) i++;\n            while (coords[2 * j + inc] > t) j--;\n        }\n\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    let x, y;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n","\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    const r2 = r * r;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","var google = window.google;\nexport {google};","import {Component} from \"../core\";\nimport {getParam, objClosure, eventClosure} from \"../utils\";\n\nimport {es} from '../../dependencies/es'\n\nexport class ORTermSelector extends Component {\n    constructor(params) {\n        super(params);\n\n        // field upon which to build the selector\n        this.field = getParam(params, \"field\");\n\n        // whether the facet should be displayed at all (e.g. you may just want the data for a callback)\n        this.active = getParam(params, \"active\", true);\n\n        // whether this component updates itself on every request, or whether it is static\n        // throughout its lifecycle.  One of \"update\" or \"static\"\n        this.lifecycle = getParam(params, \"lifecycle\", \"static\");\n\n        // if the update type is \"update\", then how should this component update the facet values\n        // * mergeInitial - always keep the initial list in the original order, and merge the bucket counts onto the correct terms\n        // * fresh - just use the values in the most recent aggregation, ignoring the initial values\n        this.updateType = getParam(params, \"updateType\", \"mergeInitial\");\n\n        // which ordering to use term/count and asc/desc\n        this.orderBy = getParam(params, \"orderBy\", \"term\");\n        this.orderDir = getParam(params, \"orderDir\", \"asc\");\n\n        // number of results that we should display - remember that this will only\n        // be used once, so should be large enough to gather all the values that might\n        // be in the index\n        this.size = getParam(params, \"size\", 10);\n\n        // provide a map of values for terms to displayable terms, or a function\n        // which can be used to translate terms to displyable values\n        this.valueMap = getParam(params, \"valueMap\", false);\n        this.valueFunction = getParam(params, \"valueFunction\", false);\n\n        // should we try to synchronise the term counts from an equivalent aggregation on the\n        // primary query?  You can turn this off if you aren't displaying counts or otherwise\n        // modifying the display based on the counts\n        this.syncCounts = getParam(params, \"syncCounts\", true);\n\n        //////////////////////////////////////////\n        // properties used to store internal state\n\n        // a place to store the raw result from the last query made for data\n        this.latestQuery = false;\n        this.latestResult = false;\n\n        // an explicit list of terms to be displayed.  If this is not passed in, then a query\n        // will be issues which will populate this with the values\n        // of the form\n        // [{term: \"<value>\", display: \"<display value>\", count: <number of records>}]\n        this.terms = getParam(params, \"terms\", false);\n\n        // values of terms that have been selected from this.terms\n        // this is just a plain list of the values\n        this.selected = [];\n\n        // is the object currently updating itself\n        this.updating = false;\n\n        this.reQueryAfterListAll = false;\n    }\n\n    init(edge) {\n        // first kick the request up to the superclass\n        super.init(edge);\n\n        // now trigger a request for the terms to present, if not explicitly provided\n        if (!this.terms) {\n            if (this.edge.openingQuery || this.edge.urlQuery) {\n                this.reQueryAfterListAll = true;\n            }\n            this.listAll();\n        }\n    };\n\n    synchronise() {\n        // reset the internal properties\n        this.selected = [];\n\n        // extract all the filter values that pertain to this selector\n        if (this.edge.currentQuery) {\n            var filters = this.edge.currentQuery.listMust(new es.TermsFilter({field: this.field}));\n            for (var i = 0; i < filters.length; i++) {\n                for (var j = 0; j < filters[i].values.length; j++) {\n                    var val = filters[i].values[j];\n                    this.selected.push(val);\n                }\n            }\n        }\n\n        if (this.syncCounts && this.edge.result && this.terms) {\n            this._synchroniseTerms({result: this.edge.result});\n        }\n    };\n\n    _synchroniseTermsMergeInitial(params) {\n        var result = params.result;\n\n        // mesh the terms in the aggregation with the terms in the terms list\n        var buckets = result.buckets(this.id);\n\n        for (var i = 0; i < this.terms.length; i++) {\n            var t = this.terms[i];\n            var found = false;\n            for (var j = 0; j < buckets.length; j++) {\n                var b = buckets[j];\n                if (t.term === b.key) {\n                    t.count = b.doc_count;\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                t.count = 0;\n            }\n        }\n    };\n\n    _synchroniseTerms(params) {\n        if (this.updateType === \"mergeInitial\") {\n            this._synchroniseTermsMergeInitial(params);\n        } else {\n            this._synchroniseTermsFresh(params);\n        }\n    };\n\n    _synchroniseTermsFresh(params) {\n        var result = params.result;\n\n        this.terms = [];\n        var buckets = result.buckets(this.id);\n        for (var i = 0; i < buckets.length; i++) {\n            var bucket = buckets[i];\n            this.terms.push({term: bucket.key, display: this._translate(bucket.key), count: bucket.doc_count});\n        }\n    };\n\n    /////////////////////////////////////////////////\n    // query handlers for getting the full list of terms to display\n\n    listAll = function() {\n        // to list all possible terms, build off the base query\n        var bq = this.edge.cloneBaseQuery();\n        bq.clearAggregations();\n        bq.size = 0;\n\n        // now add the aggregation that we want\n        var params = {\n            name: this.id,\n            field: this.field,\n            orderBy: this.orderBy,\n            orderDir: this.orderDir,\n            size: this.size\n        };\n        bq.addAggregation(\n            new es.TermsAggregation(params)\n        );\n\n        this.latestQuery = bq;\n\n        // issue the query to elasticsearch\n        this.edge.queryAdapter.doQuery({\n            edge: this.edge,\n            query: bq,\n            success: objClosure(this, \"listAllQuerySuccess\", [\"result\"]),\n            error: objClosure(this, \"listAllQueryFail\")\n        });\n    };\n\n    listAllQuerySuccess(params) {\n        var result = params.result;\n        this.latestResult = result;\n\n        // get the terms out of the aggregation\n        this.terms = [];\n        var buckets = result.buckets(this.id);\n        for (var i = 0; i < buckets.length; i++) {\n            var bucket = buckets[i];\n            this.terms.push({term: bucket.key, display: this._translate(bucket.key), count: bucket.doc_count});\n        }\n\n        // allow the event handler to be set up\n        this.setupEvent();\n\n        // in case there's a race between this and another update operation, subsequently synchronise\n        this.synchronise();\n\n        if (this.reQueryAfterListAll) {\n            this.doUpdate();\n        } else {\n            // since this happens asynchronously, we may want to draw\n            this.draw();\n        }\n    };\n\n    listAllQueryFail() {\n        this.terms = [];\n    };\n\n    setupEvent() {\n        if (this.lifecycle === \"update\") {\n            this.edge.context.on(\"edges:pre-query\", eventClosure(this, \"doUpdate\"));\n            // we used to do this, but no need, as when the query cycles, the event handler set above will run it anyway\n            // this.doUpdate();\n        }\n    };\n\n    doUpdate = function() {\n        // is an update already happening?\n        if (this.updating) {\n            return\n        }\n        this.udpating = true;\n\n        // to list all current terms, build off the current query\n        var bq = this.edge.cloneQuery();\n\n        // remove any constraint on this field, and clear the aggregations and set size to 0 for performance\n        bq.removeMust(new es.TermsFilter({field: this.field}));\n        bq.clearAggregations();\n        bq.size = 0;\n\n        // now add the aggregation that we want\n        var params = {\n            name: this.id,\n            field: this.field,\n            orderBy: this.orderBy,\n            orderDir: this.orderDir,\n            size: this.size\n        };\n        bq.addAggregation(\n            new es.TermsAggregation(params)\n        );\n\n        this.latestQuery = bq;\n\n        // issue the query to elasticsearch\n        this.edge.queryAdapter.doQuery({\n            edge: this.edge,\n            query: bq,\n            success: objClosure(this, \"doUpdateQuerySuccess\", [\"result\"]),\n            error: objClosure(this, \"doUpdateQueryFail\")\n        });\n    };\n\n    doUpdateQuerySuccess(params) {\n        var result = params.result;\n        this.latestResult = result;\n\n        this._synchroniseTerms({result: result});\n\n        // turn off the update flag\n        this.updating = false;\n\n        // since this happens asynchronously, we may want to draw\n        this.draw();\n    };\n\n    doUpdateQueryFail() {\n        // just do nothing, hopefully the next request will be successful\n        this.updating = false;\n    };\n\n    ///////////////////////////////////////////\n    // state change functions\n\n    selectTerms(params) {\n        var terms = params.terms;\n        var clearOthers = getParam(params, \"clearOthers\", false);\n\n        var nq = this.edge.cloneQuery();\n\n        // first find out if there was a terms filter already in place\n        var filters = nq.listMust(new es.TermsFilter({field: this.field}));\n\n        // if there is, just add the term to it\n        if (filters.length > 0) {\n            var filter = filters[0];\n            if (clearOthers) {\n                filter.clear_terms();\n            }\n\n            var hadTermAlready = 0;\n            for (var i = 0; i < terms.length; i++) {\n                var term = terms[i];\n                if (filter.has_term(term)) {\n                    hadTermAlready++;\n                } else {\n                    filter.add_term(term);\n                }\n            }\n\n            // if all we did was remove terms that we're then going to re-add, just do nothing\n            if (filter.has_terms() && hadTermAlready === terms.length) {\n                return false;\n            } else if (!filter.has_terms()) {\n                nq.removeMust(new es.TermsFilter({field: this.field}));\n            }\n        } else {\n            // otherwise, set the Terms Filter\n            nq.addMust(new es.TermsFilter({\n                field: this.field,\n                values: terms\n            }));\n        }\n\n        // reset the search page to the start and then trigger the next query\n        nq.from = 0;\n        this.edge.pushQuery(nq);\n        this.edge.cycle();\n\n        return true;\n    };\n\n    selectTerm(term) {\n        return this.selectTerms({terms : [term]});\n    };\n\n    removeFilter(term) {\n        var nq = this.edge.cloneQuery();\n\n        // first find out if there was a terms filter already in place\n        var filters = nq.listMust(new es.TermsFilter({field: this.field}));\n\n        if (filters.length > 0) {\n            var filter = filters[0];\n            if (filter.has_term(term)) {\n                filter.remove_term(term);\n            }\n            if (!filter.has_terms()) {\n                nq.removeMust(new es.TermsFilter({field: this.field}));\n            }\n        }\n\n        // reset the search page to the start and then trigger the next query\n        nq.from = 0;\n        this.edge.pushQuery(nq);\n        this.edge.cycle();\n    };\n\n    clearFilters(params) {\n        var triggerQuery = getParam(params, \"triggerQuery\", true);\n\n        if (this.selected.length > 0) {\n            var nq = this.edge.cloneQuery();\n            nq.removeMust(new es.TermsFilter({\n                field: this.field\n            }));\n            this.edge.pushQuery(nq);\n        }\n        if (triggerQuery) {\n            this.edge.cycle();\n        }\n    };\n\n    //////////////////////////////////////////\n    // \"private\" functions for internal use\n\n    _translate = function(term) {\n        if (this.valueMap) {\n            if (term in this.valueMap) {\n                return this.valueMap[term];\n            }\n        } else if (this.valueFunction) {\n            return this.valueFunction(term);\n        }\n        return term;\n    };\n}","import {Renderer} from \"../../core\";\nimport {htmlID, styleClasses, safeId, escapeHtml, getParam, idSelector, jsClassSelector, on, allClasses} from \"../../utils\";\n\nexport class CheckboxORTermSelector extends Renderer {\n    constructor (params) {\n        super();\n\n        this.title = getParam(params, \"title\", \"Select\");\n\n        // whether the facet should be open or closed\n        // can be initialised and is then used to track internal state\n        this.open = getParam(params, \"open\", false);\n\n        this.togglable = getParam(params, \"togglable\", true);\n\n        // whether the count should be displayed along with the term\n        // defaults to false because count may be confusing to the user in an OR selector\n        this.showCount = getParam(params, \"showCount\", false);\n\n        this.countFormat = getParam(params, \"countFormat\", false);\n\n        // whether counts of 0 should prevent the value being rendered\n        this.hideEmpty = getParam(params, \"hideEmpty\", false);\n\n        this.openIcon = getParam(params, \"openIcon\", \"glyphicon glyphicon-plus\");\n\n        this.closeIcon = getParam(params, \"closeIcon\", \"glyphicon glyphicon-minus\");\n\n        // don't display the facet at all if there is no data to display\n        this.hideIfNoData = getParam(params, \"hideIfNoData\", true);\n\n        this.layout = getParam(params, \"layout\", \"left\");\n\n        // namespace to use in the page\n        this.namespace = \"edges-bs3-checkboxortermselector\";\n    }\n    draw() {\n        // for convenient short references ...\n        var ts = this.component;\n        var namespace = this.namespace;\n\n        if (this.hideIfNoData && ts.edge.result && ts.terms.length === 0) {\n            this.component.context.html(\"\");\n            return;\n        }\n\n        // sort out all the classes that we're going to be using\n        var countClass = styleClasses(namespace, \"count\", this);\n        var checkboxClass = allClasses(namespace, \"selector\", this);\n        var facetClass = styleClasses(namespace, \"facet\", this);\n        var headerClass = styleClasses(namespace, \"header\", this);\n        var bodyClass = styleClasses(namespace, \"body\", this);\n        var listClass = styleClasses(namespace, \"list\", this);\n        let labelClass = styleClasses(namespace, \"label\", this);\n\n        var toggleId = htmlID(namespace, \"toggle\", this);\n        var resultsId = htmlID(namespace, \"results\", this);\n\n        // this is what's displayed in the body if there are no results or the page is loading\n        var results = \"<li class='loading'>Loading choices...</li>\";\n        if (ts.edge.result) {\n            results = \"<li>No data to show</li>\";\n        }\n\n        // if we want the active filters, render them\n        var filterFrag = \"\";\n        if (ts.selected.length > 0) {\n            var resultClass = styleClasses(namespace, \"result\", this);\n            for (var i = 0; i < ts.selected.length; i++) {\n                var filt = ts.selected[i];\n                var def = this._getFilterDef(filt);\n                if (def) {\n                    var display = this.component._translate(filt);\n                    let id = safeId(filt);\n                    var count = \"\";\n                    if (this.showCount) {\n                        let cv = def.count;\n                        if (this.countFormat) {\n                            cv = this.countFormat(cv);\n                        }\n                        count = ' <span class=\"' + countClass + '\">(' + cv + ')</span>';\n                    }\n                    filterFrag += '<li>\\\n                        <input class=\"' + checkboxClass + '\" data-key=\"' + escapeHtml(filt) + '\" id=\"' + id + '\" type=\"checkbox\" name=\"' + id + '\" checked=\"checked\">\\\n                        <label for=\"' + id + '\" class=\"' + labelClass + '\">' + escapeHtml(display) + count + '</label>\\\n                    </li>';\n                }\n            }\n        }\n\n        // render a list of the values\n        if (ts.terms.length > 0) {\n            results = \"\";\n\n            for (var i = 0; i < ts.terms.length; i++) {\n                var val = ts.terms[i];\n                if (val.count === 0 && this.hideEmpty) {\n                    continue\n                }\n\n                var active = $.inArray(val.term.toString(), ts.selected) > -1;\n                var checked = \"\";\n                if (active) {\n                    continue;\n                }\n                var count = \"\";\n                if (this.showCount) {\n                    count = ' <span class=\"' + countClass + '\">(' + val.count + ')</span>';\n                }\n                var id = safeId(val.term);\n                results += '<li>\\\n                    <input class=\"' + checkboxClass + '\" data-key=\"' + escapeHtml(val.term) + '\" id=\"' + id + '\" type=\"checkbox\" name=\"' + id + '\"' + checked + '>\\\n                    <label for=\"' + id + '\" class=\"' + labelClass + '\">' + escapeHtml(val.display) + count + '</label>\\\n                </li>';\n            }\n        }\n\n        var header = this.headerLayout({toggleId: toggleId});\n\n        // render the overall facet\n        var frag = `<div class=\"${facetClass}\">\n                <div class=\"${headerClass}\"><div class=\"row\">\n                    <div class=\"col-md-12\">\n                        ${header}\n                    </div>\n                </div></div>\n                <div class=\"${bodyClass}\">\n                    <div class=\"row\" style=\"display:none\" id=\"${resultsId}\">\n                        <div class=\"col-md-12\">\n                            <ul class=\"${listClass}\">{{FILTERS}}</ul>\n                        </div>\\\n                    </div>\\\n                </div>\\\n                </div></div>`;\n\n        // substitute in the component parts\n        frag = frag.replace(/{{FILTERS}}/g, filterFrag + results);\n\n        // now render it into the page\n        ts.context.html(frag);\n\n        // trigger all the post-render set-up functions\n        this.setUIOpen();\n\n        var checkboxSelector = jsClassSelector(namespace, \"selector\", this);\n        on(checkboxSelector, \"change\", this, \"filterToggle\");\n\n        var toggleSelector = idSelector(namespace, \"toggle\", this);\n        on(toggleSelector, \"click\", this, \"toggleOpen\");\n\n    }\n\n    headerLayout(params) {\n        var toggleId = params.toggleId;\n        var iconClass = styleClasses(this.namespace, \"icon\", this);\n\n        if (this.layout === \"left\") {\n            var tog = this.title;\n            if (this.togglable) {\n                tog = '<a href=\"#\" id=\"' + toggleId + '\"><i class=\"' + this.openIcon + '\"></i>&nbsp;' + tog + \"</a>\";\n            }\n            return tog;\n        } else if (this.layout === \"right\") {\n            var tog = \"\";\n            if (this.togglable) {\n                tog = '<a href=\"#\" id=\"' + toggleId + '\">' + this.title + '&nbsp;<i class=\"' + this.openIcon + ' ' + iconClass + '\"></i></a>';\n            } else {\n                tog = this.title;\n            }\n\n            return tog;\n        }\n    }\n\n    setUIOpen() {\n        // the selectors that we're going to use\n        var resultsSelector = idSelector(this.namespace, \"results\", this);\n        var toggleSelector = idSelector(this.namespace, \"toggle\", this);\n\n        var results = this.component.jq(resultsSelector);\n        var toggle = this.component.jq(toggleSelector);\n\n        var openBits = this.openIcon.split(\" \");\n        var closeBits = this.closeIcon.split(\" \");\n\n        if (this.open) {\n            var i = toggle.find(\"i\");\n            for (var j = 0; j < openBits.length; j++) {\n                i.removeClass(openBits[j]);\n            }\n            for (var j = 0; j < closeBits.length; j++) {\n                i.addClass(closeBits[j]);\n            }\n            results.show();\n        } else {\n            var i = toggle.find(\"i\");\n            for (var j = 0; j < closeBits.length; j++) {\n                i.removeClass(closeBits[j]);\n            }\n            for (var j = 0; j < openBits.length; j++) {\n                i.addClass(openBits[j]);\n            }\n            results.hide();\n        }\n    }\n\n    filterToggle(element) {\n        var term = this.component.jq(element).attr(\"data-key\");\n        var checked = this.component.jq(element).is(\":checked\");\n        if (checked) {\n            this.component.selectTerm(term);\n        } else {\n            this.component.removeFilter(term);\n        }\n    }\n\n    toggleOpen(element) {\n        this.open = !this.open;\n        this.setUIOpen();\n    }\n\n    _getFilterDef(term) {\n        for (var i = 0; i < this.component.terms.length; i++) {\n            var t = this.component.terms[i];\n            if (term === t.term) {\n                return t;\n            }\n        }\n        return false;\n    }\n}","import {Renderer} from \"../../core\";\nimport {htmlID, styleClasses, safeId, escapeHtml, getParam, idSelector, jsClassSelector, on, allClasses} from \"../../utils\";\n\nexport class FixedSelectionCheckboxORTermSelector extends Renderer {\n    constructor (params) {\n        super();\n\n        this.title = getParam(params, \"title\", \"Select\");\n\n        // whether the facet should be open or closed\n        // can be initialised and is then used to track internal state\n        this.open = getParam(params, \"open\", false);\n\n        this.togglable = getParam(params, \"togglable\", true);\n\n        // whether the count should be displayed along with the term\n        // defaults to false because count may be confusing to the user in an OR selector\n        this.showCount = getParam(params, \"showCount\", false);\n\n        this.countFormat = getParam(params, \"countFormat\", false);\n\n        this.fixedTerms = getParam(params, \"fixedTerms\", []);\n\n        this.openIcon = getParam(params, \"openIcon\", \"glyphicon glyphicon-plus\");\n\n        this.closeIcon = getParam(params, \"closeIcon\", \"glyphicon glyphicon-minus\");\n\n        // don't display the facet at all if there is no data to display\n        this.hideIfNoData = getParam(params, \"hideIfNoData\", true);\n\n        this.layout = getParam(params, \"layout\", \"left\");\n\n        // namespace to use in the page\n        this.namespace = \"edges-bs3-fixedselectioncheckboxortermselector\";\n    }\n\n    draw() {\n        // for convenient short references ...\n        var ts = this.component;\n        var namespace = this.namespace;\n\n        if (this.hideIfNoData && ts.edge.result && ts.terms.length === 0) {\n            this.component.context.html(\"\");\n            return;\n        }\n\n        // sort out all the classes that we're going to be using\n        var countClass = styleClasses(namespace, \"count\", this);\n        var checkboxClass = allClasses(namespace, \"selector\", this);\n        var facetClass = styleClasses(namespace, \"facet\", this);\n        var headerClass = styleClasses(namespace, \"header\", this);\n        var bodyClass = styleClasses(namespace, \"body\", this);\n        var listClass = styleClasses(namespace, \"list\", this);\n        let labelClass = styleClasses(namespace, \"label\", this);\n\n        var toggleId = htmlID(namespace, \"toggle\", this);\n        var resultsId = htmlID(namespace, \"results\", this);\n\n        let results = \"\";\n        for (let i = 0; i < this.fixedTerms.length; i++) {\n            let ft = this.fixedTerms[i];\n            for (let j = 0; j < ts.terms.length; j++) {\n                let val = ts.terms[j];\n                if (val.term === ft) {\n                    let active = $.inArray(val.term.toString(), ts.selected) > -1;\n                    let checked = \"\";\n                    if (active) {\n                        checked = ` checked=\"checked\" `;\n                    }\n                    let count = \"\";\n                    if (this.showCount) {\n                        count = ' <span class=\"' + countClass + '\">(' + this._formatCount(val.count) + ')</span>';\n                    }\n                    var id = safeId(val.term);\n                    results += '<li>\\\n                        <input class=\"' + checkboxClass + '\" data-key=\"' + escapeHtml(val.term) + '\" id=\"' + id + '\" type=\"checkbox\" name=\"' + id + '\"' + checked + '>\\\n                        <label for=\"' + id + '\" class=\"' + labelClass + '\">' + escapeHtml(val.display) + count + '</label>\\\n                    </li>';\n                }\n            }\n        }\n\n        // this is what's displayed in the body if there are no results or the page is loading\n        if (results === \"\") {\n            if (ts.edge.result) {\n                results = \"<li>No data to show</li>\";\n            } else {\n                results = \"<li class='loading'>Loading choices...</li>\";\n            }\n        }\n\n        var header = this.headerLayout({toggleId: toggleId});\n\n        // render the overall facet\n        var frag = `<div class=\"${facetClass}\">\n                <div class=\"${headerClass}\"><div class=\"row\">\n                    <div class=\"col-md-12\">\n                        ${header}\n                    </div>\n                </div></div>\n                <div class=\"${bodyClass}\">\n                    <div class=\"row\" style=\"display:none\" id=\"${resultsId}\">\n                        <div class=\"col-md-12\">\n                            <ul class=\"${listClass}\">{{FILTERS}}</ul>\n                        </div>\\\n                    </div>\\\n                </div>\\\n                </div></div>`;\n\n        // substitute in the component parts\n        frag = frag.replace(/{{FILTERS}}/g, results);\n\n        // now render it into the page\n        ts.context.html(frag);\n\n        // trigger all the post-render set-up functions\n        this.setUIOpen();\n\n        var checkboxSelector = jsClassSelector(namespace, \"selector\", this);\n        on(checkboxSelector, \"change\", this, \"filterToggle\");\n\n        var toggleSelector = idSelector(namespace, \"toggle\", this);\n        on(toggleSelector, \"click\", this, \"toggleOpen\");\n\n    }\n\n    _formatCount(count) {\n        if (this.countFormat) {\n            return this.countFormat(count);\n        }\n        return count;\n    }\n\n    headerLayout(params) {\n        var toggleId = params.toggleId;\n        var iconClass = styleClasses(this.namespace, \"icon\", this);\n\n        if (this.layout === \"left\") {\n            var tog = this.title;\n            if (this.togglable) {\n                tog = '<a href=\"#\" id=\"' + toggleId + '\"><i class=\"' + this.openIcon + '\"></i>&nbsp;' + tog + \"</a>\";\n            }\n            return tog;\n        } else if (this.layout === \"right\") {\n            var tog = \"\";\n            if (this.togglable) {\n                tog = '<a href=\"#\" id=\"' + toggleId + '\">' + this.title + '&nbsp;<i class=\"' + this.openIcon + ' ' + iconClass + '\"></i></a>';\n            } else {\n                tog = this.title;\n            }\n\n            return tog;\n        }\n    }\n\n    setUIOpen() {\n        // the selectors that we're going to use\n        var resultsSelector = idSelector(this.namespace, \"results\", this);\n        var toggleSelector = idSelector(this.namespace, \"toggle\", this);\n\n        var results = this.component.jq(resultsSelector);\n        var toggle = this.component.jq(toggleSelector);\n\n        var openBits = this.openIcon.split(\" \");\n        var closeBits = this.closeIcon.split(\" \");\n\n        if (this.open) {\n            var i = toggle.find(\"i\");\n            for (var j = 0; j < openBits.length; j++) {\n                i.removeClass(openBits[j]);\n            }\n            for (var j = 0; j < closeBits.length; j++) {\n                i.addClass(closeBits[j]);\n            }\n            results.show();\n        } else {\n            var i = toggle.find(\"i\");\n            for (var j = 0; j < closeBits.length; j++) {\n                i.removeClass(closeBits[j]);\n            }\n            for (var j = 0; j < openBits.length; j++) {\n                i.addClass(openBits[j]);\n            }\n            results.hide();\n        }\n    }\n\n    filterToggle(element) {\n        var term = this.component.jq(element).attr(\"data-key\");\n        var checked = this.component.jq(element).is(\":checked\");\n        if (checked) {\n            this.component.selectTerm(term);\n        } else {\n            this.component.removeFilter(term);\n        }\n    }\n\n    toggleOpen(element) {\n        this.open = !this.open;\n        this.setUIOpen();\n    }\n}","import {nv} from \"../../../dependencies/nvd3\"\nimport {d3} from \"../../../dependencies/d3\"\n\nimport {Renderer} from \"../../core\";\nimport {getParam, htmlID, idSelector, styleClasses} from \"../../utils\";\nimport {hasData, wrapLabels} from \"./nvd3utils\";\n\nexport class HorizontalMultibarRenderer extends Renderer {\n    constructor(params) {\n        super(params);\n\n        this.title = getParam(params, \"title\", false);\n\n        this.showValues = getParam(params, \"showValues\", true);\n        this.toolTips = getParam(params, \"toolTips\", true);\n        this.controls = getParam(params, \"controls\", false);\n        this.stacked = getParam(params, \"stacked\", false);\n        this.legend = getParam(params, \"legend\", true);\n\n        this.color = getParam(params, \"color\", false);\n        this.barColor = getParam(params, \"barColor\", false);\n        this.noDataMessage = getParam(params, \"noDataMessage\", false);\n\n        this.transitionDuration = getParam(params, \"transitionDuration\", 500);\n\n        this.marginTop = getParam(params, \"marginTop\", 30);\n        this.marginRight = getParam(params, \"marginRight\", 50);\n        this.marginBottom = getParam(params, \"marginBottom\", 50);\n        this.marginLeft = getParam(params, \"marginLeft\", 200);\n\n        this.yTickFormat = getParam(params, \"yTickFormat\", \",.0f\");\n        this.xTickFormat = getParam(params, \"xTickFormat\", false);\n        this.valueFormat = getParam(params, \"valueFormat\", false);\n        \n        this.showXAxis = getParam(params, \"showXAxis\", true);\n        this.showYAxis - getParam(params, \"showYAxes\", true);\n        this.xAxisLabel = getParam(params, \"xAxisLabel\", false);\n        this.yAxisLabel = getParam(params, \"yAxisLabel\", false);\n        this.xAxisLabelWrap = getParam(params, \"xAxisLabelWrap\", false);\n\n        this.tooltipGenerator = getParam(params, \"tooltipGenerator\", false);\n\n        this.dynamicHeight = getParam(params, \"dynamicHeight\", false);\n        this.barHeight = getParam(params, \"barHeight\", 0);\n        this.reserveAbove = getParam(params, \"reserveAbove\", 0);\n        this.reserveBelow = getParam(params, \"reserveBelow\", 0);\n        this.groupSpacing = getParam(params, \"groupSpacing\", false);\n\n        this.hideIfNoData = getParam(params, \"hideIfNoData\", false);\n        this.onHide = getParam(params, \"onHide\", false);\n        this.onShow = getParam(params, \"onShow\", false);\n        this.onUpdate = getParam(params, \"onUpdate\", false);\n\n        this.namespace = \"edges-nvd3-horizontal-multibar\";\n\n        this.draw = function() {\n            // no need for data conversion on this graph type\n\n            // nvd3 tooltips appear outside the div where the actual edge is focussed, and it's possible for those\n            // tooltips to be left behind when the page is redrawn, so we have to hack around that\n            $(\".nvtooltip\").remove();\n\n            var data_series = this.component.dataSeries;\n            if (!data_series) {\n                data_series = [];\n            }\n\n            // now decide if we are going to continue\n            if (this.hideIfNoData) {\n                if (!hasData(data_series)) {\n                    this.component.context.html(\"\");\n                    this.component.context.hide();\n\n                    if (this.onHide) {\n                        this.onHide();\n                    }\n\n                    return;\n                }\n            }\n            this.component.context.show();\n            if (this.onShow) {\n                this.onShow();\n            }\n\n            var customAttributes = \"\";\n            if (this.dynamicHeight) {\n                var seriesCount = 0;\n                for (var i = 0; i < data_series.length; i++) {\n                    var series = data_series[i];\n                    if (series.values.length > seriesCount) {\n                        seriesCount = series.values.length;\n                    }\n                }\n\n                var height = this.reserveAbove + this.reserveBelow + (seriesCount * this.barHeight);\n                customAttributes = 'style=\"height:' + height + 'px\"';\n            }\n\n            var title = \"\";\n            if (this.title !== false) {\n                let titleClass = styleClasses(this.namespace, \"title\", this);\n                title = `<h4 class=\"${titleClass}\">${this.title}</h4>`;\n            }\n\n            var svgId = htmlID(this.namespace, \"svg\", this);\n            var svgSelector = idSelector(this.namespace, \"svg\", this);\n            this.component.context.html(title + '<div ' + customAttributes + '><svg id=\"' + svgId + '\"></svg></div>');\n\n            var that = this;\n            nv.addGraph(function () {\n                var chart = nv.models.multiBarHorizontalChart()\n                    .x(function (d) {\n                        return d.label\n                    })\n                    .y(function (d) {\n                        return d.value\n                    })\n                    .margin({top: that.marginTop, right: that.marginRight, bottom: that.marginBottom, left: that.marginLeft})\n                    .showValues(that.showValues)\n                    .tooltips(that.toolTips)\n                    .showControls(that.controls)\n                    .showLegend(that.legend)\n                    .showXAxis(that.showXAxis)\n                    .showYAxis(that.showYAxis);\n\n                if (that.barColor) {\n                    chart.barColor(that.barColor);\n                }\n\n                if (that.stacked) {\n                    chart.multibar.stacked(that.stacked)\n                }\n\n                if (that.yTickFormat) {\n                    var fn = that.yTickFormat;\n                    if (typeof that.yTickFormat === \"string\") {\n                        fn = d3.format(that.yTickFormat);\n                    }\n                    chart.yAxis.tickFormat(fn);\n                }\n\n                if (that.yAxisLabel) {\n                    chart.yAxis.axisLabel(that.yAxisLabel)\n                }\n\n                if (that.xTickFormat) {\n                    var fn = that.xTickFormat;\n                    if (typeof that.xTickFormat === \"string\") {\n                        fn = d3.format(that.xTickFormat);\n                    }\n                    chart.xAxis.tickFormat(fn);\n                }\n\n                if (that.xAxisLabel) {\n                    chart.xAxis.axisLabel(that.xAxisLabel)\n                }\n\n                if (that.valueFormat) {\n                    // set it on the chart\n                    var fn = that.valueFormat;\n                    if (typeof that.valueFormat === \"string\") {\n                        fn = d3.format(that.valueFormat);\n                    }\n                    chart.valueFormat(fn);\n\n                    // set it on the tooltip\n                    chart.tooltip.valueFormatter(fn);\n                }\n\n                if (that.noDataMessage) {\n                    chart.noData(that.noDataMessage);\n                }\n\n                if (that.color) {\n                    chart.color(that.color);\n                }\n\n                if (that.tooltipGenerator) {\n                    chart.tooltip.contentGenerator(that.tooltipGenerator);\n                }\n\n                if (that.groupSpacing) {\n                    chart.groupSpacing(that.groupSpacing);\n                }\n\n                d3.select(svgSelector)\n                    .datum(data_series)\n                    .transition().duration(that.transitionDuration)\n                    .call(chart);\n\n                if (that.xAxisLabelWrap) {\n                    wrapLabels({\n                        axisSelector: svgSelector + \" .nv-x.nv-axis\",\n                        maxWidth: that.marginLeft - 5,\n                        maxHeight: that.barHeight\n                    });\n                }\n\n                if (that.onUpdate) {\n                    that.onUpdate();\n                }\n\n                function updateChart() {\n                    chart.update();\n                    if (that.xAxisLabelWrap) {\n                        wrapLabels({\n                            axisSelector: svgSelector + \" .nv-x.nv-axis\",\n                            maxWidth: that.marginLeft - 5,\n                            maxHeight: that.barHeight\n                        });\n                    }\n                    if (that.onUpdate) {\n                        that.onUpdate();\n                    }\n                }\n\n                nv.utils.windowResize(updateChart);\n\n                return chart;\n            });\n        }\n    }\n}","import {Renderer} from \"../../core\";\nimport {getParam, styleClasses} from \"../../utils\";\n\nexport class ChartDataTable extends Renderer {\n    constructor(params) {\n        super();\n\n        this.includeHeaderRow = getParam(params, \"includeHeaderRow\", true);\n        this.valueFormat = getParam(params, \"valueFormat\", false);\n        this.labelFormat = getParam(params, \"labelFormat\", false);\n        this.headerFormat = getParam(params, \"headerFormat\", false);\n        this.seriesOrderFunction = getParam(params, \"seriesOrderFunction\", false);\n\n        this.namespace = \"edges-bs3-chartdatatable\";\n    }\n\n    draw() {\n        if (!this.component.dataSeries) {\n            this.component.context.html(\"Loading...\");\n            return;\n        }\n\n        let tableData = this._dataSeriesToTable();\n\n        let headFrag = \"\";\n        if (this.includeHeaderRow) {\n            for (let i = 0; i < tableData.head.length; i++) {\n                let header = tableData.head[i];\n                headFrag += \"<tr><td>\" + header.join(\"</td><td>\") + \"</td></tr>\";\n            }\n            headFrag = `<thead>${headFrag}</thead>`;\n        }\n\n        let bodyFrag = \"\";\n        for (let i = 0; i < tableData.body.length; i++) {\n            let row = tableData.body[i];\n            bodyFrag += \"<tr><td>\" + row.join(\"</td><td>\") + \"</td></tr>\";\n        }\n\n        let tableClass = styleClasses(this.namespace, \"table\", this);\n\n        let frag = `\n            <table class=\"${tableClass}\">\n                ${headFrag}\n                <tbody>${bodyFrag}</tbody>\n            </table>\n        `;\n\n        this.component.context.html(frag);\n    }\n\n    _dataSeriesToTable() {\n        let ds = this.component.dataSeries;\n        let table = {head: [], body: []};\n        if (!ds || ds.length === 0) {\n            return table;\n        }\n\n        if (this.seriesOrderFunction) {\n            ds = this.seriesOrderFunction(ds);\n        }\n\n        let headers = [\"\"];\n        for(let i = 0; i < ds.length; i++) {\n            headers.push(this._headerFormat(ds[i].key));\n        }\n        table.head.push(headers);\n\n        let ref = ds[0].values;\n        for (let i = 0; i < ref.length; i++) {\n            let refEntry = ref[i];\n            let row = [this._labelFormat(refEntry.label)];\n            for (let j = 0; j < ds.length; j++) {\n                row.push(this._valueFormat(ds[j].values[i].value));\n            }\n            table.body.push(row)\n        }\n\n        return table;\n    }\n\n    _headerFormat(val) {\n        if (!this.headerFormat) {\n            return val;\n        }\n        return this.headerFormat(val);\n    }\n\n    _labelFormat(val) {\n        if (!this.labelFormat) {\n            return val;\n        }\n        return this.labelFormat(val);\n    }\n\n    _valueFormat(val) {\n        if (!this.valueFormat) {\n            return val;\n        }\n        return this.valueFormat(val);\n    }\n}","export function extractPalette(sheetName, paletteSelector) {\n    if (!paletteSelector) {\n        paletteSelector = \"#palette\"\n    }\n\n    let palette = {};\n    for (let i = 0; i < document.styleSheets.length; i++) {\n        let sheet = document.styleSheets[i];\n        if (sheet.href && sheet.href.includes(sheetName)) {\n            for (let j = 0; j < sheet.rules.length; j++) {\n                let rule = sheet.rules[j];\n                if (rule.selectorText.startsWith(paletteSelector + \" \")) {\n                    let key = rule.selectorText.substring(paletteSelector.length + 2);\n                    palette[key] = rule.style.color;\n                }\n            }\n        }\n    }\n    return palette;\n}","import {Renderer} from \"../../core\";\nimport {getParam, styleClasses} from \"../../utils\";\n\nexport class RelativeSizeBars extends Renderer {\n    constructor(params) {\n        super(params);\n\n        this.title = getParam(params, \"title\", false);\n        this.countFormat = getParam(params, \"countFormat\", false);\n        this.noResultsText = getParam(params, \"noResultsText\", \"No data to display\")\n\n        this.namespace = \"edges-html-relativesizebars\";\n    }\n\n    draw() {\n        var title = \"\";\n        if (this.title !== false) {\n            let titleClass = styleClasses(this.namespace, \"title\", this);\n            title = `<h4 class=\"${titleClass}\">${this.title}</h4>`;\n        }\n\n        var data_series = this.component.dataSeries;\n        if (!data_series || data_series.length === 0) {\n            this.component.context.html(title + this.noResultsText);\n            return;\n        }\n\n        // this renderer will only work on a single data series\n        let ds = data_series[0];\n        if (ds.values.length === 0) {\n            this.component.context.html(title + this.noResultsText);\n            return;\n        }\n\n        // first we need to find the largest value\n        let max = 0;\n        for (let i = 0; i < ds.values.length; i++) {\n            let value = ds.values[i];\n            if (value.value > max) {\n                max = value.value;\n            }\n        }\n\n        let rows = \"\";\n        for (let i = 0; i < ds.values.length; i++) {\n            let value = ds.values[i];\n            let prog = this._calculateProgress(value.value, max);\n            let count = value.value;\n            if (this.countFormat) {\n                count = this.countFormat(count);\n            }\n            let label = `${value.label} (${count})`;\n            rows += `<tr><td>\n                <progress value=\"${prog}\" max=\"100\">${prog}</progress><br>\n                ${label}\n            </td></tr>`\n        }\n\n        let tableClass = styleClasses(this.namespace, \"table\", this);\n        let frag = `${title}<br><table class=\"${tableClass}\">${rows}</table>`;\n\n        this.component.context.html(frag);\n    }\n\n    _calculateProgress(value, max) {\n        if (max === 0) {\n            return 100;\n        }\n        if (value < 0) {\n            return 0;\n        }\n        return Math.floor((value / max) * 100);\n    }\n}","import {getParam, numFormat} from \"../utils\";\nimport {Component} from \"../core\";\nimport {es} from '../../dependencies/es'\n\nexport class MultiDateRangeEntry extends Component {\n    constructor(params) {\n        super(params);\n\n        ///////////////////////////////////////////////\n        // fields that can be passed in, and their defaults\n\n        // free text to prefix entry boxes with\n        // this.display = getParam(params, \"display\", false);\n\n        // list of field objects, which provide the field itself, and the display name.  e.g.\n        // [{field : \"monitor.rioxxterms:publication_date\", display: \"Publication Date\"}]\n        this.fields = getParam(params, \"fields\", []);\n\n        // map from field name (as in this.field[n].field) to a function which will provide\n        // the earliest allowed date for that field.  e.g.\n        // {\"monitor.rioxxterms:publication_date\" : earliestDate}\n        this.earliest = getParam(params, \"earliest\", {});\n\n        // map from field name (as in this.field[n].field) to a function which will provide\n        // the latest allowed date for that field.  e.g.\n        // {\"monitor.rioxxterms:publication_date\" : latestDate}\n        this.latest = getParam(params, \"latest\", {});\n\n        this.autoLookupRange = getParam(params, \"autoLookupRange\", false);\n\n        // category for this component, defaults to \"selector\"\n        this.category = getParam(params, \"category\", \"selector\");\n\n        // default earliest date to use in all cases (defaults to start of the unix epoch)\n        this.defaultEarliest = getParam(params, \"defaultEarliest\", new Date(0));\n\n        // default latest date to use in all cases (defaults to now)\n        this.defaultLatest = getParam(params, \"defaultLatest\", new Date());\n\n        ///////////////////////////////////////////////\n        // fields used to track internal state\n\n        this.currentField = false;\n        this.fromDate = false;\n        this.toDate = false;\n\n        this.touched = false;\n        this.dateOptions = {};\n    }\n\n    init(edge) {\n        super.init(edge);\n\n        // set the initial field\n        this.currentField = this.fields[0].field;\n\n        // track the last field, for query building purposes\n        this.lastField = false;\n\n        // if required, load the dates once at init\n        if (!this.autoLookupRange) {\n            this.loadDates();\n        } else {\n            if (edge.secondaryQueries === false) {\n                edge.secondaryQueries = {};\n            }\n            edge.secondaryQueries[\"multidaterange_\" + this.id] = this.getSecondaryQueryFunction();\n        }\n    }\n\n    synchronise() {\n        this.currentField = false;\n        this.fromDate = false;\n        this.toDate = false;\n\n        if (this.autoLookupRange) {\n            for (var i = 0; i < this.fields.length; i++) {\n                var field = this.fields[i].field;\n                var agg = this.edge.secondaryResults[\"multidaterange_\" + this.id].aggregation(field);\n\n                var min = this.defaultEarliest;\n                var max = this.defaultLatest;\n                if (agg.min !== null) {\n                    min = new Date(agg.min);\n                }\n                if (agg.max !== null) {\n                    max = new Date(agg.max);\n                }\n\n                this.dateOptions[field] = {\n                    earliest: min,\n                    latest: max\n                }\n            }\n        }\n\n        for (var i = 0; i < this.fields.length; i++) {\n            var field = this.fields[i].field;\n            var filters = this.edge.currentQuery.listMust(new es.RangeFilter({field: field}));\n            if (filters.length > 0) {\n                this.currentField = field;\n                var filter = filters[0];\n                this.fromDate = filter.gte;\n                this.toDate = filter.lt;\n            }\n        }\n\n        if (!this.currentField && this.fields.length > 0) {\n            this.currentField = this.fields[0].field;\n        }\n    }\n\n    //////////////////////////////////////////////\n    // functions that can be used to trigger state change\n\n    currentEarliest() {\n        if (!this.currentField) {\n            return false;\n        }\n        if (this.dateOptions[this.currentField]) {\n            return this.dateOptions[this.currentField].earliest;\n        }\n    }\n\n    currentLatest() {\n        if (!this.currentField) {\n            return false;\n        }\n        if (this.dateOptions[this.currentField]) {\n            return this.dateOptions[this.currentField].latest;\n        }\n    }\n\n    changeField(newField) {\n        this.lastField = this.currentField;\n        if (newField !== this.currentField) {\n            this.touched = true;\n            this.currentField = newField;\n        }\n    }\n\n    setFrom(from) {\n        if (from !== this.fromDate) {\n            this.touched = true;\n            this.fromDate = from;\n        }\n    }\n\n    setTo(to) {\n        if (to !== this.toDate) {\n            this.touched = true;\n            this.toDate = to;\n        }\n    }\n\n    triggerSearch() {\n        if (this.touched) {\n            this.touched = false;\n            var nq = this.edge.cloneQuery();\n\n            // remove any old filters managed by this component\n            var removeCount = 0;\n            for (var i = 0; i < this.fields.length; i++) {\n                var fieldName = this.fields[i].field;\n                removeCount += nq.removeMust(new es.RangeFilter({field: fieldName}));\n            }\n\n            // in order to avoid unnecessary searching, check the state of the data and determine\n            // if we need to.\n            // - we need to add a new filter to the query if there is a current field and one/both of from and to dates\n            // - we need to do a search if we removed filters before, or are about to add one\n            var addFilter = this.currentField && (this.toDate || this.fromDate);\n            var doSearch = removeCount > 0 || addFilter;\n\n            // if we're not going to do a search, return\n            if (!doSearch) {\n                return false;\n            }\n\n            // if there's a filter to be added, do that here\n            if (addFilter) {\n                var range = {field: this.currentField};\n                if (this.toDate) {\n                    range[\"lte\"] = this.formatDateForQuery(this.toDate);\n                }\n                if (this.fromDate) {\n                    range[\"gte\"] = this.formatDateForQuery(this.fromDate);\n                }\n                nq.addMust(new es.RangeFilter(range));\n            }\n\n            // push the new query and trigger the search\n            this.edge.pushQuery(nq);\n            this.edge.cycle();\n\n            return true;\n        }\n    }\n\n    formatDateForQuery(date) {\n        let zeroPadder = numFormat({zeroPadding: 2})\n        return date.getUTCFullYear() + \"-\" + zeroPadder(date.getUTCMonth() + 1) + \"-\" + zeroPadder(date.getUTCDate())\n    }\n\n    loadDates() {\n        for (var i = 0; i < this.fields.length; i++) {\n            var field = this.fields[i].field;\n\n            // start with the default earliest and latest\n            var early = this.defaultEarliest;\n            var late = this.defaultLatest;\n\n            // if specific functions are provided for getting the dates, run them\n            var earlyFn = this.earliest[field];\n            var lateFn = this.latest[field];\n            if (earlyFn) {\n                early = earlyFn();\n            }\n            if (lateFn) {\n                late = lateFn();\n            }\n\n            this.dateOptions[field] = {\n                earliest: early,\n                latest: late\n            }\n        }\n    };\n\n    getSecondaryQueryFunction() {\n        var that = this;\n        return function(edge) {\n            // clone the current query, which will be the basis for the averages query\n            var query = edge.cloneQuery();\n\n            // remove any range constraints\n            for (var i = 0; i < that.fields.length; i++) {\n                var field = that.fields[i];\n                query.removeMust(new es.RangeFilter({field: field.field}));\n            }\n\n            // remove any existing aggregations, we don't need them\n            query.clearAggregations();\n\n            // add the new aggregation(s) which will actually get the data\n            for (var i = 0; i < that.fields.length; i++) {\n                var field = that.fields[i].field;\n                query.addAggregation(\n                    new es.StatsAggregation({\n                        name: field,\n                        field : field\n                    })\n                );\n            }\n\n            // finally set the size and from parameters\n            query.size = 0;\n            query.from = 0;\n\n            // return the secondary query\n            return query;\n        }\n    }\n}","import {Renderer} from \"../../core\";\nimport {getParam, htmlID, idSelector, objClosure, styleClasses, on} from \"../../utils\";\n\n// FIXME: we'd like to retire moment, as the project has announced it has run its course, but that\n// requires some work to unpick\nimport {moment} from \"../../../dependencies/moment\";\n\n// FIXME: on a related note, we need to retire the jquery daterangepicker too as it depends on\n// moment.  This looks like a viable alternative: https://litepicker.com/\n\nexport class MultiDateRangeCombineSelector extends Renderer {\n    constructor(params) {\n        super(params);\n\n        ///////////////////////////////////////////////////\n        // parameters that can be passed in\n        this.dateFormat = getParam(params, \"dateFormat\", \"MMMM D, YYYY\");\n\n        this.useSelect2 = getParam(params, \"useSelect2\", false);\n\n        this.ranges = getParam(params, \"ranges\", false);\n\n        ///////////////////////////////////////////////////\n        // parameters for tracking internal state\n\n        this.dre = false;\n\n        this.selectId = false;\n        this.rangeId = false;\n\n        this.selectJq = false;\n        this.rangeJq = false;\n\n        this.drp = false;\n\n        this.namespace = \"edges-bs3-multidaterangecombineselector\";\n    }\n\n    draw() {\n        var dre = this.component;\n\n        var selectClass = styleClasses(this.namespace, \"select\", this);\n        var inputClass = styleClasses(this.namespace, \"input\", this);\n        var prefixClass = styleClasses(this.namespace, \"prefix\", this);\n\n        this.selectId = htmlID(this.namespace, dre.id + \"_date-type\", this);\n        this.rangeId = htmlID(this.namespace, dre.id + \"_range\", this);\n        var pluginId = htmlID(this.namespace, dre.id + \"_plugin\", this);\n\n        var options = \"\";\n        for (var i = 0; i < dre.fields.length; i++) {\n            var field = dre.fields[i];\n            var selected = dre.currentField === field.field ? ' selected=\"selected\" ' : \"\";\n            options += '<option value=\"' + field.field + '\"' + selected + '>' + field.display + '</option>';\n        }\n\n        var frag = '<div class=\"form-inline\">';\n\n        if (dre.display) {\n            frag += '<span class=\"' + prefixClass + '\">' + dre.display + '</span>';\n        }\n\n        frag += '<div class=\"form-group\"><select class=\"' + selectClass + ' form-control\" name=\"' + this.selectId + '\" id=\"' + this.selectId + '\">' + options + '</select></div>';\n\n        frag += '<div id=\"' + this.rangeId + '\" class=\"' + inputClass + ' form-control\">\\\n            <i class=\"glyphicon glyphicon-calendar\"></i>&nbsp;\\\n            <span></span> <b class=\"caret\"></b>\\\n        </div>';\n\n        frag += \"</div>\";\n\n        dre.context.html(frag);\n\n        var selectIdSelector = idSelector(this.namespace, dre.id + \"_date-type\", this);\n        var rangeIdSelector = idSelector(this.namespace, dre.id + \"_range\", this);\n\n        this.selectJq = dre.jq(selectIdSelector);\n        this.rangeJq = dre.jq(rangeIdSelector);\n\n        var cb = objClosure(this, \"updateDateRange\", [\"start\", \"end\"]);\n        var props = {\n            locale: {\n                format: \"DD/MM/YYYY\"\n            },\n            opens: \"left\"\n        };\n        if (this.ranges) {\n            props[\"ranges\"] = this.ranges;\n        }\n\n        // clear out any old version of the plugin, as these are appended to the document\n        // and not kept within the div controlled by this renderer\n        var pluginSelector = idSelector(this.namespace, dre.id + \"_plugin\", this);\n        $(pluginSelector).remove();\n\n        this.rangeJq.daterangepicker(props, cb);\n        this.drp = this.rangeJq.data(\"daterangepicker\");\n        this.drp.container.attr(\"id\", pluginId).addClass(\"show-calendar\");\n\n        this.prepDates();\n\n        if (this.useSelect2) {\n            this.selectJq.select2();\n        }\n        on(selectIdSelector, \"change\", this, \"typeChanged\");\n    }\n\n    dateRangeDisplay(params) {\n        var start = params.start;\n        var end = params.end;\n        this.rangeJq.find(\"span\").html(start.utc().format(this.dateFormat) + ' - ' + end.utc().format(this.dateFormat));\n    }\n\n    updateDateRange(params) {\n        var start = params.start;\n        var end = params.end;\n\n        // a date or type has been changed, so set up the parent object\n\n        // ensure that the correct field is set (it may initially be not set)\n        var date_type = null;\n        if (this.useSelect2) {\n            date_type = this.selectJq.select2(\"val\");\n        } else {\n            date_type = this.selectJq.val();\n        }\n\n        this.component.changeField(date_type);\n\n        this.component.setFrom(start.toDate());\n        this.component.setTo(end.toDate());\n        this.dateRangeDisplay(params);\n\n        // this action should trigger a search (the parent object will\n        // decide if that's required)\n        var triggered = this.component.triggerSearch();\n\n        // if a search didn't get triggered, we still may need to modify the min/max specified dates\n        if (!triggered) {\n            this.prepDates();\n        }\n    }\n\n    typeChanged(element) {\n        // ensure that the correct field is set (it may initially be not set)\n        var date_type = null;\n        if (this.useSelect2) {\n            date_type = this.selectJq.select2(\"val\");\n        } else {\n            date_type = this.selectJq.val();\n        }\n\n        this.component.changeField(date_type);\n\n        // unset the range\n        this.component.setFrom(false);\n        this.component.setTo(false);\n\n        // this action should trigger a search (the parent object will\n        // decide if that's required)\n        var triggered = this.component.triggerSearch();\n\n        // if a search didn't get triggered, we still may need to modify the min/max specified dates\n        if (!triggered) {\n            this.prepDates();\n        }\n    }\n\n    prepDates() {\n        var min = this.component.currentEarliest();\n        var max = this.component.currentLatest();\n        var fr = this.component.fromDate;\n        var to = this.component.toDate;\n\n        if (min) {\n            this.drp.minDate = moment(min);\n            this.drp.setStartDate(moment(min));\n        } else {\n            this.drp.minDate = moment(this.component.defaultEarliest);\n            this.drp.setStartDate(moment(this.component.defaultEarliest));\n        }\n\n        if (max) {\n            this.drp.maxDate = moment(max);\n            this.drp.setEndDate(moment(max));\n        } else {\n            this.drp.maxDate = moment(this.component.defaultLatest);\n            this.drp.setEndDate(moment(this.component.defaultLatest));\n        }\n\n        if (fr) {\n            // if from lies before the min date, extend the min range\n            if (fr < this.drp.minDate) {\n                this.drp.minDate = moment(fr);\n            }\n            // if from lies after the max date, extend the max range\n            if (fr > this.drp.maxDate) {\n                this.drp.maxDate = moment(fr);\n            }\n            this.drp.setStartDate(moment(fr));\n        }\n        if (to) {\n            // if to lies before the min date, extend the min range\n            if (to < this.drp.minDate) {\n                this.drp.minDate = moment(to);\n            }\n            // if to lies after the max date, extend the max range\n            if (to > this.drp.maxDate) {\n                this.drp.maxDate = moment(to);\n            }\n            this.drp.setEndDate(moment(to));\n        }\n\n        this.dateRangeDisplay({start: this.drp.startDate, end: this.drp.endDate});\n    }\n}\n"],"names":["Distance","require","ClusterInit","eudist","mandist","dist","kmrand","kmpp","MAX","init","len","val","v","i","skmeans","data","k","initial","maxit","ks","old","idxs","conv","it","length","vlen","multi","count","idx","Math","floor","random","push","min","Infinity","j","abs","sum","dif","vsum","vect","h","ksj","sumj","oldj","cj","centroids","module","exports","v1","v2","sqrt","d","map","t","key","join","Error","distance","c","dists","lk","dsum","prs","pr","cs","sort","a","b","rnd"],"version":3,"file":"g001.js.map"}